{"url": "https://blog.csdn.net/2201_75296675/article/details/134912138", "article_id": 134912138, "username": "2201_75296675", "title": "jQuery & DOM", "body": "<h2>使用jQuery操作DOM</h2>\n\n<p>dom : 文档对象模型    就是HTML元素  </p>\n\n<p>$()   函数的2个用法:</p>\n\n<p>用法1:放入一个字符串(选择器)表示获取元素   例如</p>\n\n<blockquote>\n<p>$(\"p\") $(\"#abc\")  $(\".del\")</p>\n</blockquote>\n\n<p>用法2:放入一个函数，表示文档就绪函数   例如 </p>\n\n<blockquote>\n<p> $(function(){代码...})</p>\n</blockquote>\n\n<p>用法3:如下所示</p>\n\n<p>jquery创建节点的方法如下：</p>\n\n<p>1.创建节点 语法如下:</p>\n\n<blockquote>\n<p>$(\"xxxxx\");</p>\n</blockquote>\n\n<p>xxx表示你要创建的dom元素   例如  $(\"&lt;p&gt;我是p标签&lt;p&gt;\");</p>\n\n<p>此时仅仅是创建了节点.理解为是孤儿节点.  需要将其插入到某个节点中.</p>\n\n<p>插入方法1:</p>\n\n<p>append() 表示插入到指定元素内部的尾端.</p>\n\n<p>语法如下:</p>\n\n<blockquote>\n<p>$(\"aa\").append(\"bb\")  </p>\n</blockquote>\n\n<p> </p>\n\n<p>表示将bb插入到aa内部的尾端</p>\n\n<p>插入方法2:prepend() 表示插入到指定元素内部的首端.</p>\n\n<p>语法如下:</p>\n\n<blockquote>\n<p>$(\"aa\").prepend(\"bb\")</p>\n</blockquote>\n\n<p> 表示将bb插入到aa内部的首端</p>\n\n<p>插入方法3:after() 表示插入到指定元素的后面. 兄弟关系</p>\n\n<p>语法如下:</p>\n\n<blockquote>\n<p>$(\"aa\").after(\"bb\")  </p>\n</blockquote>\n\n<p> </p>\n\n<p>表示将bb插入到aa的后面</p>\n\n<p>插入方法4:before() 表示插入到指定元素的前面. 兄弟关系</p>\n\n<p>语法如下:</p>\n\n<blockquote>\n<p>$(\"aa\").before(\"bb\")</p>\n</blockquote>\n\n<p> 表示将bb插入到aa的前面</p>\n\n<p>上述的方法 可以实现 在任意位置创建新的节点.</p>\n\n<p>下述的方法 可以实现 删除任意位置的节点:</p>\n\n<p>方法1:  remove()</p>\n\n<p>语法如下:  </p>\n\n<blockquote>\n<p>$(\"xx\").remove();</p>\n</blockquote>\n\n<p> </p>\n\n<p> 将xx元素彻底删除  不仅删除了值 而且删除了标签  </p>\n\n<p>方法2:  empty()  清空</p>\n\n<p>语法如下:  </p>\n\n<blockquote>\n<p>$(\"xx\").empty();</p>\n</blockquote>\n\n<p> </p>\n\n<p> 将xx元素删除值 但是不删除标签  </p>\n\n<p>克隆节点</p>\n\n<p>语法如下:  </p>\n\n<blockquote>\n<p>$(\"xxx\").clone();</p>\n</blockquote>\n\n<p> 将xxx元素复制一份</p>\n\n<p>注意事项:上一步仅仅只是复制   此时理解为孤儿节点. 任然需要通过append  prepend  after  before进行粘贴</p>\n\n<p> </p>\n", "status": 1, "cleanedContent": "<h2>使用jQuery操作DOM</h2> <p>dom : 文档对象模型 就是HTML元素 </p> <p>$() 函数的2个用法:</p> <p>用法1:放入一个字符串(选择器)表示获取元素 例如</p> <blockquote> <p>$(\"p\") $(\"#abc\") $(\".del\")</p> </blockquote> <p>用法2:放入一个函数，表示文档就绪函数 例如 </p> <blockquote> <p> $(function(){代码...})</p> </blockquote> <p>用法3:如下所示</p> <p>jquery创建节点的方法如下：</p> <p>1.创建节点 语法如下:</p> <blockquote> <p>$(\"xxxxx\");</p> </blockquote> <p>xxx表示你要创建的dom元素 例如 $(\"<p>我是p标签<p>\");</p> <p>此时仅仅是创建了节点.理解为是孤儿节点. 需要将其插入到某个节点中.</p> <p>插入方法1:</p> <p>append() 表示插入到指定元素内部的尾端.</p> <p>语法如下:</p> <blockquote> <p>$(\"aa\").append(\"bb\") </p> </blockquote> <p> </p> <p>表示将bb插入到aa内部的尾端</p> <p>插入方法2:prepend() 表示插入到指定元素内部的首端.</p> <p>语法如下:</p> <blockquote> <p>$(\"aa\").prepend(\"bb\")</p> </blockquote> <p> 表示将bb插入到aa内部的首端</p> <p>插入方法3:after() 表示插入到指定元素的后面. 兄弟关系</p> <p>语法如下:</p> <blockquote> <p>$(\"aa\").after(\"bb\") </p> </blockquote> <p> </p> <p>表示将bb插入到aa的后面</p> <p>插入方法4:before() 表示插入到指定元素的前面. 兄弟关系</p> <p>语法如下:</p> <blockquote> <p>$(\"aa\").before(\"bb\")</p> </blockquote> <p> 表示将bb插入到aa的前面</p> <p>上述的方法 可以实现 在任意位置创建新的节点.</p> <p>下述的方法 可以实现 删除任意位置的节点:</p> <p>方法1: remove()</p> <p>语法如下: </p> <blockquote> <p>$(\"xx\").remove();</p> </blockquote> <p> </p> <p> 将xx元素彻底删除 不仅删除了值 而且删除了标签 </p> <p>方法2: empty() 清空</p> <p>语法如下: </p> <blockquote> <p>$(\"xx\").empty();</p> </blockquote> <p> </p> <p> 将xx元素删除值 但是不删除标签 </p> <p>克隆节点</p> <p>语法如下: </p> <blockquote> <p>$(\"xxx\").clone();</p> </blockquote> <p> 将xxx元素复制一份</p> <p>注意事项:上一步仅仅只是复制 此时理解为孤儿节点."}
{"url": "https://blog.csdn.net/m0_73653902/article/details/134912206", "article_id": 134912206, "username": "m0_73653902", "title": "机组第三章复习", "body": "<h1>1、CPU功能和基本结构</h1>\n\n<p><img alt=\"d59ff4b274f34a91a463ad24f27e8955.png\" src=\"https://img-blog.csdnimg.cn/direct/d59ff4b274f34a91a463ad24f27e8955.png\" /></p>\n\n<p><img alt=\"a2fc26ab77d44ae48058ef3715fc9f96.png\" src=\"https://img-blog.csdnimg.cn/direct/a2fc26ab77d44ae48058ef3715fc9f96.png\" /></p>\n\n<p><img alt=\"bbec0a69d8a445a087ebca14ef462e3d.png\" src=\"https://img-blog.csdnimg.cn/direct/bbec0a69d8a445a087ebca14ef462e3d.png\" /></p>\n\n<p><img alt=\"7693cf71a2b74cf99bbd3e0c6ee15559.png\" src=\"https://img-blog.csdnimg.cn/direct/7693cf71a2b74cf99bbd3e0c6ee15559.png\" /></p>\n\n<p>移位寄存器的作用：是对运算结果进行移位运算；等ALU的信号稳定后，再将里面存放的结果信息输出</p>\n\n<p><img alt=\"c108904ae38140f0b352a80cf62c7748.png\" src=\"https://img-blog.csdnimg.cn/direct/c108904ae38140f0b352a80cf62c7748.png\" /></p>\n\n<p>橙色代表用户可见；灰色代表用户不可见</p>\n\n<p><img alt=\"88f6357630194d408080f93d2375ed70.png\" src=\"https://img-blog.csdnimg.cn/direct/88f6357630194d408080f93d2375ed70.png\" /></p>\n\n<p><img alt=\"41f6e3b9e26e4d4eafb58ff479cb1912.png\" src=\"https://img-blog.csdnimg.cn/direct/41f6e3b9e26e4d4eafb58ff479cb1912.png\" /></p>\n\n<h1>2、指令周期的数据流</h1>\n\n<p><img alt=\"ad56ce71345b4cda85db5d7a608d0c10.png\" src=\"https://img-blog.csdnimg.cn/direct/ad56ce71345b4cda85db5d7a608d0c10.png\" /></p>\n\n<p><img alt=\"c1e604f82c204e03819cec0d8738b508.png\" src=\"https://img-blog.csdnimg.cn/direct/c1e604f82c204e03819cec0d8738b508.png\" /></p>\n\n<p><img alt=\"71125aafe29844e9a07e672ba7240059.png\" src=\"https://img-blog.csdnimg.cn/direct/71125aafe29844e9a07e672ba7240059.png\" /></p>\n\n<p><img alt=\"d864f88571f9418e9aefc7a99cd0582f.png\" src=\"https://img-blog.csdnimg.cn/direct/d864f88571f9418e9aefc7a99cd0582f.png\" /></p>\n\n<p><img alt=\"be329d01e09643a3bfe7eb9557e41616.png\" src=\"https://img-blog.csdnimg.cn/direct/be329d01e09643a3bfe7eb9557e41616.png\" /></p>\n\n<p><img alt=\"152205711541467ab1182a648af95b15.png\" height=\"368\" src=\"https://img-blog.csdnimg.cn/direct/152205711541467ab1182a648af95b15.png\" width=\"686\" /></p>\n\n<p><span style=\"color:#1c7892;\"><strong>如果数据存储在CPU内部的寄存器中，那么取寄存器里的数据就不需要再从PC里取数据了，直接由（R）-&gt; MAR，否则就是先从PC里面取出指令，即（PC）-&gt; MAR</strong></span></p>\n\n<p></p>\n\n<p><img alt=\"a7ed3fa5fd02415dbde678e648dc6d50.png\" src=\"https://img-blog.csdnimg.cn/direct/a7ed3fa5fd02415dbde678e648dc6d50.png\" /></p>\n\n<p></p>\n\n<h1>3、单总线结构（需要先将一个操作数放在寄存器中）</h1>\n\n<p><img alt=\"53dfe4ddb92e48ed99444668e851cc22.png\" src=\"https://img-blog.csdnimg.cn/direct/53dfe4ddb92e48ed99444668e851cc22.png\" /></p>\n\n<p><img alt=\"6d28073dfeb74c2a8e6f1f93338a3b46.png\" src=\"https://img-blog.csdnimg.cn/direct/6d28073dfeb74c2a8e6f1f93338a3b46.png\" /></p>\n\n<p><img alt=\"58a854bcfb4d4c8996969231c0f12993.png\" src=\"https://img-blog.csdnimg.cn/direct/58a854bcfb4d4c8996969231c0f12993.png\" /></p>\n\n<p><img alt=\"2d477c96698a402aa00e1230bb316b83.png\" src=\"https://img-blog.csdnimg.cn/direct/2d477c96698a402aa00e1230bb316b83.png\" /></p>\n\n<p><img alt=\"74d4d1339c7047d5b719c4927794aef8.png\" src=\"https://img-blog.csdnimg.cn/direct/74d4d1339c7047d5b719c4927794aef8.png\" /></p>\n\n<p><img alt=\"3cfa02b831414e90831aeeafb5e08206.png\" src=\"https://img-blog.csdnimg.cn/direct/3cfa02b831414e90831aeeafb5e08206.png\" /></p>\n\n<h1>4、硬布线控制器的设计</h1>\n\n<p><img alt=\"3c578c3cce4b4232a14f154ffb200eca.png\" src=\"https://img-blog.csdnimg.cn/direct/3c578c3cce4b4232a14f154ffb200eca.png\" /></p>\n\n<p><img alt=\"583cb19a3f9e46fd95a7920b91a0a36c.png\" src=\"https://img-blog.csdnimg.cn/direct/583cb19a3f9e46fd95a7920b91a0a36c.png\" /></p>\n\n<p><img alt=\"b510c19224ca47afa6135f930bd2e2e6.png\" src=\"https://img-blog.csdnimg.cn/direct/b510c19224ca47afa6135f930bd2e2e6.png\" /></p>\n\n<p><img alt=\"066a4fadb68f4f4fa7732fe392d1838e.png\" src=\"https://img-blog.csdnimg.cn/direct/066a4fadb68f4f4fa7732fe392d1838e.png\" /></p>\n\n<p><img alt=\"893430496f744d35a9218c841db5fe4d.png\" src=\"https://img-blog.csdnimg.cn/direct/893430496f744d35a9218c841db5fe4d.png\" /></p>\n\n<p></p>\n\n<p></p>\n\n<h1>5、微程序控制器的基本原理</h1>\n\n<p><img alt=\"\" height=\"636\" src=\"https://img-blog.csdnimg.cn/direct/1cc2a09af15e446e8779f42b805a1e75.png\" width=\"1071\" /></p>\n\n<p><img alt=\"\" height=\"696\" src=\"https://img-blog.csdnimg.cn/direct/2392df5e730f48a0bcb6f6ac0852fada.png\" width=\"1200\" /></p>\n\n<p><img alt=\"\" height=\"654\" src=\"https://img-blog.csdnimg.cn/direct/a73b62d169c146849d2cb48daea51fd7.png\" width=\"1200\" /></p>\n\n<p><img alt=\"\" height=\"654\" src=\"https://img-blog.csdnimg.cn/direct/dbb59a9ef4b54e8faf80762db3f0ed7f.png\" width=\"1200\" /></p>\n\n<p><img alt=\"\" height=\"692\" src=\"https://img-blog.csdnimg.cn/direct/00ec1e498d1d402eba51aa6843c4171a.png\" width=\"1200\" /></p>\n\n<p><span style=\"color:#9c8ec1;\"><strong>0就代表如果没有进入中断周期，就直接跳转回下一条指令的取值阶段</strong></span></p>\n\n<p><img alt=\"\" height=\"693\" src=\"https://img-blog.csdnimg.cn/direct/7432c182feb6448bb4c1ff1b59e9ff5a.png\" width=\"1200\" /></p>\n\n<p><img alt=\"\" height=\"665\" src=\"https://img-blog.csdnimg.cn/direct/7423eff6d2aa49e4b9aba90a25582e53.png\" width=\"1200\" /></p>\n\n<p></p>\n\n<h1>6、微指令的设计</h1>\n\n<p><img alt=\"\" height=\"623\" src=\"https://img-blog.csdnimg.cn/direct/c7926587609649c5834349bc3587d740.png\" width=\"906\" /></p>\n\n<p><img alt=\"\" height=\"653\" src=\"https://img-blog.csdnimg.cn/direct/e53619875c1a498f9f766651bbbc3985.png\" width=\"1169\" /></p>\n\n<p><img alt=\"\" height=\"677\" src=\"https://img-blog.csdnimg.cn/direct/2fd28b4fee674e559410251d4a385ed7.png\" width=\"1187\" /><img alt=\"\" height=\"701\" src=\"https://img-blog.csdnimg.cn/direct/fea1552434694a41b82d3b8cd742eaf0.png\" width=\"1196\" /></p>\n\n<p><img alt=\"\" height=\"641\" src=\"https://img-blog.csdnimg.cn/direct/8c0f4b8ad48f4e7eb8641cf3c0e4a9ce.png\" width=\"1160\" /></p>\n\n<p></p>\n", "status": 2, "cleanedContent": "<h1>1、CPU功能和基本结构</h1> <p><img alt=\"d59ff4b274f34a91a463ad24f27e8955.png\" src=\"\" /></p> <p><img alt=\"a2fc26ab77d44aeef3715fc9f96.png\" src=\"\" /></p> <p><img alt=\"bbec0a69d8a445a087ebca14ef462e3d.png\" src=\"\" /></p> <p><img alt=\"7693cf71a2b74cf99bbd3e0c6ee.png\" src=\"\" /></p> <p>移位寄存器的作用：是对运算结果进行移位运算；等ALU的信号稳定后，再将里面存放的结果信息输出</p> <p><img alt=\"caef0b352a80cf62c7748.png\" src=\"\" /></p> <p>橙色代表用户可见；灰色代表用户不可见</p> <p><img alt=\"88fdf93d2375ed70.png\" src=\"\" /></p> <p><img alt=\"41f6e3b9e26e4d4eafb58ff479cb1912.png\" src=\"\" /></p> <h1>2、指令周期的数据流</h1> <p><img alt=\"ad56ceb4cda85db5d7a608d0c10.png\" src=\"\" /></p> <p><img alt=\"c1e604f82c204e03819cec0d8738b508.png\" src=\"\" /></p> <p><img alt=\"aafee9a07e672ba.png\" src=\"\" /></p> <p><img alt=\"d864ff9418e9aefc7a99cd0582f.png\" src=\"\" /></p> <p><img alt=\"be329d01e09643a3bfe7eb9557e.png\" src=\"\" /></p> <p><img alt=\"ab1182a648af95b15.png\" height=\"368\" src=\"\" width=\"686\" /></p> <p><span style=\"color:#1c7892;\"><strong>如果数据存储在CPU内部的寄存器中，那么取寄存器里的数据就不需要再从PC里取数据了，直接由（R）-> MAR，否则就是先从PC里面取出指令，即（PC）-> MAR</strong></span></p> <p></p> <p><img alt=\"a7ed3fa5fd02415dbde678e648dc6d50.png\" src=\"\" /></p> <p></p> <h1>3、单总线结构（需要先将一个操作数放在寄存器中）</h1> <p><img alt=\"53dfe4ddb92e48ede851cc22.png\" src=\"\" /></p> <p><img alt=\"6ddfeb74c2a8e6f1fa3b46.png\" src=\"\" /></p> <p><img alt=\"58a854bcfb4d4cc0f.png\" src=\"\" /></p> <p><img alt=\"2d477ca402aa00e1230bb316b83.png\" src=\"\" /></p> <p><img alt=\"74d4d1339c7047d5b719caef8.png\" src=\"\" /></p> <p><img alt=\"3cfa02beaeeafb5e08206.png\" src=\"\" /></p> <h1>4、硬布线控制器的设计</h1> <p><img alt=\"3c578c3cce4b4232a14f154ffb200eca.png\" src=\"\" /></p> <p><img alt=\"583cb19a3f9e46fd95a7920b91a0a36c.png\" src=\"\" /></p> <p><img alt=\"b510cca47afa6135f930bd2e2e6.png\" src=\"\" /></p> <p><img alt=\"066a4fadb68f4f4fa7732fe392d1838e.png\" src=\"\" /></p> <p><img alt=\"f744d35a9218c841db5fe4d.png\" src=\"\" /></p> <p></p> <p></p> <h1>5、微程序控制器的基本原理</h1> <p><img alt=\"\" height=\"636\" src=\"\" width=\"1071\" /></p> <p><img alt=\"\" height=\"696\" src=\"\" width=\"1200\" /></p> <p><img alt=\"\" height=\"654\" src=\"\" width=\"1200\" /></p> <p><img alt=\"\" height=\"654\" src=\"\" width=\"1200\" /></p> <p><img alt=\"\" height=\"692\" src=\"\" width=\"1200\" /></p> <p><span style=\"color:#9c8ec1;\""}
{"url": "https://blog.csdn.net/bananananana_123/article/details/134912405", "article_id": 134912405, "username": "bananananana_123", "title": "jq的css中的样式", "body": "<h2><a id=\"_jQuery__css__0\"></a>在 jQuery 中，可以使用 .css() 方法来设置元素的样式。</h2>\n<h2><a id=\"_1\"></a>设置单个样式属性：</h2>\n<pre><code class=\"prism language-html\">$(selector).css(propertyName, value);\n</code></pre>\n<h3><a id=\"_6\"></a>例如，设置元素的背景颜色为红色：</h3>\n<pre><code class=\"prism language-html\">$(\"#myElement\").css(\"background-color\", \"red\");\n</code></pre>\n<h3><a id=\"_11\"></a>设置多个样式属性：</h3>\n<pre><code class=\"prism language-html\">$(selector).css({propertyName1: value1, propertyName2: value2, ...});\n</code></pre>\n<h5><a id=\"2_15\"></a>例如，设置元素的背景颜色为红色、字体颜色为白色、边框宽度为2像素：</h5>\n<pre><code class=\"prism language-html\">$(\"#myElement\").css({\n\"background-color\": \"red\",\n\"color\": \"white\",\n\"border-width\": \"2px\"\n});\n</code></pre>\n<h3><a id=\"_24\"></a>注意事项：</h3>\n<ul>\n<li>CSS 属性名在 JavaScript 中需要使用驼峰命名法，例如 background-color 在 JavaScript 中应写成<br>\n“backgroundColor”。</li>\n<li>如果要获取元素的样式属性值，可以使用 .css() 方法的无参形式，即不传入参数。</li>\n<li>可以使用函数作为值来动态设置样式属性，例如：</li>\n</ul>\n<pre><code class=\"prism language-html\">$(\"#myElement\").css(\"width\", function(index, value) {\nreturn parseInt(value) + 50 + \"px\";\n});\n</code></pre>\n<p>上述代码会将元素的宽度增加 50 像素。<br>\n请注意，这只是使用 jQuery 的一种方式来设置元素的样式。在现代 Web 开发中，更多的开发者选择使用原生 JavaScript 的方法来操作元素的样式，例如使用 .style 属性直接访问和设置元素的样式。</p>\n<h3><a id=\"_jQuery__css__CSS__39\"></a>当使用 jQuery 的 .css() 方法设置样式时，可以使用各种 CSS 属性来控制元素的外观。</h3>\n<p>下面是一些常见的 CSS 属性及其在 jQuery 中的设置方式示例：</p>\n<h4><a id=\"_42\"></a>设置宽度和高度：</h4>\n<pre><code class=\"prism language-html\">$(\"#myElement\").css(\"width\", \"200px\");\n$(\"#myElement\").css(\"height\", \"100px\");\n</code></pre>\n<h4><a id=\"_48\"></a>设置背景颜色和图片：</h4>\n<pre><code class=\"prism language-html\">$(\"#myElement\").css(\"background-color\", \"red\");\n$(\"#myElement\").css(\"background-image\", \"url('image.jpg')\");\n</code></pre>\n<h4><a id=\"_55\"></a>设置字体样式：</h4>\n<pre><code class=\"prism language-html\">$(\"#myElement\").css(\"font-size\", \"16px\");\n$(\"#myElement\").css(\"font-weight\", \"bold\");\n</code></pre>\n<h4><a id=\"_62\"></a>设置边框样式：</h4>\n<pre><code class=\"prism language-html\">$(\"#myElement\").css(\"border-width\", \"2px\");\n$(\"#myElement\").css(\"border-color\", \"blue\");\n$(\"#myElement\").css(\"border-style\", \"dashed\");\n</code></pre>\n<h5><a id=\"_70\"></a>设置内边距和外边距：</h5>\n<pre><code class=\"prism language-html\">$(\"#myElement\").css(\"padding\", \"10px\");\n$(\"#myElement\").css(\"margin\", \"20px\");\n</code></pre>\n<h4><a id=\"_77\"></a>设置文本对齐方式：</h4>\n<pre><code class=\"prism language-html\">$(\"#myElement\").css(\"text-align\", \"center\");\n</code></pre>\n<h4><a id=\"_83\"></a>设置显示隐藏：</h4>\n<pre><code class=\"prism language-html\">$(\"#myElement\").css(\"display\", \"none\");\n// or\n$(\"#myElement\").hide();\n</code></pre>\n<p>需要注意的是，使用 .css() 方法设置的样式直接作用于元素的 style 属性，会直接修改元素的行内样式。如果想要在多个元素之间共享样式，可以考虑使用 CSS 类来管理样式，并使用 jQuery 的 .addClass() 和 .removeClass() 方法来添加或移除类。</p>\n<p>此外，还可以使用链式调用的方式一次性设置多个样式属性，例如：</p>\n<pre><code class=\"prism language-html\">$(\"#myElement\")\n.css(\"width\", \"200px\")\n.css(\"height\", \"100px\")\n.css(\"background-color\", \"red\");\n</code></pre>\n<p>这样可以提高代码的可读性和简洁性。</p>\n\n", "status": 1, "cleanedContent": "<h2><a id=\"_jQuery__css__0\"></a>在 jQuery 中，可以使用 .css() 方法来设置元素的样式。</h2> <h2><a id=\"_1\"></a>设置单个样式属性：</h2> <pre><code class=\"prism language-html\">$(selector).css(propertyName, value); </code></pre> <h3><a id=\"_6\"></a>例如，设置元素的背景颜色为红色：</h3> <pre><code class=\"prism language-html\">$(\"#myElement\").css(\"background-color\", \"red\"); </code></pre> <h3><a id=\"_11\"></a>设置多个样式属性：</h3> <pre><code class=\"prism language-html\">$(selector).css({propertyName1: value1, propertyName2: value2, ...}); </code></pre> <h5><a id=\"2_15\"></a>例如，设置元素的背景颜色为红色、字体颜色为白色、边框宽度为2像素：</h5> <pre><code class=\"prism language-html\">$(\"#myElement\").css({ \"background-color\": \"red\", \"color\": \"white\", \"border-width\": \"2px\" }); </code></pre> <h3><a id=\"_24\"></a>注意事项：</h3> <ul> <li>CSS 属性名在 JavaScript 中需要使用驼峰命名法，例如 background-color 在 JavaScript 中应写成<br> “backgroundColor”。</li> <li>如果要获取元素的样式属性值，可以使用 .css() 方法的无参形式，即不传入参数。</li> <li>可以使用函数作为值来动态设置样式属性，例如：</li> </ul> <pre><code class=\"prism language-html\">$(\"#myElement\").css(\"width\", function(index, value) { return parseInt(value) + 50 + \"px\"; }); </code></pre> <p>上述代码会将元素的宽度增加 50 像素。<br> 请注意，这只是使用 jQuery 的一种方式来设置元素的样式。在现代 Web 开发中，更多的开发者选择使用原生 JavaScript 的方法来操作元素的样式，例如使用 .style 属性直接访问和设置元素的样式。</p> <h3><a id=\"_jQuery__css__CSS__39\"></a>当使用 jQuery 的 .css() 方法设置样式时，可以使用各种 CSS 属性来控制元素的外观。</h3> <p>下面是一些常见的 CSS 属性及其在 jQuery 中的设置方式示例：</p> <h4><a id=\"_42\"></a>设置宽度和高度：</h4> <pre><code class=\"prism language-html\">$(\"#myElement\").css(\"width\", \"200px\"); $(\"#myElement\").css(\"height\", \"100px\"); </code></pre> <h4><a id=\"_48\"></a>设置背景颜色和图片：</h4> <pre><code class=\"prism language-html\">$(\"#myElement\").css(\"background-color\", \"red\"); $(\"#myElement\").css(\"background-image\", \"url('image.jpg')\"); </code></pre> <h4><a id=\"_55\"></a>设置字体样式：</h4> <pre><code class=\"prism language-html\">$(\"#myElement\").css(\"font-size\", \"16px\"); $(\"#myElement\").css(\"font-weight\", \"bold\"); </code></pre> <h4><a id=\"_62\"></a>设置边框样式：</h4> <pre><code class=\"prism language-html\">$(\"#myElement\").css(\"border-width\", \"2px\"); $(\"#myElement\").css(\"border-color\", \"blue\"); $(\"#myElement\").css(\"border-style\", \"dashed\"); </code></pre> <h5><a id=\"_70\"></a>设置内边距和外边距：</h5> <pre><code class=\"prism language-html\">$(\"#myElement\").css(\"padding\", \"10px\"); $(\"#myElement\").css(\"margin\", \"20px\"); </code></pre> <h4><a id=\"_77\"></a>设置文本对齐方式：</h4> <pre><code class=\"prism language-html\">$(\"#myElement\").css(\"text-align\", \"center\"); </code></pre> <h4><a id=\"_83\"></a>设置显示隐藏：</h4> <pre><code class=\"prism language-html\">$(\"#myElement\").css(\"display\", \"none\"); // or $(\"#myElement\").hide(); </code></pre> <p>需要注意的是，使用 .css() 方法设置的样式直接作用于元素的 style 属性，会直接修改元素的行内样式。如果想要在多个元素之间共享样式，可以考虑使用 CSS 类来管理样式，并使用 jQuery 的 .addClass() 和 .removeClass() 方法来添加或移除类。</p> <p>此外，还可以使用链式调用的方式一次性设置多个样式属性，例如：</p> <pre><code class=\"prism language-html\">$(\"#myElement\") .css(\"width\", \"200px\") .css(\"height\", \"100px\") .css(\"background-color\", \"red\"); </code></pre> <p>这样可以提高代码的可读性和简洁性。"}
{"url": "https://blog.csdn.net/juruhai/article/details/134912434", "article_id": 134912434, "username": "juruhai", "title": "Cobol学习", "body": "<p><a href=\"https://www.w3cschool.cn/cobol/cobol_basic_syntax.html\">COBOL 基本语法_w3cschool</a><br>\n<a href=\"https://www.cnblogs.com/7explore-share/p/4590665.html\">https://www.cnblogs.com/7explore-share/p/4590665.html</a></p>\n<h2><a id=\"1cobol__3\"></a>1.cobol 编译工具</h2>\n<p><a href=\"https://gnucobol.sourceforge.io/\">https://gnucobol.sourceforge.io/</a><br>\nvscode插件<br>\n<img src=\"https://img-blog.csdnimg.cn/direct/df207fd9f3f24e4d8722c9352dc41a2b.png\" alt=\"在这里插入图片描述\"></p>\n<h2><a id=\"1Windows_8\"></a>1.Windows平台</h2>\n<p>官网下载安装OpenCobolIDE即可，无需其他操作，安装之后即可写代码。<br>\n官方链接:<br>\nhttps://launchpad.net/cobcide/4.0/4.7.4/+download/OpenCobolIDE-4.7.4_Setup.exe<br>\nIDE会自动为用户创建一个HelloWorld程序,点击左上方工具栏中的绿色运行按钮,即可成功运行实例程序.</p>\n<pre><code class=\"prism language-cobol\"> <span class=\"token constant\">IDENTIFICATION</span> <span class=\"token constant\">DIVISION</span><span class=\"token punctuation\">.</span>\n<span class=\"token constant\">PROGRAM</span><span class=\"token operator\">-</span><span class=\"token constant\">ID</span><span class=\"token punctuation\">.</span> Loveyou<span class=\"token punctuation\">.</span>\n<span class=\"token operator\">*</span>作者\n<span class=\"token constant\">AUTHOR</span><span class=\"token punctuation\">.</span> juruhai<span class=\"token punctuation\">.</span>\n<span class=\"token operator\">*</span>time\n<span class=\"token constant\">DATE</span><span class=\"token operator\">-</span><span class=\"token constant\">WRITTEN</span><span class=\"token punctuation\">.</span> <span class=\"token number\">07</span><span class=\"token operator\">/</span><span class=\"token number\">08</span><span class=\"token operator\">/</span><span class=\"token number\">2022.</span>\n\n<span class=\"token constant\">ENVIRONMENT</span> <span class=\"token constant\">DIVISION</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token constant\">DATA</span> <span class=\"token constant\">DIVISION</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">*</span>declare\n<span class=\"token constant\">WORKING</span><span class=\"token operator\">-</span><span class=\"token constant\">STORAGE</span> <span class=\"token constant\">SECTION</span><span class=\"token punctuation\">.</span>\n<span class=\"token number\">01</span> stringv1 <span class=\"token constant\">PIC</span> <span class=\"token constant\">A</span> <span class=\"token constant\">VALUE</span> <span class=\"token string\">'x'</span><span class=\"token punctuation\">.</span>\n<span class=\"token number\">01</span> stringv2 <span class=\"token constant\">PIC</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token constant\">VALUE</span> <span class=\"token string\">'xyz'</span><span class=\"token punctuation\">.</span>\n<span class=\"token number\">01</span> number1 <span class=\"token constant\">PIC</span> <span class=\"token number\">9</span> <span class=\"token constant\">VALUE</span> <span class=\"token number\">9.</span>\n<span class=\"token number\">01</span> number2 <span class=\"token constant\">PIC</span> <span class=\"token number\">9</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token constant\">VALUE</span> <span class=\"token number\">999.</span>\n<span class=\"token number\">01</span> number3 <span class=\"token constant\">PIC</span> 999V99 <span class=\"token constant\">VALUE</span> <span class=\"token number\">999.99</span><span class=\"token punctuation\">.</span>\n<span class=\"token number\">01</span> number4 <span class=\"token constant\">PIC</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span>999V99 <span class=\"token constant\">VALUE</span> <span class=\"token number\">1450.99</span><span class=\"token punctuation\">.</span>\n<span class=\"token number\">01</span> ssss <span class=\"token constant\">PIC</span> $999V99 <span class=\"token constant\">VALUE</span> <span class=\"token number\">180.</span>\n<span class=\"token number\">01</span> age <span class=\"token constant\">PIC</span> <span class=\"token constant\">S9</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token constant\">VALUE</span> <span class=\"token operator\">-</span><span class=\"token number\">100.</span>\n<span class=\"token number\">01</span> myvchar <span class=\"token constant\">PIC</span> <span class=\"token constant\">X</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token constant\">VALUE</span> <span class=\"token string\">'a12345'</span><span class=\"token punctuation\">.</span>\n\n\n<span class=\"token constant\">PROCEDURE</span> <span class=\"token constant\">DIVISION</span><span class=\"token punctuation\">.</span>\n<span class=\"token constant\">DISPLAY</span> <span class=\"token string\">\"I love you, \"</span> <span class=\"token constant\">WITH</span> <span class=\"token constant\">NO</span> <span class=\"token constant\">ADVANCING</span><span class=\"token punctuation\">.</span>\n<span class=\"token constant\">DISPLAY</span> stringv1<span class=\"token punctuation\">.</span>\n<span class=\"token constant\">DISPLAY</span> stringv2<span class=\"token punctuation\">.</span>\n<span class=\"token constant\">DISPLAY</span> number1<span class=\"token punctuation\">.</span>\n<span class=\"token constant\">DISPLAY</span> number2<span class=\"token punctuation\">.</span>\n<span class=\"token constant\">DISPLAY</span> number3<span class=\"token punctuation\">.</span>\n<span class=\"token constant\">DISPLAY</span> number4<span class=\"token punctuation\">.</span>\n<span class=\"token constant\">DISPLAY</span> ssss<span class=\"token punctuation\">.</span>\n<span class=\"token constant\">DISPLAY</span> age<span class=\"token punctuation\">.</span>\n<span class=\"token constant\">DISPLAY</span> myvchar<span class=\"token punctuation\">.</span>\n\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/direct/f6af98b1bad64bbfbc5011d0b0c1860b.png\" alt=\"在这里插入图片描述\"></p>\n\n", "status": 64, "cleanedContent": "<p><a href=\"\">COBOL 基本语法_w3cschool</a><br> <a href=\"\"></a></p> <h2><a id=\"1cobol__3\"></a>1.cobol 编译工具</h2> <p><a href=\"\"></a><br> vscode插件<br> <img src=\"\" alt=\"在这里插入图片描述\"></p> <h2><a id=\"1Windows_8\"></a>1.Windows平台</h2> <p>官网下载安装OpenCobolIDE即可，无需其他操作，安装之后即可写代码。<br> 官方链接:<br> <br> IDE会自动为用户创建一个HelloWorld程序,点击左上方工具栏中的绿色运行按钮,即可成功运行实例程序.</p> <pre><code class=\"prism language-cobol\"> <span class=\"token constant\">IDENTIFICATION</span> <span class=\"token constant\">DIVISION</span><span class=\"token punctuation\">.</span> <span class=\"token constant\">PROGRAM</span><span class=\"token operator\">-</span><span class=\"token constant\">ID</span><span class=\"token punctuation\">.</span> Loveyou<span class=\"token punctuation\">.</span> <span class=\"token operator\">*</span>作者 <span class=\"token constant\">AUTHOR</span><span class=\"token punctuation\">.</span> juruhai<span class=\"token punctuation\">.</span> <span class=\"token operator\">*</span>time <span class=\"token constant\">DATE</span><span class=\"token operator\">-</span><span class=\"token constant\">WRITTEN</span><span class=\"token punctuation\">.</span> <span class=\"token number\">07</span><span class=\"token operator\">/</span><span class=\"token number\">08</span><span class=\"token operator\">/</span><span class=\"token number\">2022.</span> <span class=\"token constant\">ENVIRONMENT</span> <span class=\"token constant\">DIVISION</span><span class=\"token punctuation\">.</span> <span class=\"token constant\">DATA</span> <span class=\"token constant\">DIVISION</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">*</span>declare <span class=\"token constant\">WORKING</span><span class=\"token operator\">-</span><span class=\"token constant\">STORAGE</span> <span class=\"token constant\">SECTION</span><span class=\"token punctuation\">.</span> <span class=\"token number\">01</span> stringv1 <span class=\"token constant\">PIC</span> <span class=\"token constant\">A</span> <span class=\"token constant\">VALUE</span> <span class=\"token string\">'x'</span><span class=\"token punctuation\">.</span> <span class=\"token number\">01</span> stringv2 <span class=\"token constant\">PIC</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token constant\">VALUE</span> <span class=\"token string\">'xyz'</span><span class=\"token punctuation\">.</span> <span class=\"token number\">01</span> number1 <span class=\"token constant\">PIC</span> <span class=\"token number\">9</span> <span class=\"token constant\">VALUE</span> <span class=\"token number\">9.</span> <span class=\"token number\">01</span> number2 <span class=\"token constant\">PIC</span> <span class=\"token number\">9</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token constant\">VALUE</span> <span class=\"token number\">999.</span> <span class=\"token number\">01</span> number3 <span class=\"token constant\">PIC</span> 999V99 <span class=\"token constant\">VALUE</span> <span class=\"token number\">999.99</span><span class=\"token punctuation\">.</span> <span class=\"token number\">01</span> number4 <span class=\"token constant\">PIC</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span>999V99 <span class=\"token constant\">VALUE</span> <span class=\"token number\">1450.99</span><span class=\"token punctuation\">.</span> <span class=\"token number\">01</span> ssss <span class=\"token constant\">PIC</span> $999V99 <span class=\"token constant\">VALUE</span> <span class=\"token number\">180.</span> <span class=\"token number\">01</span> age <span class=\"token constant\">PIC</span> <span class=\"token constant\">S9</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token constant\">VALUE</span> <span class=\"token operator\">-</span><span class=\"token number\">100.</span> <span class=\"token number\">01</span> myvchar <span class=\"token constant\">PIC</span> <span class=\"token constant\">X</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token constant\">VALUE</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">.</span> <span class=\"token constant\">PROCEDURE</span> <span class=\"token constant\">DIVISION</span><span class=\"token punctuation\">.</span> <span class=\"token constant\">DISPLAY</span> <span class=\"token string\">\"I love you, \"</span> <span class=\"token constant\">WITH</span> <span class=\"token constant\">NO</span> <span class=\"token constant\">ADVANCING</span><span class=\"token punctuation\">.</span> <span class=\"token constant\">DISPLAY</span> stringv1<span class=\"token punctuation\">.</span> <span class=\"token constant\">DISPLAY</span> stringv2<span class=\"token punctuation\">.</span> <span class=\"token constant\">DISPLAY</span> number1<span class=\"token punctuation\">.</span> <span class=\"token constant\">DISPLAY</span> number2<span class=\"token punctuation\">.</span> <span class=\"token constant\">DISPLAY</span> number3<span class=\"token punctuation\">.</span> <span class=\"token constant\">DISPLAY</span> number4<span class=\"token punctuation\">.</span> <span class=\"token constant\">DISPLAY</span> ssss<span class=\"token punctuation\">.</span> <span class=\"token constant\">DISPLAY</span> age<span class=\"token punctuation\">.</span> <span class=\"token constant\">DISPLAY</span> myvchar<span class=\"token punctuation\">."}
{"url": "https://blog.csdn.net/2302_81730670/article/details/134912612", "article_id": 134912612, "username": "2302_81730670", "title": "网络基础（二）", "body": "<p>对上个内容的补充：</p>\n\n<p>ARP地址解析协议：通过一种地址找到另一种地址的协议ARP的工作原理：ARP先通过广播发送ARP请求包，所有收到广播包的设备都将源IP和源MAC的映射关系记录在本地的ARP缓存表中，然后再查看请求的地址是否是自己的，若不是则丢弃，若是，则以单播形式进行回复。 在之后的传输中，将优先查看本地的ARP缓存表，若本地存在记录，则直接按照记录进行发包，若没有记录进行ARP请求。</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">ARP缓存表老化时间：180s  </p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">免费ARP/无故ARP：1.验证IP地址是否出存在冲突2.更换物理网卡</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>（一）几个协议</strong></p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">HTTP       tcp     超文本传输协议     端口号:80</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">HTTPS     tcp     安全传输协议       端口号：443</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">SSH           tcp   安全外壳协议       端口号：22</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">FTP          tcp     文件传输协议       端口号：20/21</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">TFTP        udp    简单文件传输      端口号：69      </p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">Telnet       TCP   远程登录协议      端口号：23</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">DNS        tcp/udp    域名解析协议       端口号：53【运行在UDP协议之上(tcp也有）。正向解析：根据主机域名查找对应的IP地址；反向解析：根据IP地址查找对应的主机域名】</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">DHCP      udp     动态主机配置协议       端口号：67/68</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>传输层协议：TCP/UDP</strong></p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>TCP</strong>-----传输控制协议------面向连接的可靠协议</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">（在完成了传输层工作的同时，还需要保证数据传输的可靠性）</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">面向连接------3次握手及4次挥手   建立端到端的虚链路</p>\n\n<p style=\"margin-left:.0001pt;text-align:center;\"><img alt=\"cb027cbf17914274a0ebdeabb65fe1ef.png\" src=\"https://img-blog.csdnimg.cn/direct/cb027cbf17914274a0ebdeabb65fe1ef.png\" /></p>\n\n<p>SYN：发起一次链接并告知自身状态；ACK：确认收到。</p>\n\n<p>特殊情况   RST：重连；TCP：严重错误且重连；FIN：断开；PSH：加急接收；URG：紧急指正。 </p>\n\n<p style=\"margin-left:.0001pt;text-align:center;\"></p>\n\n<p style=\"text-align:center;\"> <img alt=\"c4822214bb274239858125e599a8b2f6.png\" src=\"https://img-blog.csdnimg.cn/direct/c4822214bb274239858125e599a8b2f6.png\" /></p>\n\n<p> <strong>断开：</strong></p>\n\n<p style=\"text-align:center;\"><img alt=\"1e2d393c6e174f4499f8c568881b3fb5.png\" src=\"https://img-blog.csdnimg.cn/direct/1e2d393c6e174f4499f8c568881b3fb5.png\" /></p>\n\n<p> 可靠性：可靠传输机制 确认 重传 排序 流控（窗口滑动机制）</p>\n\n<p><strong>UDP</strong>----用户数据报文协议-----非面向连接的不可靠协议</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">（仅完成传输层的基础工作---分段  端口号）</p>\n\n<p><strong> TCP与UDP区别：</strong></p>\n\n<p style=\"text-align:center;\"><img alt=\"6da1434a9baa44028d73f0938a7d351d.png\" src=\"https://img-blog.csdnimg.cn/direct/6da1434a9baa44028d73f0938a7d351d.png\" /></p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">TCP的分段和IP的分片  </p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">IP分片的原因：受到二层 数据链路层MTU的限制。</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">TCP：MSS  数据报最大数据分段长度</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>（二）eNSP基本命令 </strong></p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\"><em><strong>在路由器里面配某一个接口网关</strong></em></p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">&lt;Huawei&gt;-----用户视图-----仅具有查询权限  </p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">&lt;Huawei&gt;system-view  进入系统视图</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">[Huawei]-----系统视图  可以进行一些全局配置  </p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">Ctrl+Z    直接返回用户视图  </p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">[Huawei]interface g 0/0/0    进入 g 0/0/0 接口</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">[Huawei-GigabitEthernet0/0/0]（进入这个接口后的显示）</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">  </p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">[Huawei-GigabitEthernet0/0/0]ip address 192.168.1.1 24（给这个接口匹配ip地址）</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">[Huawei-GigabitEthernet0/0/1]ip address 192.168.2.1 255.255.255.0（同上）</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">&lt;Huawei&gt;display ip interface brief   查询接口IP表</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">[Huawei-GigabitEthernet0/0/2]quit   返回上一层视图</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">[Huawei-GigabitEthernet0/0/0]display this   在那个视图下使用 该命令  即使 查看那个视图下的所有配置  </p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">[Huawei]sysname  R1 修改名称为 R1</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">&lt;R1&gt;save   保存  </p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">Undo=删除 ，在那个视图下敲错的 在那个视图下删除；在敲错的命令前加undo  即可删除该命令</p>\n\n<p>Tab 自动补全   </p>\n\n<p>？ 查询后续可执行的命令</p>\n\n<p><strong><em>使用DHCP协议</em></strong></p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">[R1]dhcp enable   开启DHCP服务</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\"> [R1]ip pool AA   创建一个名为AA的地址池[R1-ip-pool-AA]network 192.168.1.0 mask 24  定义地址池中的网段</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">[R1-ip-pool-AA]gateway-list 192.168.1.1  定义该网段的网关</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">[R1-ip-pool-AA]dns-list 114.114.114.114  8.8.8.8  定义该网段的DNS</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">[R1-GigabitEthernet0/0/0]dhcp select global   在此接口  调用DHCP全局配置</p>\n\n<p></p>\n\n<p><strong>（三）DNS（域名解析协议）复现：</strong></p>\n\n<p>第一步：在路由器里给每个接口配网关并检查是否成功</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/1323b80be3964b819a4ee4f7cf4569d7.png\" /></p>\n\n<p><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/2490ec3fdc9f4cb089e1e56881c134cc.png\" /></p>\n\n<p>第二步： 给客户端和服务器分别配IP地址，然后相互ping看是否成功</p>\n\n<p style=\"margin-left:.0001pt;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/7b777c3274364650a86b5917a6c39406.png\" /></p>\n\n<p></p>\n\n<p style=\"text-align:center;\"> <img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/16377135e983496c9eb8e58c52b99891.png\" /></p>\n\n<p>第三步：在服务器中进行IP与域名绑定</p>\n\n<p style=\"text-align:center;\"> <img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/a445f4a958bd43b4bad08ccfddda7df4.png\" /></p>\n\n<p>第四步：在客户端的域名服务器填入目标IP地址</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/84fe167d06d24f34851fb2c697dc4ab6.png\" /></p>\n\n<p>第五步：在服务器中任意塞一个文件</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/8b245a8e18cb443ca5ab3c5aeac4d21a.png\" /></p>\n\n<p>第六步：在客户端输入网址获取文件</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/5eb9ebb60d2b421a8319c16d05202921.png\" /></p>\n\n<p></p>\n\n<p style=\"margin-left:.0001pt;text-align:center;\"></p>\n\n<p></p>\n\n<p></p>\n\n<p></p>\n", "status": 1, "cleanedContent": "<p>对上个内容的补充：</p> <p>ARP地址解析协议：通过一种地址找到另一种地址的协议ARP的工作原理：ARP先通过广播发送ARP请求包，所有收到广播包的设备都将源IP和源MAC的映射关系记录在本地的ARP缓存表中，然后再查看请求的地址是否是自己的，若不是则丢弃，若是，则以单播形式进行回复。 在之后的传输中，将优先查看本地的ARP缓存表，若本地存在记录，则直接按照记录进行发包，若没有记录进行ARP请求。</p> <p style=\"margin-left:.0001pt;text-align:justify;\">ARP缓存表老化时间：180s </p> <p style=\"margin-left:.0001pt;text-align:justify;\">免费ARP/无故ARP：1.验证IP地址是否出存在冲突2.更换物理网卡</p> <p style=\"margin-left:.0001pt;text-align:justify;\"><strong>（一）几个协议</strong></p> <p style=\"margin-left:.0001pt;text-align:justify;\">HTTP tcp 超文本传输协议 端口号:80</p> <p style=\"margin-left:.0001pt;text-align:justify;\">HTTPS tcp 安全传输协议 端口号：443</p> <p style=\"margin-left:.0001pt;text-align:justify;\">SSH tcp 安全外壳协议 端口号：22</p> <p style=\"margin-left:.0001pt;text-align:justify;\">FTP tcp 文件传输协议 端口号：20/21</p> <p style=\"margin-left:.0001pt;text-align:justify;\">TFTP udp 简单文件传输 端口号：69 </p> <p style=\"margin-left:.0001pt;text-align:justify;\">Telnet TCP 远程登录协议 端口号：23</p> <p style=\"margin-left:.0001pt;text-align:justify;\">DNS tcp/udp 域名解析协议 端口号：53【运行在UDP协议之上(tcp也有）。正向解析：根据主机域名查找对应的IP地址；反向解析：根据IP地址查找对应的主机域名】</p> <p style=\"margin-left:.0001pt;text-align:justify;\">DHCP udp 动态主机配置协议 端口号：67/68</p> <p style=\"margin-left:.0001pt;text-align:justify;\"><strong>传输层协议：TCP/UDP</strong></p> <p style=\"margin-left:.0001pt;text-align:justify;\"><strong>TCP</strong>-----传输控制协议------面向连接的可靠协议</p> <p style=\"margin-left:.0001pt;text-align:justify;\">（在完成了传输层工作的同时，还需要保证数据传输的可靠性）</p> <p style=\"margin-left:.0001pt;text-align:justify;\">面向连接------3次握手及4次挥手 建立端到端的虚链路</p> <p style=\"margin-left:.0001pt;text-align:center;\"><img alt=\"cb027cbfa0ebdeabb65fe1ef.png\" src=\"\" /></p> <p>SYN：发起一次链接并告知自身状态；ACK：确认收到。</p> <p>特殊情况 RST：重连；TCP：严重错误且重连；FIN：断开；PSH：加急接收；URG：紧急指正。 </p> <p style=\"margin-left:.0001pt;text-align:center;\"></p> <p style=\"text-align:center;\"> <img alt=\"cbbe599a8b2f6.png\" src=\"\" /></p> <p> <strong>断开：</strong></p> <p style=\"text-align:center;\"><img alt=\"1e2d393c6e174f4499f8cb3fb5.png\" src=\"\" /></p> <p> 可靠性：可靠传输机制 确认 重传 排序 流控（窗口滑动机制）</p> <p><strong>UDP</strong>----用户数据报文协议-----非面向连接的不可靠协议</p> <p style=\"margin-left:.0001pt;text-align:justify;\">（仅完成传输层的基础工作---分段 端口号）</p> <p><strong> TCP与UDP区别：</strong></p> <p style=\"text-align:center;\"><img alt=\"6da1434a9baad73f0938a7d351d.png\" src=\"\" /></p> <p style=\"margin-left:.0001pt;text-align:justify;\">TCP的分段和IP的分片 </p> <p style=\"margin-left:.0001pt;text-align:justify;\">IP分片的原因：受到二层 数据链路层MTU的限制。</p> <p style=\"margin-left:.0001pt;text-align:justify;\">TCP：MSS 数据报最大数据分段长度</p> <p style=\"margin-left:.0001pt;text-align:justify;\"><strong>（二）eNSP基本命令 </strong></p> <p style=\"margin-left:.0001pt;text-align:justify;\"></p> <p style=\"margin-left:.0001pt;text-align:justify;\"><em><strong>在路由器里面配某一个接口网关</strong></em></p> <p style=\"margin-left:.0001pt;text-align:justify;\"><Huawei>-----用户视图-----仅具有查询权限 </p> <p style=\"margin-left:.0001pt;text-align:justify;\"><Huawei>system-view 进入系统视图</p> <p style=\"margin-left:.0001pt;text-align:justify;\">[Huawei]-----系统视图 可以进行一些全局配置 </p> <p style=\"margin-left:.0001pt;text-align:justify;\">Ctrl+Z 直接返回用户视图 </p> <p style=\"margin-left:.0001pt;text-align:justify;\">[Huawei]interface g 0/0/0 进入 g 0/0/0 接口</p> <p style=\"margin-left:.0001pt;text-align:justify;\">[Huawei-GigabitEthernet0/0/0]（进入这个接口后的显示）</p> <p style=\"margin-left:.0001pt;text-align:justify;\"> </p> <p style=\"margin-left:.0001pt;text-align:justify;\">[Huawei-GigabitEthernet0/0/0]ip address 24（给这个接口匹配ip地址）</p> <p style=\"margin-left:.0001pt;text-align:justify;\">[Huawei-GigabitEthernet0/0/1]ip address （同上）</p> <p style=\"margin-left:.0001pt;text-align:justify;\"><Huawei>display ip interface brief 查询接口IP表</p> <p style=\"margin-left:.0001pt;text-align:justify;\">[Huawei-GigabitEthernet0/0/2]quit 返回上一层视图</p> <p style=\"margin-left:.0001pt;text-align:justify;\">[Huawei-GigabitEthernet0/0/0]display this 在那个视图下使用 该命令 即使 查看那个视图下的所有配置 </p> <p style=\"margin-left:.0001pt;text-align:justify;\"></p> <p style=\"margin-left:.0001pt;text-align:justify;\">[Huawei]sysname R1 修改名称为 R1</p> <p style=\"margin-left:.0001pt;text-align:justify;\"></p> <p style=\"margin-left:.0001pt;text-align:justify;\"><R1>save 保存 </p> <p style=\"margin-left:.0001pt;text-align:justify;\">Undo=删除 ，在那个视图下敲错的 在那个视图下删除；在敲错的命令前加undo 即可删除该命令</p> <p>Tab 自动补全 </p> <p>？ 查询后续可执行的命令</p> <p><strong><em>使用DHCP协议</em></strong></p> <p style=\"margin-left:.0001pt;text-align:justify;\">[R1]dhcp enable 开启DHCP服务</p> <p style=\"margin-left:.0001pt;text-align:justify;\"> [R1]ip pool AA 创建一个名为AA的地址池[R1-ip-pool-AA]network mask 24 定义地址池中的网段</p> <p style=\"margin-left:.0001pt;text-align:justify;\">[R1-ip-pool-AA]gateway-list 定义该网段的网关</p> <p style=\"margin-left:.0001pt;text-align:justify;\">[R1-ip-pool-AA]dns-list 定义该网段的DNS</p> <p style=\"margin-left:.0001pt;text-align:justify;\">[R1-GigabitEthernet0/0/0]dhcp select global 在此接口 调用DHCP全局配置</p> <p></p> <p><strong>（三）DNS（域名解析协议）复现：</strong></p> <p>第一步：在路由器里给每个接口配网关并检查是否成功</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <p><img alt=\"\" src=\"\" /></p> <p>第二步： 给客户端和服务器分别配IP地址，然后相互ping看是否成功</p> <p style=\"margin-left:.0001pt;\"><img alt=\"\" src=\"\" /></p> <p></p> <p style=\"text-align:center;\"> <img alt=\"\" src=\"\" /></p> <p>第三步：在服务器中进行IP与域名绑定</p> <p style=\"text-align:center;\"> <img alt=\"\" src=\"\" /></p> <p>第四步：在客户端的域名服务器填入目标IP地址</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <p>第五步：在服务器中任意塞一个文件</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <p>第六步：在客户端输入网址获取文件</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <p></p> <p style=\"margin-left:.0001pt;text-align:center;\""}
{"url": "https://blog.csdn.net/banana83/article/details/134912716", "article_id": 134912716, "username": "banana83", "title": "【无标题】", "body": "<p>(54)发明名称 一种气垫船轨迹跟踪控制方法 (57)摘要 本发明公开了一种气垫船轨迹跟踪控制方 法，通过采用微分平坦方法将将欠驱动的气垫船 模型转化为全驱动的系统，并基于全驱动模型使 用自抗扰控制方法设计控制器，将建模误差和外 部扰动作为扩张状态实时估计并进行补偿，方便 了控制器的设计提高了气垫船系统控制的抗扰 性。 权利要求书2页 说明书10页 附图4页 CN 114879658 A 2022.08.09 CN 114879658 A 1 .一种气垫船轨迹跟踪控制方法，其特征在于，包括以下步骤： 步骤1、采用微分平坦方法建立气垫船的全驱动气垫船模型，如公式(1)所示： 其中，x1为气垫船的位置坐标中的横坐标x，x2为横坐标x的一阶导数，x3为横坐标x的二 阶导数，x4为横坐标x的三阶导数，x5为横坐标方向上的扰动，y1为气垫船的位置坐标中的纵 坐标y，y2为纵坐标y的一阶导数，y3为纵坐标y的二阶导数，y4为纵坐标y的三阶导数，y5为纵 坐标方向上的扰动，∈x为扰动 的导数，∈y为扰动 的导数，h为采样时间间隔，k为第k个 采样时刻，U1为气垫船的x方向广义输入，U2为气垫船的y方向广义输入； 步骤2、针对所述全驱动气垫船模型，采用自抗扰控制方法构建气垫船轨迹跟踪控制器 实现对气垫船轨迹的跟踪控制，所述气垫船轨迹跟踪控制器包括气垫船微分跟踪器、气垫 船扩张状态观测器和基于状态反馈和扰动补偿的控制策略； 所述气垫船微分跟踪器如公式(2)所示： 其中 为x1的近似值， 为x2的近似值， 为x3的近似值， 为x4的近似值， fx (k)为x的四阶导数的近似值， 为y1的近似值， 为y2的近似值， 为y3的近似 值， 为y4的近似值，fy (k)为y的四阶导数的近似值，r1为气垫船微分跟踪器的x方向参 数，r2为气垫船微分跟踪器的y方向参数； 所述气垫船扩张状态观测器如公式(3)所示： 其中，e2为x方向的跟踪误差，e2为y方向的跟踪误差，z11 ,z12 ,z13 ,z14 ,z15分别是x1 ,x2 , x3 ,x4 ,x5的估计值，z21 ,z22 ,z23 ,z24 ,z25分别是y1 ,y2 ,y3 ,y4 ,y5的估计值，b11 ,b12 ,...,b25是观 测器参数； 基于状态反馈和扰动补偿的控制策略中的控制率如公式(4)所示： 权　利　要　求　书 1/2 页 2 CN 114879658 A 2 其中，φx为x方向的控制率，φy为y方向的控制率，k11 ,k12 ,...,k24为控制参数。 2 .根据权利要求1所述的一种气垫船轨迹跟踪控制方法，其特征在于，所述气垫船轨迹 跟踪控制器的控制率为采用强化学习算法进行计算，计算方式包括： 构建Critic网络和Actor网络分别用于拟合气垫船系统在当前状态下的最优控制策略 和最优价值函数，其中，所述Critic网络为具有4个输入节点、16个隐藏层节点和4个输出节 点的全连接网络，所述Actor网络为具有4个输入节点、16个隐藏层节点和1个输出节点的全 连接网络，以所述Actor网络的输出作为气垫船系统的广义控制输入U1和U2，同时得到优化 的控制率φx和φy。 权　利　要　求　书 2/2 页 3 CN 114879658 A 3 一种气垫船轨迹跟踪控制方法 技术领域 [0001] 本发明属于气垫船自动控制技术领域，具体涉及一种气垫船轨迹跟踪控制方法。 背景技术 [0002] 气垫船使用空气作为船只底部的气垫，即通常是由持续不断供应的低压气体形成 气垫。因此，气垫船与水面的摩擦力很小，气垫船除了在水上运动，还可以在某些比较平滑 的陆路或是结冰的水面等地形上行驶，气垫船的模型如图2所示。 [0003] 气垫船按航行状态可分为全垫式和侧壁式。全垫式气垫船四周用尼龙等物料围成 一个软性的围裙，利用风机把空气充入底部形成气垫，推进则多数使用空气螺旋桨或喷气 方式。全垫式气垫船时速可达70节，具备两栖能力，可以在陆上行驶，这种气垫船在军事上 用作两栖登陆非常合适，能在很多排水式登陆艇无法行驶的海岸登陆。侧壁式气垫船，亦称 表面效应船只，在船底两侧有刚性侧壁插入水中，只在首尾用软性的围裙，推进可以使用传 统水下螺旋桨或喷水机，与全垫式相比，侧壁式气垫船的托力较大，适合作大型舰艇，但不 具两栖能力。 [0004] 气垫船被广泛应用于浅滩登陆，野外救援和民用或军用航运等方面。但由于气垫 船特殊的工作原理和结构，气垫船具有难以建模，欠驱动，非线性强，外部扰动较大的特点， 使得气垫船的精准操控是非常困难的，因此非常需要研究一种气垫船的轨迹跟踪控制方 法。 [0005] 气垫船的轨迹跟踪控制问题吸引了国内外众多学者的广泛关注，常用的方法包括 基于变结构模糊方法的轨迹跟踪控制、基于神经网络的航向控制方法、基于多段控制器的 全垫升气垫船轨迹跟踪控制、基于滑模控制的航向角控制、反步法和李雅普诺夫法等。其 中，基于神经网络的航向控制方法能够更加精准地控制航向角。 [0006] 综上所述，现有方法都依赖于比较准确的数学模型，而且有大量的研究人员在对 气垫船进行精准的建模，然而气垫船属于复杂对象，尤其是其在运动过程中可能遇到的来 自水和风的扰动一般是无法被提前建模的，因此，仍很难得到其精准的模型，现有的基于模 型的控制方法也就不能保证控制的最优性和自适应性，且控制器的抗扰能力也比较差，缺 乏主动抗扰能力。 发明内容 [0007] 有鉴于此，本发明提供了一种气垫船轨迹跟踪控制方法，通过将气垫船系统由欠 驱动系统转换为全驱动系统，采用自抗扰控制方法实现了对气垫船系统轨迹的跟踪控制。 [0008] 本发明提供的一种气垫船轨迹跟踪控制方法，包括以下步骤： [0009] 步骤1、采用微分平坦方法建立气垫船的全驱动气垫船模型，如公式(1)所示： 说　明　书 1/10 页 4 CN 114879658 A 4 [0010] [0011] 其中，x1为气垫船的位置坐标中的横坐标x，x2为横坐标x的一阶导数，x3为横坐标x 的二阶导数，x4为横坐标x的三阶导数，x5为横坐标方向上的扰动，y1为气垫船的位置坐标中 的纵坐标y，y2为纵坐标y的一阶导数，y3为纵坐标y的二阶导数，y4为纵坐标y的三阶导数，y5 为纵坐标方向上的扰动，∈x为扰动 的导数，∈y为扰动 的导数，h为采样时间间隔，k为 第k个采样时刻，U1为气垫船的x方向广义输入，U2为气垫船的y方向广义输入； [0012] 步骤2、针对所述全驱动气垫船模型，采用自抗扰控制方法构建气垫船轨迹跟踪控 制器实现对气垫船轨迹的跟踪控制，所述气垫船轨迹跟踪控制器包括气垫船微分跟踪器、 气垫船扩张状态观测器和基于状态反馈和扰动补偿的控制策略； [0013] 所述气垫船微分跟踪器如公式(2)所示： [0014] [0015] 其中 为x1的近似值， 为x2的近似值， 为x3的近似值， 为x4的近 似值，fx (k)为x的四阶导数的近似值， 为y1的近似值， 为y2的近似值， 为y3 的近似值， 为y4的近似值，fy (k)为y的四阶导数的近似值，r1为气垫船微分跟踪器的x 方向参数，r2为气垫船微分跟踪器的y方向参数； [0016] 所述气垫船扩张状态观测器如公式(3)所示： [0017] [0018] 其中，e2为x方向的跟踪误差，e2为y方向的跟踪误差，z11 ,z12 ,z13 ,z14 ,z15分别是x1 , x2 ,x3 ,x4 ,x5的估计值，z21 ,z22 ,z23 ,z24 ,z25分别是y1 ,y2 ,y3 ,y4 ,y5的估计值，b11 ,b12 ,...,b25是 观测器参数； [0019] 基于状态反馈和扰动补偿的控制策略中的控制率如公式(4)所示： [0020] 说　明　书 2/10 页 5 CN 114879658 A 5 [0021] 其中，φx为x方向的控制率，φy为y方向的控制率，k11 ,k12 ,...,k24为控制参数。 [0022] 进一步地，所述气垫船轨迹跟踪控制器的控制率为采用强化学习算法进行计算， 计算方式包括： [0023] 构建Critic网络和Actor网络分别用于拟合气垫船系统在当前状态下的最优控制 策略和最优价值函数，其中，所述Critic网络为具有4个输入节点、16个隐藏层节点和4个输 出节点的全连接网络，所述Actor网络为具有4个输入节点、16个隐藏层节点和1个输出节点 的全连接网络，以所述Actor网络的输出作为气垫船系统的广义控制输入U1和U2，同时得到 优化的控制率φx和φy。 [0024] 有益效果： [0025] 1、本发明通过采用微分平坦方法将将欠驱动的气垫船模型转化为全驱动的系统， 并基于全驱动模型使用自抗扰控制方法设计控制器，将建模误差和外部扰动作为扩张状态 实时估计并进行补偿，方便了控制器的设计提高了气垫船系统控制的抗扰性。 [0026] 2、本发明通过将强化学习算法引入气垫船系统的自抗扰控制器，能够获取优化的 控制策略，得到更优的控制率，从而有效避免了现有自抗扰控制方法中手动调试的过程，能 够有效地节省人力和时间，此外，由于自抗扰控制方法对扰动的估计与补偿特性能够为强 化学习算法提供一个稳定的学习环境，从而保证了强化学习算法的收敛性，节约了学习时 间，因此，采用强化学习算法与自抗扰控制方法结合实现气垫船系统的跟踪控制，能够进一 步地提高跟踪控制的鲁棒性和自适应性。 附图说明 [0027] 图1为本发明提供的一种气垫船轨迹跟踪控制方法的流程图。 [0028] 图2为气垫船的3D模型示意图。 [0029] 图3为采用本发明提供的一种气垫船轨迹跟踪控制方法得到的气垫船横轴位置跟 踪效果图。 [0030] 图4为采用本发明提供的一种气垫船轨迹跟踪控制方法得到的气垫船纵轴位置跟 踪效果图。 [0031] 图5为采用传统ADRC方法得到的气垫船横轴跟踪控制鲁棒性曲线图。 [0032] 图6为采用本发明提供的一种气垫船轨迹跟踪控制方法得到的气垫船横轴跟踪控 制鲁棒性曲线图。 [0033] 图7为采用传统ADRC方法得到的气垫船纵轴跟踪控制鲁棒性曲线图。 [0034] 图8为采用本发明提供的一种气垫船轨迹跟踪控制方法得到的气垫船纵轴跟踪控 制鲁棒性曲线图。 具体实施方式 [0035] 下面结合附图，对本发明进行详细描述。 [0036] 本发明提供的一种气垫船轨迹跟踪控制方法，其基本思想是：采用微分平坦方法 建立全驱动气垫船模型，采用自抗扰控制方法构建气垫船轨迹跟踪控制器实现对气垫船的 轨迹跟踪控制，在此基础进一步的引入强化学习算法考虑气垫船的扰动得到更优的控制输 入，从而进一步提高控制精度。 说　明　书 3/10 页 6 CN 114879658 A 6 [0037] 本发明提供的一种气垫船轨迹跟踪控制方法，如图1所示，具体包括以下步骤： [0038] 步骤1、针对气垫船的技术特征，采用微分平坦方法建立全驱动气垫船模型。 [0039] 本发明基于现有多种气垫船建模方法描述了气垫船的技术特征，采用如下公式表 示： [0040] [0041] 其中，(x ,y)表示气垫船的位置坐标，ψ表示气垫船的航向角度，τu表示气垫船的纵 向控制力矩，τr表示气垫船的横向控制力矩，u表示气垫船的纵向速度，v表示气垫船的横向 速度，r表示气垫船的偏航角速度， 表示x的导数， 表示y的导数， 表示ψ的导数， 表示u 的导数， 表示v的导数， 表示r的导数。 [0042] 通常情况下，通过获取气垫船的位置坐标和航向角度即可实现对气垫船轨迹的跟 踪，通过控制气垫船的纵向控制力矩和横向控制力矩即可实现对气垫船的控制。本发明需 要解决的问题就是如何计算出合适的控制输入实现对气垫船的轨迹跟踪控制。如公式(1) 所示的气垫船的技术特征，可知气垫船的控制过程为两输入三输出的形式，因此气垫船系 统本身属于欠驱动系统。但是，现有技术中已有的针对欠驱动系统的控制方法不是很成熟， 而关于全驱动系统的控制方法已经有非常成熟的研究成果，因此，本发明的技术思路是将 欠驱动系统转化为全驱动系统，即将气垫船系统转换为全驱动系统。 [0043] 平坦性是系统的一种特性，是将线性时不变系统理论中的可控性扩展到非线性动 力系统中，从而得到微分平坦理论，具有平坦性的系统称为平坦系统。平坦系统具有(虚拟 的)平坦输出，可以用平坦输出以及其有限微分的组合来表示所有的状态以及输入。在本发 明中，采用微分平坦法寻找气垫船系统的平坦输出，即可将气垫船的位置坐标(x ,y)和航向 角度ψ三个被控状态转换为气垫船的位置坐标(x ,y)两个状态，从而实现气垫船系统从欠驱 动系统到全驱动系统的转化。 [0044] 本发明选用微分平坦法将气垫船系统转换为全驱动系统，建立全驱动气垫船模 型，全驱动气垫船模型如下式表示： [0045] [0046] 下面说明建立全驱动气垫船模型的理论推导过程： [0047] 首先，基于平坦系统理论经过平坦性证明，可以确定气垫船系统的平坦输出为x和 y，其他状态和控制输入可以表达为如下形式： 说　明　书 4/10 页 7 CN 114879658 A 7 [0048] [0049] [0050] [0051] [0052] [0053] [0054] 其次，为了建立两输入两输出的平坦系统，对以下方程求导，方程如公式(8)所示， 直到同时出现平坦输出x、y和控制输入τu ,τr。 [0055] [0056] 经过连续求导，得出平坦输出的四阶导数满足平坦输出的要求，因此建立如下气 垫船系统的全驱动系统模型： [0057] [0058] 其中 和 为扰动。定义U1 ,U2为如下形式的广义输入： [0059] [0060] 得到简化后的全驱动模型： [0061] [0062] 将平坦输出及其导数定义为如下状态： 说　明　书 5/10 页 8 CN 114879658 A 8 [0063] [0064] 可以将全驱动模型改写为积分串联形式： [0065] [0066] 其中，∈x为扰动 的导数，∈y为扰动 的导数。假设采样时间间隔为h，k表示第k 个采样时刻，则积分串联模型可以离散化为如下形式： [0067] [0068] 其中，x1为气垫船的位置坐标中的横坐标x，x2为横坐标x的一阶导数，x3为横坐标x 的二阶导数，x4为横坐标x的三阶导数，x5为横坐标方向上的扰动，y1为气垫船的位置坐标中 的纵坐标y，y2为纵坐标y的一阶导数，y3为纵坐标y的二阶导数，y4为纵坐标y的三阶导数，y5 为纵坐标方向上的扰动。 [0069] 本发明就以上述积分串联离散模型作为气垫船系统的全驱动气垫船模型。 [0070] 步骤2、针对步骤1建立的全驱动气垫船模型，采用自抗扰控制方法构建气垫船轨 迹跟踪控制器实现对气垫船轨迹的跟踪控制。 [0071] 本发明针对步骤1得到的气垫船系统的积分串联离散模型设计基于自抗扰控制的 气垫船轨迹跟踪控制器，下面详细说明气垫船轨迹跟踪控制器的设计过程和方法。 [0072] 自抗扰控制是由中国科学院的韩京清研究员吸收工程中比例积分微分控制(PID 控制)，并独立于复杂数学模型提出的一种应对非线性、不确定性和扰动的控制方法。作为 一种经典的控制方法，自抗扰控制由于其不依赖于精准的模型，能对建模误差和外部扰动 进行及时的估计和补偿等优势，成为学术界研究的热点，也是工业界常用的控制方法。自抗 扰控制方法主要包括构建微分跟踪器和扩张状态观测器，并确定基于状态反馈和扰动补偿 控制策略。 [0073] 其中，微分跟踪器，能得到被跟踪信号的微分信号，使用微分跟踪器的目的是给被 跟踪信号安排过渡过程，将阶跃信号等快速变化的信号转化为变化较为缓慢的信号，同时 能够得到信号的微分信息，从而使得反馈控制率既能够快速响应，又不会过度超调。扩张状 态观测器是状态观测器的一种，在自抗扰控制中，由于被控制系统的实际模型不一定和理 论模型完全一致，因此自抗扰控制将所有的未建模部分和外部扰动，统一看作系统的扩张 说　明　书 6/10 页 9 CN 114879658 A 9 状态，这样既免去了精准建模的困难，也能够得到系统的扰动信息，这是自抗扰的精髓思 想，被控制系统所有的状态和扰动都能被扩张状态观测器估计得到，为反馈控制率提供系 统信息。基于状态反馈和扰动补偿的控制策略包括反馈控制率和扰动补偿的计算，反馈控 制率的计算是基于被控制系统的状态反馈，计算跟踪误差并根据误差得到反馈控制率；扰 动补偿是在反馈控制率基础上减去系统的扰动得到控制输入，以实现对扰动的补偿得到较 好的控制效果。 [0074] 由此可见，自抗扰控制方法尤其适用于具有模型复杂、运动过程中受到的扰动影 响因素多特点的气垫船系统的控制。 [0075] 本发明采用自抗扰控制方法及步骤1构建的全驱动气垫船模型建立气垫船轨迹跟 踪控制器。气垫船轨迹跟踪控制器的建立过程，主要包括气垫船微分跟踪器和气垫船扩张 状态观测器的构建，以及基于状态反馈和扰动补偿控制策略的设计。 [0076] 其中，气垫船微分跟踪器如下式所示： [0077] [0078] 其中 为x1的近似值， 为x2的近似值， 为x3的近似值， 为x4的近 似值，fx (k)为x的四阶导数的近似值， 为y1的近似值， 为y2的近似值， 为y3 的近似值， 为y4的近似值，fy (k)为y的四阶导数的近似值。 [0079] 气垫船扩张状态观测器如下式所示： [0080] [0081] 其中z11 ,z12 ,z13 ,z14 ,z15分别是x1 ,x2 ,x3 ,x4 ,x5的估计值，z21 ,z22 ,z23 ,z24 ,z25分别是 y1 ,y2 ,y3 ,y4 ,y5的估计值，b11 ,b12 ,...,b25是观测器参数，可以通过带宽法获取。 [0082] 基于状态反馈和扰动补偿的控制策略包含两个部分，第一部分是基于系统的状态 反馈设计控制率，计算跟踪误差并根据误差得到反馈控制率如下所示： [0083] [0084] 对于线性自抗扰控制方法，φx ,φy通常为如下线性形式： 说　明　书 7/10 页 10 CN 114879658 A 10 [0085] [0086] 其中，k11 ,k12 ,...,k24为控制参数。 [0087] 第二部分是在反馈控制率基础上减去系统的扰动，实现对扰动的补偿，以得到较 好的控制效果，得到的广义控制输入U1 ,U2为如下形式： [0088] [0089] 步骤3、采用强化学习的方法计算反馈控制率，具体来说，构建Critic网络和Actor 网络分别用于拟合气垫船系统在当前状态下的最优控制策略和最优价值函数，其中， Critic网络为具有4个输入节点、16个隐藏层节点和4个输出节点的全连接网络，Actor网络 为具有4个输入节点、16个隐藏层节点和1个输出节点的全连接网络。其中，以Actor网络的 输出作为气垫船的广义控制输入U1 ,U2，通过强化学习模型的训练得到最优的反馈控制率 φx ,φy，从而进一步优化了气垫船的广义控制输入U1 ,U2。 [0090] 在现有的自抗扰控制技术研究中，反馈控制率φx ,φy的优化一直是研究热点和难 点，而且现有技术中已有一些比较成熟的方法可以使用，如：带宽法、非线性切换法和线性 切换法等，采用现有方法就能够解决本发明的技术问题。自抗扰控制器需要设计误差反馈 控制率，但目前主流的方法很难保证参数的自适应性和最优性而且过分依赖于人的经验， 不具有普适性。尤其是当需要调节的参数较多的时候，手动调节很难得到合适的参数。因 此，为了进一步得到更优的控制效果，本发明还提出了采用强化学习模型计算反馈控制率 的方法。 [0091] 强化学习，又称再励学习或增强学习，是机器学习的范式和方法论之一，用于描述 和解决智能体在与环境的交互过程中通过学习策略以达成回报最大化或实现特定目标的 问题。强化学习能够通过迭代训练的方式解决优化问题，得到最优解。在本方法中，使用强 化学习设计优化的反馈控制策略。 [0092] 定义跟踪误差矩阵： [0093] ex (k)＝[e11(k) ,e12(k) ,e13(k) ,e14(k)]T ,ey (k)＝[e21(k) ,e22(k) ,e23(k) ,e24(k)]T 以及权重矩阵Q ,R为正定矩阵。根据最优化理论，定义如下形式的值函数： [0094] [0095] 其中0＜γ≤1为折扣因子，根据贝尔曼最优性理论，最优值函数 应满 足如下贝尔曼方程： [0096] [0097] 对最优值函数偏导可以得到最优控制策略为如下形式： 说　明　书 8/10 页 11 CN 114879658 A 11 [0098] [0099] 一般来说，最优值函数是很难显式求解的，因此在本方法中设计了Actor网络和 Critic网络，分别用于拟合系统在当前状态下的最优控制策略和最优价值函数。 [0100] 定义如下形式的Critic网络， [0101] [0102] 其中φcx ,φcy为激励函数； 为权重矩阵； 是Critic网络的输出，用来 拟合最优价值函数。定义如下形式的Actor网络， [0103] [0104] 其中φU10 ,φU20为激励函数； 为权重矩阵； 用来拟合最优控 制策略。在网络的训练过程中，让Critic网络满足贝尔曼方程，Actor网络符合最优价值函 数的偏导数，因此定义Critic网络的拟合误差如下： [0105] [0106] [0107] 训练过程使用梯度下降的方法，使得拟合误差收敛到可接受范围内。 [0108] 同理定义Actor网络的拟合误差如下： [0109] [0110] 根据训练误差的导数，Critic网络和Actor网络的权重矩阵更新过程如下： [0111] 说　明　书 9/10 页 12 CN 114879658 A 12 [0112] [0113] 其中rcy＞0 ,rcx＞0， 是权重矩阵的学习率。 [0114] 通过训练使得Critic网络与贝尔曼方程的拟合误差减小到允许范围内。在每次训 练过程中，使用Actor网络拟合最优控制策略，并使用Actor网络的输出作为系统的控制输 入，开始下一次训练。通过设置合理的训练终止条件可以得到收敛的Actor和Critic网络， 从而得到优化广义控制输入U1 ,U2。 [0115] 为了验证本发明提出的一种气垫船轨迹跟踪控制方法的控制效果，进行了仿真实 验，图3和图4是根据实验数据得到的控制效果图。此外，为了与现有技术作对比，本发明选 取传统ADRC方法进行对比实验，图5、图6、图7及图8为根据实验结果绘制的，当t＝1 .6s时刻 气垫船系统存在扰动的情况下，本发明提供的一种气垫船轨迹跟踪控制方法与传统ADRC方 法的鲁棒性对比图。仿真实验结果表明，本发明提供的一种气垫船轨迹跟踪控制方法具有 更好的鲁棒性和自适应性。 [0116] 综上所述，以上仅为本发明的较佳实施例而已，并非用于限定本发明的保护范围。 凡在本发明的精神和原则之内，所作的任何修改、等同替换、改进等，均应包含在本发明的 保护范围之内。 说　明　书 10/10 页 13 CN 114879658 A 13 图1 图2 说　</p>\n", "status": 8, "cleanedContent": "<p>(54)发明名称 一种气垫船轨迹跟踪控制方法 (57)摘要 本发明公开了一种气垫船轨迹跟踪控制方 法，通过采用微分平坦方法将将欠驱动的气垫船 模型转化为全驱动的系统，并基于全驱动模型使 用自抗扰控制方法设计控制器，将建模误差和外 部扰动作为扩张状态实时估计并进行补偿，方便 了控制器的设计提高了气垫船系统控制的抗扰 性。 权利要求书2页 说明书10页 附图4页 CN A 2022.08.09 CN A 1 .一种气垫船轨迹跟踪控制方法，其特征在于，包括以下步骤： 步骤1、采用微分平坦方法建立气垫船的全驱动气垫船模型，如公式(1)所示： 其中，x1为气垫船的位置坐标中的横坐标x，x2为横坐标x的一阶导数，x3为横坐标x的二 阶导数，x4为横坐标x的三阶导数，x5为横坐标方向上的扰动，y1为气垫船的位置坐标中的纵 坐标y，y2为纵坐标y的一阶导数，y3为纵坐标y的二阶导数，y4为纵坐标y的三阶导数，y5为纵 坐标方向上的扰动，∈x为扰动 的导数，∈y为扰动 的导数，h为采样时间间隔，k为第k个 采样时刻，U1为气垫船的x方向广义输入，U2为气垫船的y方向广义输入； 步骤2、针对所述全驱动气垫船模型，采用自抗扰控制方法构建气垫船轨迹跟踪控制器 实现对气垫船轨迹的跟踪控制，所述气垫船轨迹跟踪控制器包括气垫船微分跟踪器、气垫 船扩张状态观测器和基于状态反馈和扰动补偿的控制策略； 所述气垫船微分跟踪器如公式(2)所示： 其中 为x1的近似值， 为x2的近似值， 为x3的近似值， 为x4的近似值， fx (k)为x的四阶导数的近似值， 为y1的近似值， 为y2的近似值， 为y3的近似 值， 为y4的近似值，fy (k)为y的四阶导数的近似值，r1为气垫船微分跟踪器的x方向参 数，r2为气垫船微分跟踪器的y方向参数； 所述气垫船扩张状态观测器如公式(3)所示： 其中，e2为x方向的跟踪误差，e2为y方向的跟踪误差，z11 ,z12 ,z13 ,z14 ,z15分别是x1 ,x2 , x3 ,x4 ,x5的估计值，z21 ,z22 ,z23 ,z24 ,z25分别是y1 ,y2 ,y3 ,y4 ,y5的估计值，b11 ,b12 ,...,b25是观 测器参数； 基于状态反馈和扰动补偿的控制策略中的控制率如公式(4)所示： 权 利 要 求 书 1/2 页 2 CN A 2 其中，φx为x方向的控制率，φy为y方向的控制率，k11 ,k12 ,...,k24为控制参数。 2 .根据权利要求1所述的一种气垫船轨迹跟踪控制方法，其特征在于，所述气垫船轨迹 跟踪控制器的控制率为采用强化学习算法进行计算，计算方式包括： 构建Critic网络和Actor网络分别用于拟合气垫船系统在当前状态下的最优控制策略 和最优价值函数，其中，所述Critic网络为具有4个输入节点、16个隐藏层节点和4个输出节 点的全连接网络，所述Actor网络为具有4个输入节点、16个隐藏层节点和1个输出节点的全 连接网络，以所述Actor网络的输出作为气垫船系统的广义控制输入U1和U2，同时得到优化 的控制率φx和φy。 权 利 要 求 书 2/2 页 3 CN A 3 一种气垫船轨迹跟踪控制方法 技术领域 [0001] 本发明属于气垫船自动控制技术领域，具体涉及一种气垫船轨迹跟踪控制方法。 背景技术 [0002] 气垫船使用空气作为船只底部的气垫，即通常是由持续不断供应的低压气体形成 气垫。因此，气垫船与水面的摩擦力很小，气垫船除了在水上运动，还可以在某些比较平滑 的陆路或是结冰的水面等地形上行驶，气垫船的模型如图2所示。 [0003] 气垫船按航行状态可分为全垫式和侧壁式。全垫式气垫船四周用尼龙等物料围成 一个软性的围裙，利用风机把空气充入底部形成气垫，推进则多数使用空气螺旋桨或喷气 方式。全垫式气垫船时速可达70节，具备两栖能力，可以在陆上行驶，这种气垫船在军事上 用作两栖登陆非常合适，能在很多排水式登陆艇无法行驶的海岸登陆。侧壁式气垫船，亦称 表面效应船只，在船底两侧有刚性侧壁插入水中，只在首尾用软性的围裙，推进可以使用传 统水下螺旋桨或喷水机，与全垫式相比，侧壁式气垫船的托力较大，适合作大型舰艇，但不 具两栖能力。 [0004] 气垫船被广泛应用于浅滩登陆，野外救援和民用或军用航运等方面。但由于气垫 船特殊的工作原理和结构，气垫船具有难以建模，欠驱动，非线性强，外部扰动较大的特点， 使得气垫船的精准操控是非常困难的，因此非常需要研究一种气垫船的轨迹跟踪控制方 法。 [0005] 气垫船的轨迹跟踪控制问题吸引了国内外众多学者的广泛关注，常用的方法包括 基于变结构模糊方法的轨迹跟踪控制、基于神经网络的航向控制方法、基于多段控制器的 全垫升气垫船轨迹跟踪控制、基于滑模控制的航向角控制、反步法和李雅普诺夫法等。其 中，基于神经网络的航向控制方法能够更加精准地控制航向角。 [0006] 综上所述，现有方法都依赖于比较准确的数学模型，而且有大量的研究人员在对 气垫船进行精准的建模，然而气垫船属于复杂对象，尤其是其在运动过程中可能遇到的来 自水和风的扰动一般是无法被提前建模的，因此，仍很难得到其精准的模型，现有的基于模 型的控制方法也就不能保证控制的最优性和自适应性，且控制器的抗扰能力也比较差，缺 乏主动抗扰能力。 发明内容 [0007] 有鉴于此，本发明提供了一种气垫船轨迹跟踪控制方法，通过将气垫船系统由欠 驱动系统转换为全驱动系统，采用自抗扰控制方法实现了对气垫船系统轨迹的跟踪控制。 [0008] 本发明提供的一种气垫船轨迹跟踪控制方法，包括以下步骤： [0009] 步骤1、采用微分平坦方法建立气垫船的全驱动气垫船模型，如公式(1)所示： 说 明 书 1/10 页 4 CN A 4 [0010] [0011] 其中，x1为气垫船的位置坐标中的横坐标x，x2为横坐标x的一阶导数，x3为横坐标x 的二阶导数，x4为横坐标x的三阶导数，x5为横坐标方向上的扰动，y1为气垫船的位置坐标中 的纵坐标y，y2为纵坐标y的一阶导数，y3为纵坐标y的二阶导数，y4为纵坐标y的三阶导数，y5 为纵坐标方向上的扰动，∈x为扰动 的导数，∈y为扰动 的导数，h为采样时间间隔，k为 第k个采样时刻，U1为气垫船的x方向广义输入，U2为气垫船的y方向广义输入； [0012] 步骤2、针对所述全驱动气垫船模型，采用自抗扰控制方法构建气垫船轨迹跟踪控 制器实现对气垫船轨迹的跟踪控制，所述气垫船轨迹跟踪控制器包括气垫船微分跟踪器、 气垫船扩张状态观测器和基于状态反馈和扰动补偿的控制策略； [0013] 所述气垫船微分跟踪器如公式(2)所示： [0014] [0015] 其中 为x1的近似值， 为x2的近似值， 为x3的近似值， 为x4的近 似值，fx (k)为x的四阶导数的近似值， 为y1的近似值， 为y2的近似值， 为y3 的近似值， 为y4的近似值，fy (k)为y的四阶导数的近似值，r1为气垫船微分跟踪器的x 方向参数，r2为气垫船微分跟踪器的y方向参数； [0016] 所述气垫船扩张状态观测器如公式(3)所示： [0017] [0018] 其中，e2为x方向的跟踪误差，e2为y方向的跟踪误差，z11 ,z12 ,z13 ,z14 ,z15分别是x1 , x2 ,x3 ,x4 ,x5的估计值，z21 ,z22 ,z23 ,z24 ,z25分别是y1 ,y2 ,y3 ,y4 ,y5的估计值，b11 ,b12 ,...,b25是 观测器参数； [0019] 基于状态反馈和扰动补偿的控制策略中的控制率如公式(4)所示： [0020] 说 明 书 2/10 页 5 CN A 5 [0021] 其中，φx为x方向的控制率，φy为y方向的控制率，k11 ,k12 ,...,k24为控制参数。 [0022] 进一步地，所述气垫船轨迹跟踪控制器的控制率为采用强化学习算法进行计算， 计算方式包括： [0023] 构建Critic网络和Actor网络分别用于拟合气垫船系统在当前状态下的最优控制 策略和最优价值函数，其中，所述Critic网络为具有4个输入节点、16个隐藏层节点和4个输 出节点的全连接网络，所述Actor网络为具有4个输入节点、16个隐藏层节点和1个输出节点 的全连接网络，以所述Actor网络的输出作为气垫船系统的广义控制输入U1和U2，同时得到 优化的控制率φx和φy。 [0024] 有益效果： [0025] 1、本发明通过采用微分平坦方法将将欠驱动的气垫船模型转化为全驱动的系统， 并基于全驱动模型使用自抗扰控制方法设计控制器，将建模误差和外部扰动作为扩张状态 实时估计并进行补偿，方便了控制器的设计提高了气垫船系统控制的抗扰性。 [0026] 2、本发明通过将强化学习算法引入气垫船系统的自抗扰控制器，能够获取优化的 控制策略，得到更优的控制率，从而有效避免了现有自抗扰控制方法中手动调试的过程，能 够有效地节省人力和时间，此外，由于自抗扰控制方法对扰动的估计与补偿特性能够为强 化学习算法提供一个稳定的学习环境，从而保证了强化学习算法的收敛性，节约了学习时 间，因此，采用强化学习算法与自抗扰控制方法结合实现气垫船系统的跟踪控制，能够进一 步地提高跟踪控制的鲁棒性和自适应性。 附图说明 [0027] 图1为本发明提供的一种气垫船轨迹跟踪控制方法的流程图。 [0028] 图2为气垫船的3D模型示意图。 [0029] 图3为采用本发明提供的一种气垫船轨迹跟踪控制方法得到的气垫船横轴位置跟 踪效果图。 [0030] 图4为采用本发明提供的一种气垫船轨迹跟踪控制方法得到的气垫船纵轴位置跟 踪效果图。 [0031] 图5为采用传统ADRC方法得到的气垫船横轴跟踪控制鲁棒性曲线图。 [0032] 图6为采用本发明提供的一种气垫船轨迹跟踪控制方法得到的气垫船横轴跟踪控 制鲁棒性曲线图。 [0033] 图7为采用传统ADRC方法得到的气垫船纵轴跟踪控制鲁棒性曲线图。 [0034] 图8为采用本发明提供的一种气垫船轨迹跟踪控制方法得到的气垫船纵轴跟踪控 制鲁棒性曲线图。 具体实施方式 [0035] 下面结合附图，对本发明进行详细描述。 [0036] 本发明提供的一种气垫船轨迹跟踪控制方法，其基本思想是：采用微分平坦方法 建立全驱动气垫船模型，采用自抗扰控制方法构建气垫船轨迹跟踪控制器实现对气垫船的 轨迹跟踪控制，在此基础进一步的引入强化学习算法考虑气垫船的扰动得到更优的控制输 入，从而进一步提高控制精度。 说 明 书 3/10 页 6 CN A 6 [0037] 本发明提供的一种气垫船轨迹跟踪控制方法，如图1所示，具体包括以下步骤： [0038] 步骤1、针对气垫船的技术特征，采用微分平坦方法建立全驱动气垫船模型。 [0039] 本发明基于现有多种气垫船建模方法描述了气垫船的技术特征，采用如下公式表 示： [0040] [0041] 其中，(x ,y)表示气垫船的位置坐标，ψ表示气垫船的航向角度，τu表示气垫船的纵 向控制力矩，τr表示气垫船的横向控制力矩，u表示气垫船的纵向速度，v表示气垫船的横向 速度，r表示气垫船的偏航角速度， 表示x的导数， 表示y的导数， 表示ψ的导数， 表示u 的导数， 表示v的导数， 表示r的导数。 [0042] 通常情况下，通过获取气垫船的位置坐标和航向角度即可实现对气垫船轨迹的跟 踪，通过控制气垫船的纵向控制力矩和横向控制力矩即可实现对气垫船的控制。本发明需 要解决的问题就是如何计算出合适的控制输入实现对气垫船的轨迹跟踪控制。如公式(1) 所示的气垫船的技术特征，可知气垫船的控制过程为两输入三输出的形式，因此气垫船系 统本身属于欠驱动系统。但是，现有技术中已有的针对欠驱动系统的控制方法不是很成熟， 而关于全驱动系统的控制方法已经有非常成熟的研究成果，因此，本发明的技术思路是将 欠驱动系统转化为全驱动系统，即将气垫船系统转换为全驱动系统。 [0043] 平坦性是系统的一种特性，是将线性时不变系统理论中的可控性扩展到非线性动 力系统中，从而得到微分平坦理论，具有平坦性的系统称为平坦系统。平坦系统具有(虚拟 的)平坦输出，可以用平坦输出以及其有限微分的组合来表示所有的状态以及输入。在本发 明中，采用微分平坦法寻找气垫船系统的平坦输出，即可将气垫船的位置坐标(x ,y)和航向 角度ψ三个被控状态转换为气垫船的位置坐标(x ,y)两个状态，从而实现气垫船系统从欠驱 动系统到全驱动系统的转化。 [0044] 本发明选用微分平坦法将气垫船系统转换为全驱动系统，建立全驱动气垫船模 型，全驱动气垫船模型如下式表示： [0045] [0046] 下面说明建立全驱动气垫船模型的理论推导过程： [0047] 首先，基于平坦系统理论经过平坦性证明，可以确定气垫船系统的平坦输出为x和 y，其他状态和控制输入可以表达为如下形式： 说 明 书 4/10 页 7 CN A 7 [0048] [0049] [0050] [0051] [0052] [0053] [0054] 其次，为了建立两输入两输出的平坦系统，对以下方程求导，方程如公式(8)所示， 直到同时出现平坦输出x、y和控制输入τu ,τr。 [0055] [0056] 经过连续求导，得出平坦输出的四阶导数满足平坦输出的要求，因此建立如下气 垫船系统的全驱动系统模型： [0057] [0058] 其中 和 为扰动。定义U1 ,U2为如下形式的广义输入： [0059] [0060] 得到简化后的全驱动模型： [0061] [0062] 将平坦输出及其导数定义为如下状态： 说 明 书 5/10 页 8 CN A 8 [0063] [0064] 可以将全驱动模型改写为积分串联形式： [0065] [0066] 其中，∈x为扰动 的导数，∈y为扰动 的导数。假设采样时间间隔为h，k表示第k 个采样时刻，则积分串联模型可以离散化为如下形式： [0067] [0068] 其中，x1为气垫船的位置坐标中的横坐标x，x2为横坐标x的一阶导数，x3为横坐标x 的二阶导数，x4为横坐标x的三阶导数，x5为横坐标方向上的扰动，y1为气垫船的位置坐标中 的纵坐标y，y2为纵坐标y的一阶导数，y3为纵坐标y的二阶导数，y4为纵坐标y的三阶导数，y5 为纵坐标方向上的扰动。 [0069] 本发明就以上述积分串联离散模型作为气垫船系统的全驱动气垫船模型。 [0070] 步骤2、针对步骤1建立的全驱动气垫船模型，采用自抗扰控制方法构建气垫船轨 迹跟踪控制器实现对气垫船轨迹的跟踪控制。 [0071] 本发明针对步骤1得到的气垫船系统的积分串联离散模型设计基于自抗扰控制的 气垫船轨迹跟踪控制器，下面详细说明气垫船轨迹跟踪控制器的设计过程和方法。 [0072] 自抗扰控制是由中国科学院的韩京清研究员吸收工程中比例积分微分控制(PID 控制)，并独立于复杂数学模型提出的一种应对非线性、不确定性和扰动的控制方法。作为 一种经典的控制方法，自抗扰控制由于其不依赖于精准的模型，能对建模误差和外部扰动 进行及时的估计和补偿等优势，成为学术界研究的热点，也是工业界常用的控制方法。自抗 扰控制方法主要包括构建微分跟踪器和扩张状态观测器，并确定基于状态反馈和扰动补偿 控制策略。 [0073] 其中，微分跟踪器，能得到被跟踪信号的微分信号，使用微分跟踪器的目的是给被 跟踪信号安排过渡过程，将阶跃信号等快速变化的信号转化为变化较为缓慢的信号，同时 能够得到信号的微分信息，从而使得反馈控制率既能够快速响应，又不会过度超调。扩张状 态观测器是状态观测器的一种，在自抗扰控制中，由于被控制系统的实际模型不一定和理 论模型完全一致，因此自抗扰控制将所有的未建模部分和外部扰动，统一看作系统的扩张 说 明 书 6/10 页 9 CN A 9 状态，这样既免去了精准建模的困难，也能够得到系统的扰动信息，这是自抗扰的精髓思 想，被控制系统所有的状态和扰动都能被扩张状态观测器估计得到，为反馈控制率提供系 统信息。基于状态反馈和扰动补偿的控制策略包括反馈控制率和扰动补偿的计算，反馈控 制率的计算是基于被控制系统的状态反馈，计算跟踪误差并根据误差得到反馈控制率；扰 动补偿是在反馈控制率基础上减去系统的扰动得到控制输入，以实现对扰动的补偿得到较 好的控制效果。 [0074] 由此可见，自抗扰控制方法尤其适用于具有模型复杂、运动过程中受到的扰动影 响因素多特点的气垫船系统的控制。 [0075] 本发明采用自抗扰控制方法及步骤1构建的全驱动气垫船模型建立气垫船轨迹跟 踪控制器。气垫船轨迹跟踪控制器的建立过程，主要包括气垫船微分跟踪器和气垫船扩张 状态观测器的构建，以及基于状态反馈和扰动补偿控制策略的设计。 [0076] 其中，气垫船微分跟踪器如下式所示： [0077] [0078] 其中 为x1的近似值， 为x2的近似值， 为x3的近似值， 为x4的近 似值，fx (k)为x的四阶导数的近似值， 为y1的近似值， 为y2的近似值， 为y3 的近似值， 为y4的近似值，fy (k)为y的四阶导数的近似值。 [0079] 气垫船扩张状态观测器如下式所示： [0080] [0081] 其中z11 ,z12 ,z13 ,z14 ,z15分别是x1 ,x2 ,x3 ,x4 ,x5的估计值，z21 ,z22 ,z23 ,z24 ,z25分别是 y1 ,y2 ,y3 ,y4 ,y5的估计值，b11 ,b12 ,...,b25是观测器参数，可以通过带宽法获取。 [0082] 基于状态反馈和扰动补偿的控制策略包含两个部分，第一部分是基于系统的状态 反馈设计控制率，计算跟踪误差并根据误差得到反馈控制率如下所示： [0083] [0084] 对于线性自抗扰控制方法，φx ,φy通常为如下线性形式： 说 明 书 7/10 页 10 CN A 10 [0085] [0086] 其中，k11 ,k12 ,...,k24为控制参数。 [0087] 第二部分是在反馈控制率基础上减去系统的扰动，实现对扰动的补偿，以得到较 好的控制效果，得到的广义控制输入U1 ,U2为如下形式： [0088] [0089] 步骤3、采用强化学习的方法计算反馈控制率，具体来说，构建Critic网络和Actor 网络分别用于拟合气垫船系统在当前状态下的最优控制策略和最优价值函数，其中， Critic网络为具有4个输入节点、16个隐藏层节点和4个输出节点的全连接网络，Actor网络 为具有4个输入节点、16个隐藏层节点和1个输出节点的全连接网络。其中，以Actor网络的 输出作为气垫船的广义控制输入U1 ,U2，通过强化学习模型的训练得到最优的反馈控制率 φx ,φy，从而进一步优化了气垫船的广义控制输入U1 ,U2。 [0090] 在现有的自抗扰控制技术研究中，反馈控制率φx ,φy的优化一直是研究热点和难 点，而且现有技术中已有一些比较成熟的方法可以使用，如：带宽法、非线性切换法和线性 切换法等，采用现有方法就能够解决本发明的技术问题。自抗扰控制器需要设计误差反馈 控制率，但目前主流的方法很难保证参数的自适应性和最优性而且过分依赖于人的经验， 不具有普适性。尤其是当需要调节的参数较多的时候，手动调节很难得到合适的参数。因 此，为了进一步得到更优的控制效果，本发明还提出了采用强化学习模型计算反馈控制率 的方法。 [0091] 强化学习，又称再励学习或增强学习，是机器学习的范式和方法论之一，用于描述 和解决智能体在与环境的交互过程中通过学习策略以达成回报最大化或实现特定目标的 问题。强化学习能够通过迭代训练的方式解决优化问题，得到最优解。在本方法中，使用强 化学习设计优化的反馈控制策略。 [0092] 定义跟踪误差矩阵： [0093] ex (k)＝[e11(k) ,e12(k) ,e13(k) ,e14(k)]T ,ey (k)＝[e21(k) ,e22(k) ,e23(k) ,e24(k)]T 以及权重矩阵Q ,R为正定矩阵。根据最优化理论，定义如下形式的值函数： [0094] [0095] 其中0＜γ≤1为折扣因子，根据贝尔曼最优性理论，最优值函数 应满 足如下贝尔曼方程： [0096] [0097] 对最优值函数偏导可以得到最优控制策略为如下形式： 说 明 书 8/10 页 11 CN A 11 [0098] [0099] 一般来说，最优值函数是很难显式求解的，因此在本方法中设计了Actor网络和 Critic网络，分别用于拟合系统在当前状态下的最优控制策略和最优价值函数。 [0100] 定义如下形式的Critic网络， [0101] [0102] 其中φcx ,φcy为激励函数； 为权重矩阵； 是Critic网络的输出，用来 拟合最优价值函数。定义如下形式的Actor网络， [0103] [0104] 其中φU10 ,φU20为激励函数； 为权重矩阵； 用来拟合最优控 制策略。在网络的训练过程中，让Critic网络满足贝尔曼方程，Actor网络符合最优价值函 数的偏导数，因此定义Critic网络的拟合误差如下： [0105] [0106] [0107] 训练过程使用梯度下降的方法，使得拟合误差收敛到可接受范围内。 [0108] 同理定义Actor网络的拟合误差如下： [0109] [0110] 根据训练误差的导数，Critic网络和Actor网络的权重矩阵更新过程如下： [0111] 说 明 书 9/10 页 12 CN A 12 [0112] [0113] 其中rcy＞0 ,rcx＞0， 是权重矩阵的学习率。 [0114] 通过训练使得Critic网络与贝尔曼方程的拟合误差减小到允许范围内。在每次训 练过程中，使用Actor网络拟合最优控制策略，并使用Actor网络的输出作为系统的控制输 入，开始下一次训练。通过设置合理的训练终止条件可以得到收敛的Actor和Critic网络， 从而得到优化广义控制输入U1 ,U2。 [0115] 为了验证本发明提出的一种气垫船轨迹跟踪控制方法的控制效果，进行了仿真实 验，图3和图4是根据实验数据得到的控制效果图。此外，为了与现有技术作对比，本发明选 取传统ADRC方法进行对比实验，图5、图6、图7及图8为根据实验结果绘制的，当t＝1 .6s时刻 气垫船系统存在扰动的情况下，本发明提供的一种气垫船轨迹跟踪控制方法与传统ADRC方 法的鲁棒性对比图。仿真实验结果表明，本发明提供的一种气垫船轨迹跟踪控制方法具有 更好的鲁棒性和自适应性。 [0116] 综上所述，以上仅为本发明的较佳实施例而已，并非用于限定本发明的保护范围。 凡在本发明的精神和原则之内，所作的任何修改、等同替换、改进等，均应包含在本发明的 保护范围之内。"}
{"url": "https://blog.csdn.net/and861/article/details/134912787", "article_id": 134912787, "username": "and861", "title": "springboot/java/php/node/python校园课室资源预约系统设计与实现【计算机毕设】", "body": "<p style=\"margin-left:.0001pt;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#4d4d4d;\">本系统</span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#4d4d4d;\">（程序+源码）</span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#4d4d4d;\">带文档lw万字以上</span></span> <span style=\"background-color:#ffffff;\"><span style=\"color:#4d4d4d;\"> 文末可领取本课题的JAVA源码参考</span></span></p>\n\n<h1 style=\"text-align:justify;\"><strong><strong><span style=\"color:#c55911;\"><strong>系统程序文件列表</strong></span></strong></strong></h1>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"567\" src=\"https://img-blog.csdnimg.cn/direct/a818542b1a42415baf9e7a11bb07919d.png\" width=\"1200\" /></p>\n\n<p> <img alt=\"\" height=\"891\" src=\"https://img-blog.csdnimg.cn/direct/1f35f8892ef541b79342bb16d4419d2f.png\" width=\"1200\" /></p>\n\n<h1 style=\"text-align:justify;\"><strong><strong><span style=\"color:#c55911;\"><strong>系统的选题背景和意义</strong></span></strong></strong></h1>\n\n<p>选题背景： 随着高校规模的不断扩大和教学资源的日益紧张，校园课室资源的合理利用成为了一个亟待解决的问题。传统的课室预约方式往往存在着信息不透明、效率低下等问题，给学生和教师的教学工作带来了一定的困扰。因此，设计和实现一套校园课室资源预约系统具有重要的意义。</p>\n\n<p>意义所在： 校园课室资源预约系统能够提高教学资源的利用效率。通过系统化管理和智能化调度，可以避免课室资源的浪费和闲置，最大程度地满足学生和教师的需求，提高教学质量。</p>\n\n<p>该系统能够提供便捷的服务体验。学生和教师可以通过在线平台进行课室的预约和查询，无需再进行繁琐的人工操作和排队等待，节省了时间和精力，提高了工作效率。</p>\n\n<p>校园课室资源预约系统还能够促进校园资源的公平分配。通过合理的规则和算法，确保每个用户都能有机会使用到合适的课室资源，避免了资源的垄断和不公平现象的发生。</p>\n\n<p>该系统还能为学校提供数据支持和决策参考。通过对预约数据的分析和统计，学校可以了解课室资源的使用情况和热点时段，为后续的资源规划和管理提供科学依据。</p>\n\n<p>综上所述，设计和实现一套校园课室资源预约系统具有重要的背景和意义，能够提高教学资源利用效率，提供便捷的服务体验，促进资源公平分配，并为学校提供数据支持和决策参考。</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n\n<h1 style=\"text-align:justify;\"><strong><strong><span style=\"color:#c55911;\"><strong>运行环境</strong></span></strong></strong></h1>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">开发工具：idea/eclipse/myeclipse</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">数据库：mysql5.7或8.0</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">操作系统：win7以上，最好是win10</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">数据库管理工具：Navicat10以上版本</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">环境配置软件： JDK1.8+Maven3.3.9</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\">服务器：Tomcat7.0</p>\n\n<h1 style=\"text-align:justify;\"><strong><strong><span style=\"color:#c55911;\"><strong>技术栈</strong></span></strong></strong></h1>\n\n<ul><li style=\"text-align:justify;\"><strong><strong>前端技术</strong></strong>: 使用Vue.js框架构建用户界面，它是一个灵活且高效的JavaScript框架，适合构建现代化的单页面应用（SPA）。</li>\n<li style=\"text-align:justify;\"><strong><strong>后端技术</strong></strong>: 采用Spring Boot框架进行后端开发，Spring Boot是一个Java平台，它提供了快速搭建、开发、运行Spring应用程序的能力，极大地简化了配置和部署流程。</li>\n<li style=\"text-align:justify;\"><strong><strong>数据库</strong></strong>: 使用MySQL作为关系型数据库管理系统，存储应用数据，它是一个流行的开源数据库，适用于各种规模的应用程序。</li>\n<li style=\"text-align:justify;\"><strong><strong>数据库可视化工具</strong></strong>: Navicat用于数据库的可视化管理和操作，它支持多种数据库系统，提供了一个直观的用户界面来管理MySQL数据库。</li>\n<li style=\"text-align:justify;\"><strong><strong>开发环境</strong></strong>: 使用JDK 1.8进行Java应用的开发，这是Java开发的核心环境，包含了运行Java程序所需的库和工具。</li>\n<li style=\"text-align:justify;\"><strong><strong>服务器</strong></strong>: 使用Tomcat 7.0作为Web应用服务器，它是一个开源的Servlet容器，用于部署和运行Java Web应用程序。</li>\n<li style=\"text-align:justify;\"><strong><strong>项目管理工具</strong></strong>: Maven 3.3.9用于项目的构建和依赖管理，它通过pom.xml文件定义项目结构和依赖关系，简化了项目构建过程和库管理。</li>\n</ul><p style=\"margin-left:.0001pt;text-align:justify;\">后端由Spring Boot提供支持，前端由Vue.js构建，数据存储和管理通过MySQL和Navicat实现，整个开发流程由Maven进行管理，并在Tomcat服务器上运行。</p>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n\n<h1 style=\"text-align:justify;\"><strong><strong><span style=\"color:#c55911;\"><strong>程序界面：</strong></span></strong></strong></h1>\n\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"899\" src=\"https://img-blog.csdnimg.cn/direct/b0076b02df214f188a2bd2e39a146f78.png\" width=\"1200\" /></p>\n\n<p> <img alt=\"\" height=\"840\" src=\"https://img-blog.csdnimg.cn/direct/89f61e729a7343c39a131fbf544b2d10.png\" width=\"1200\" /><img alt=\"\" height=\"822\" src=\"https://img-blog.csdnimg.cn/direct/45cb5842cb574da190df34d36161c873.png\" width=\"1200\" /><img alt=\"\" height=\"826\" src=\"https://img-blog.csdnimg.cn/direct/0aa6d2ef278942a487372262972b9a1b.png\" width=\"1200\" /><img alt=\"\" height=\"782\" src=\"https://img-blog.csdnimg.cn/direct/edc468206d534be0b7217cf0c170ba10.png\" width=\"1200\" /><img alt=\"\" height=\"831\" src=\"https://img-blog.csdnimg.cn/direct/5eda1c3dd8164faf8fea3444bc248faf.png\" width=\"1200\" /><img alt=\"\" height=\"741\" src=\"https://img-blog.csdnimg.cn/direct/c9cc47647b2d463284fef0dead8351e9.png\" width=\"1200\" /><img alt=\"\" height=\"846\" src=\"https://img-blog.csdnimg.cn/direct/c2f1fe308ad444deb26fa12cef37b4cc.png\" width=\"1200\" /></p>\n\n<h1 style=\"text-align:justify;\"><strong><strong><span style=\"color:#c55911;\"><strong>源码文末获取</strong></span></strong><strong><span style=\"color:#c55911;\"><strong>↓↓↓↓</strong></span></strong><strong><span style=\"color:#c55911;\"><strong>：</strong></span></strong></strong></h1>\n", "status": 1, "cleanedContent": "<p style=\"margin-left:.0001pt;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#4d4d4d;\">本系统</span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#4d4d4d;\">（程序+源码）</span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#4d4d4d;\">带文档lw万字以上</span></span> <span style=\"background-color:#ffffff;\"><span style=\"color:#4d4d4d;\"> 文末可领取本课题的JAVA源码参考</span></span></p> <h1 style=\"text-align:justify;\"><strong><strong><span style=\"color:#c;\"><strong>系统程序文件列表</strong></span></strong></strong></h1> <p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"567\" src=\"\" width=\"1200\" /></p> <p> <img alt=\"\" height=\"891\" src=\"\" width=\"1200\" /></p> <h1 style=\"text-align:justify;\"><strong><strong><span style=\"color:#c;\"><strong>系统的选题背景和意义</strong></span></strong></strong></h1> <p>选题背景： 随着高校规模的不断扩大和教学资源的日益紧张，校园课室资源的合理利用成为了一个亟待解决的问题。传统的课室预约方式往往存在着信息不透明、效率低下等问题，给学生和教师的教学工作带来了一定的困扰。因此，设计和实现一套校园课室资源预约系统具有重要的意义。</p> <p>意义所在： 校园课室资源预约系统能够提高教学资源的利用效率。通过系统化管理和智能化调度，可以避免课室资源的浪费和闲置，最大程度地满足学生和教师的需求，提高教学质量。</p> <p>该系统能够提供便捷的服务体验。学生和教师可以通过在线平台进行课室的预约和查询，无需再进行繁琐的人工操作和排队等待，节省了时间和精力，提高了工作效率。</p> <p>校园课室资源预约系统还能够促进校园资源的公平分配。通过合理的规则和算法，确保每个用户都能有机会使用到合适的课室资源，避免了资源的垄断和不公平现象的发生。</p> <p>该系统还能为学校提供数据支持和决策参考。通过对预约数据的分析和统计，学校可以了解课室资源的使用情况和热点时段，为后续的资源规划和管理提供科学依据。</p> <p>综上所述，设计和实现一套校园课室资源预约系统具有重要的背景和意义，能够提高教学资源利用效率，提供便捷的服务体验，促进资源公平分配，并为学校提供数据支持和决策参考。</p> <p style=\"margin-left:.0001pt;text-align:justify;\"></p> <h1 style=\"text-align:justify;\"><strong><strong><span style=\"color:#c;\"><strong>运行环境</strong></span></strong></strong></h1> <p style=\"margin-left:.0001pt;text-align:justify;\">开发工具：idea/eclipse/myeclipse</p> <p style=\"margin-left:.0001pt;text-align:justify;\">数据库：mysql5.7或8.0</p> <p style=\"margin-left:.0001pt;text-align:justify;\">操作系统：win7以上，最好是win10</p> <p style=\"margin-left:.0001pt;text-align:justify;\">数据库管理工具：Navicat10以上版本</p> <p style=\"margin-left:.0001pt;text-align:justify;\">环境配置软件： JDK1.8+Maven3.3.9</p> <p style=\"margin-left:.0001pt;text-align:justify;\">服务器：Tomcat7.0</p> <h1 style=\"text-align:justify;\"><strong><strong><span style=\"color:#c;\"><strong>技术栈</strong></span></strong></strong></h1> <ul><li style=\"text-align:justify;\"><strong><strong>前端技术</strong></strong>: 使用Vue.js框架构建用户界面，它是一个灵活且高效的JavaScript框架，适合构建现代化的单页面应用（SPA）。</li> <li style=\"text-align:justify;\"><strong><strong>后端技术</strong></strong>: 采用Spring Boot框架进行后端开发，Spring Boot是一个Java平台，它提供了快速搭建、开发、运行Spring应用程序的能力，极大地简化了配置和部署流程。</li> <li style=\"text-align:justify;\"><strong><strong>数据库</strong></strong>: 使用MySQL作为关系型数据库管理系统，存储应用数据，它是一个流行的开源数据库，适用于各种规模的应用程序。</li> <li style=\"text-align:justify;\"><strong><strong>数据库可视化工具</strong></strong>: Navicat用于数据库的可视化管理和操作，它支持多种数据库系统，提供了一个直观的用户界面来管理MySQL数据库。</li> <li style=\"text-align:justify;\"><strong><strong>开发环境</strong></strong>: 使用JDK 1.8进行Java应用的开发，这是Java开发的核心环境，包含了运行Java程序所需的库和工具。</li> <li style=\"text-align:justify;\"><strong><strong>服务器</strong></strong>: 使用Tomcat 7.0作为Web应用服务器，它是一个开源的Servlet容器，用于部署和运行Java Web应用程序。</li> <li style=\"text-align:justify;\"><strong><strong>项目管理工具</strong></strong>: Maven 3.3.9用于项目的构建和依赖管理，它通过pom.xml文件定义项目结构和依赖关系，简化了项目构建过程和库管理。</li> </ul><p style=\"margin-left:.0001pt;text-align:justify;\">后端由Spring Boot提供支持，前端由Vue.js构建，数据存储和管理通过MySQL和Navicat实现，整个开发流程由Maven进行管理，并在Tomcat服务器上运行。</p> <p style=\"margin-left:.0001pt;text-align:justify;\"></p> <h1 style=\"text-align:justify;\"><strong><strong><span style=\"color:#c;\"><strong>程序界面：</strong></span></strong></strong></h1> <p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"899\" src=\"\" width=\"1200\" /></p> <p> <img alt=\"\" height=\"840\" src=\"\" width=\"1200\" /><img alt=\"\" height=\"822\" src=\"\" width=\"1200\" /><img alt=\"\" height=\"826\" src=\"\" width=\"1200\" /><img alt=\"\" height=\"782\" src=\"\" width=\"1200\" /><img alt=\"\" height=\"831\" src=\"\" width=\"1200\" /><img alt=\"\" height=\"741\" src=\"\" width=\"1200\" /><img alt=\"\" height=\"846\" src=\"\" width=\"1200\" /></p> <h1 style=\"text-align:justify;\"><strong><strong><span style=\"color:#c;\"><strong>源码文末获取</strong></span></strong><strong><span style=\"color:#c;\"><strong>↓↓↓↓</strong></span></strong><strong><span style=\"color:#c;\""}
{"url": "https://blog.csdn.net/weixin_63266434/article/details/134912987", "article_id": 134912987, "username": "weixin_63266434", "title": "【图像传输】QPSK调制解调数字带通图像传输（含误码率）【含Matlab源码 3602期】", "body": "<p><img src=\"https://img-blog.csdnimg.cn/direct/43e47af318fa4b89a463c0a20c2015be.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2><a id=\"QPSK_1\"></a>⛄一、QPSK调制解调数字带通图像传输</h2>\n<p>软件无线电在无线通信领域被称为是自模拟通信过渡到数字通信之后的又一次革命，在军用和民用方面都有着广阔的应用。它是一种新的无线通信技术，基于通用的可编程的硬件平台，把尽可能多的通信功能用软件实现，从而使系统的改进和升级都非常方便，容易实现不同通信系统之间的兼容。调制与解调是整个数字通信系统基带处理的基本组成部分，也基本上构建了数字通信系统的总体性能框架。其中，QPSK调制与解调是一种性能较好，易于实现且已广泛应用于实践的调制解调方式。</p>\n<p>正交相移键控(Quadrature Phase Shift Keying，QPSK)是一种数字调制方式。它分为绝对相移和相对相移两种。由于绝对相移方式存在相位模糊问题，所以在实际中主要采用相对移相方式DQPSK。目前已经广泛应用于无线通信中，成为现代通信中一种十分重要的调制解调方式。</p>\n<p>正交相移键控（Quadrature Phase Shift Keying，QPSK）是一种数字调制方式。它分为绝对相移和相对相移两种。由于绝对相移方式存在相位模糊问题，所以在实际中主要采用相对移相方式DQPSK。QPSK是一种四进制相位调制，具有良好的抗噪特性和频带利用率，广泛应用 于卫星链路、数字集群等通信业务。本课题通过使用QPSK建立如下的图像传输流程：<br>\n<img src=\"https://img-blog.csdnimg.cn/direct/59a63fda4bde4ef187ccac08b216d49c.png\" alt=\"在这里插入图片描述\"><br>\n采用QPSK 调制方式，同时保证了信号传输的效率和误码性能。</p>\n<p>一般的QPSK的实施，也表明高阶PSK的实施。在星座图中的正弦和余弦波用来传输方面的书面符号：</p>\n<p>这就产生了四个阶段π/ 4，3π/ 4，5π/ 4和7π/ 4需要。</p>\n<p>这个结果与单位的基础上功能在一个两维的信号空间被用作信号的同相分量和正交分量信号的第二首的基础功能。</p>\n<p>而扩频通信，其特点是传输信息所用的带宽远大于信息本身带宽。在这种信息传输方式中，发送端以扩频编码（一般是伪随机码）进行扩频调制。在接收端则用同样的码进行相关同步接收、解扩及恢复所传信息数据。</p>\n<h2><a id=\"_18\"></a>⛄二、部分源代码</h2>\n<p>clear<br>\nN1=2400;<br>\n[BIT,data,data2,a1,a2,a3] =PICTURE_EXCHANGE(‘my_picture3.jpg’,‘603_1063_3.txt’);%读取高清图片<br>\nfigure(1);<br>\nimshow(uint8(data2));<br>\ntitle(‘发送的图片’);<br>\nL1=length(BIT);<br>\nfs=8000;<br>\nalpha=0.2;<br>\nRB=2400;<br>\nTb=1/RB;<br>\nfc=1800;<br>\nRb=2<em>RB;<br>\nM=4;<br>\nSNR=10;<br>\nERROR_COUNT=0;<br>\nRedundancy=8;<br>\nPE_COUNT=0;<br>\nSNR_OLD=0;<br>\nSNR_NEW=0;<br>\nSNR_NEW_OUT=0;<br>\nMy_Redundancy=[0 0 0 0];<br>\n[BIT,N] = ADD_ZERO(BIT,Rb-Redundancy);<br>\nRECEIVER_1= zeros(1,length(BIT));<br>\nh2=my_fitter(RB,fs,fc,Tb,alpha,‘RECEIVE_COS’);<br>\ndraw_filter(h2,fs,3,2,8,‘COS的带通滤波器’);<br>\nh3=my_fitter(RB,fs,fc,Tb,alpha,‘RECEIVE_SIN’);<br>\ndraw_filter(h3,fs,3,3,8,‘SIN的带通滤波器’);<br>\nh1=my_bpcosfir(fs,0,Rb</em>2,N1,alpha,‘COS’);<br>\nh4=match_filter(2401,Tb,0.2);<br>\ndraw_filter(h4,fs,3,1,8,‘发送滤波器’);</p>\n<p>LPF_FLAG=‘Enable_FIR’;<br>\nBPF_FLAG=‘Enable_FIR’;</p>\n<p>% 分帧处理，一次发送2400个码元，即处理4800个bit<br>\nfor i=1:1:length(BIT)/(Rb-Redundancy)<br>\ni<br>\n% 接收缓冲区<br>\nTemp_1=BIT((Rb-Redundancy)*(i-1)+1:(Rb-Redundancy)*i);<br>\n%加冗余<br>\nTemp=[My_Redundancy’; Temp_1 ;My_Redundancy’];<br>\n% GENERATED_QPSK为发射机发送的QPSK信号，h1为发送滤波器响应,LPF_FLAG为是否使用发送滤波器<br>\n[GENERATED_QPSK,u4_send]=GENERATE_QPSK(Temp,fc,fs,h1,LPF_FLAG);<br>\n% 画频谱图<br>\ndraw_fft(9,‘加噪前’,3,1,GENERATED_QPSK,fs);<br>\n% 加噪声，SNR为信噪比，GENERATED_QPSK为加噪后的信号<br>\n% GENERATED_QPSK_NOISE=awgn(GENERATED_QPSK,SNR,‘measured’);<br>\nGENERATED_QPSK_NOISE=GENERATED_QPSK;<br>\n% [GENERATED_QPSK,NOISE] = add_noise(GENERATED_QPSK,SNR);<br>\nSNR_OLD=SNR_singlech(GENERATED_QPSK,GENERATED_QPSK_NOISE);<br>\n% 画频谱图<br>\ndraw_fft(9,‘加噪后’,3,2,GENERATED_QPSK_NOISE,fs);<br>\n% 载波同步<br>\n% x_sync = sync_two_signals( x_resampled,x_training_wave,idx )<br>\n% 相干解调，h2与h3为两个带通滤波器，BPF_FLAG为是否使用接收带通滤波器<br>\n[Demodulated_QPSK,COS_SIN] = Demodulation_QPSK(GENERATED_QPSK_NOISE,fc,fs,h2,h3,BPF_FLAG);<br>\n% draw_fft(9,‘带通后’,3,3,COS_SIN,fs);<br>\nSNR_NEW=SNR_singlech(GENERATED_QPSK(12000:36000),real(COS_SIN(12000:36000)));</p>\n<p>SNR_NEW_OUT=(SNR_NEW+SNR_NEW_OUT);<br>\n% 计算误码率并赋值<br>\nfor k=1:1:Rb-Redundancy<br>\nif( Demodulated_QPSK(k)~= Temp_1(k))<br>\nERROR_COUNT=ERROR_COUNT+1;<br>\nend<br>\nif(mod(k,2)==1)<br>\nif(Demodulated_QPSK(k)~= Temp_1(k)||Demodulated_QPSK(k+1)~= Temp_1(k+1))<br>\nPE_COUNT=PE_COUNT+1;<br>\nend</p>\n<pre><code>end\n\nRECEIVER_1((Rb-Redundancy)*(i-1)+k)=Demodulated_QPSK(k);\n</code></pre>\n<p>end<br>\nend<br>\nSNR_NEW_OUT=SNR_NEW_OUT/(length(BIT)/(Rb-Redundancy));<br>\n%将二进制数据变为图片<br>\nPicture_Show(RECEIVER_1,L1,a1,a2,a3);<br>\nFIR_FLAG(LPF_FLAG,BPF_FLAG);<br>\n% fprintf(1,‘当前带通滤波前信噪比为：%dDB\\n’,SNR);<br>\n% fprintf(1,‘滤波后信噪比为：%fDB\\n’,SNR_NEW_OUT);<br>\nfprintf(1,‘输出信号的误码率为：%d\\n’,PE_COUNT/L1)<br>\nfprintf(1,‘理论误码率为：%d\\n’,1-(1-0.5*erfc(sqrt((10<sup>(SNR_NEW_OUT/10))/2)))</sup>2)</p>\n<h2><a id=\"_106\"></a>⛄三、运行结果</h2>\n<p><img src=\"https://img-blog.csdnimg.cn/direct/2bd6dc144aa44113bab503c1cb9fa99d.jpeg#pic_center\" alt=\"在这里插入图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/952a981d9f4642feb82beb1869b04585.jpeg#pic_center\" alt=\"在这里插入图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/40285c1d17a14c26ab09e222406b99b1.jpeg#pic_center\" alt=\"在这里插入图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/f365ab42907240229b9e57a61369d629.jpeg#pic_center\" alt=\"在这里插入图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/ba274410e4e54c92866058cbbf45f443.jpeg#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2><a id=\"matlab_113\"></a>⛄四、matlab版本及参考文献</h2>\n<p><strong>1 matlab版本</strong><br>\n2014a</p>\n<p><strong>2 参考文献</strong><br>\n[1]李娜, 王磊, 赵宏伟. 基于改进的DWT-SVD的图像传输算法[J]. 计算机工程与应用, 2019, 55(22): 1-7</p>\n<p><strong>3 备注</strong><br>\n简介此部分摘自互联网，仅供参考，若侵权，联系删除</p>\n\n", "status": 1, "cleanedContent": "<p><img src=\"\" alt=\"在这里插入图片描述\"></p> <h2><a id=\"QPSK_1\"></a>一、QPSK调制解调数字带通图像传输</h2> <p>软件无线电在无线通信领域被称为是自模拟通信过渡到数字通信之后的又一次革命，在军用和民用方面都有着广阔的应用。它是一种新的无线通信技术，基于通用的可编程的硬件平台，把尽可能多的通信功能用软件实现，从而使系统的改进和升级都非常方便，容易实现不同通信系统之间的兼容。调制与解调是整个数字通信系统基带处理的基本组成部分，也基本上构建了数字通信系统的总体性能框架。其中，QPSK调制与解调是一种性能较好，易于实现且已广泛应用于实践的调制解调方式。</p> <p>正交相移键控(Quadrature Phase Shift Keying，QPSK)是一种数字调制方式。它分为绝对相移和相对相移两种。由于绝对相移方式存在相位模糊问题，所以在实际中主要采用相对移相方式DQPSK。目前已经广泛应用于无线通信中，成为现代通信中一种十分重要的调制解调方式。</p> <p>正交相移键控（Quadrature Phase Shift Keying，QPSK）是一种数字调制方式。它分为绝对相移和相对相移两种。由于绝对相移方式存在相位模糊问题，所以在实际中主要采用相对移相方式DQPSK。QPSK是一种四进制相位调制，具有良好的抗噪特性和频带利用率，广泛应用 于卫星链路、数字集群等通信业务。本课题通过使用QPSK建立如下的图像传输流程：<br> <img src=\"\" alt=\"在这里插入图片描述\"><br> 采用QPSK 调制方式，同时保证了信号传输的效率和误码性能。</p> <p>一般的QPSK的实施，也表明高阶PSK的实施。在星座图中的正弦和余弦波用来传输方面的书面符号：</p> <p>这就产生了四个阶段π/ 4，3π/ 4，5π/ 4和7π/ 4需要。</p> <p>这个结果与单位的基础上功能在一个两维的信号空间被用作信号的同相分量和正交分量信号的第二首的基础功能。</p> <p>而扩频通信，其特点是传输信息所用的带宽远大于信息本身带宽。在这种信息传输方式中，发送端以扩频编码（一般是伪随机码）进行扩频调制。在接收端则用同样的码进行相关同步接收、解扩及恢复所传信息数据。</p> <h2><a id=\"_18\"></a>二、部分源代码</h2> <p>clear<br> N1=2400;<br> [BIT,data,data2,a1,a2,a3] =PICTURE_EXCHANGE(‘my_picture3.jpg’,‘603_1063_3.txt’);%读取高清图片<br> figure(1);<br> imshow(uint8(data2));<br> title(‘发送的图片’);<br> L1=length(BIT);<br> fs=8000;<br> alpha=0.2;<br> RB=2400;<br> Tb=1/RB;<br> fc=1800;<br> Rb=2<em>RB;<br> M=4;<br> SNR=10;<br> ERROR_COUNT=0;<br> Redundancy=8;<br> PE_COUNT=0;<br> SNR_OLD=0;<br> SNR_NEW=0;<br> SNR_NEW_OUT=0;<br> My_Redundancy=[0 0 0 0];<br> [BIT,N] = ADD_ZERO(BIT,Rb-Redundancy);<br> RECEIVER_1= zeros(1,length(BIT));<br> h2=my_fitter(RB,fs,fc,Tb,alpha,‘RECEIVE_COS’);<br> draw_filter(h2,fs,3,2,8,‘COS的带通滤波器’);<br> h3=my_fitter(RB,fs,fc,Tb,alpha,‘RECEIVE_SIN’);<br> draw_filter(h3,fs,3,3,8,‘SIN的带通滤波器’);<br> h1=my_bpcosfir(fs,0,Rb</em>2,N1,alpha,‘COS’);<br> h4=match_filter(2401,Tb,0.2);<br> draw_filter(h4,fs,3,1,8,‘发送滤波器’);</p> <p>LPF_FLAG=‘Enable_FIR’;<br> BPF_FLAG=‘Enable_FIR’;</p> <p>% 分帧处理，一次发送2400个码元，即处理4800个bit<br> for i=1:1:length(BIT)/(Rb-Redundancy)<br> i<br> % 接收缓冲区<br> Temp_1=BIT((Rb-Redundancy)*(i-1)+1:(Rb-Redundancy)*i);<br> %加冗余<br> Temp=[My_Redundancy’; Temp_1 ;My_Redundancy’];<br> % GENERATED_QPSK为发射机发送的QPSK信号，h1为发送滤波器响应,LPF_FLAG为是否使用发送滤波器<br> [GENERATED_QPSK,u4_send]=GENERATE_QPSK(Temp,fc,fs,h1,LPF_FLAG);<br> % 画频谱图<br> draw_fft(9,‘加噪前’,3,1,GENERATED_QPSK,fs);<br> % 加噪声，SNR为信噪比，GENERATED_QPSK为加噪后的信号<br> % GENERATED_QPSK_NOISE=awgn(GENERATED_QPSK,SNR,‘measured’);<br> GENERATED_QPSK_NOISE=GENERATED_QPSK;<br> % [GENERATED_QPSK,NOISE] = add_noise(GENERATED_QPSK,SNR);<br> SNR_OLD=SNR_singlech(GENERATED_QPSK,GENERATED_QPSK_NOISE);<br> % 画频谱图<br> draw_fft(9,‘加噪后’,3,2,GENERATED_QPSK_NOISE,fs);<br> % 载波同步<br> % x_sync = sync_two_signals( x_resampled,x_training_wave,idx )<br> % 相干解调，h2与h3为两个带通滤波器，BPF_FLAG为是否使用接收带通滤波器<br> [Demodulated_QPSK,COS_SIN] = Demodulation_QPSK(GENERATED_QPSK_NOISE,fc,fs,h2,h3,BPF_FLAG);<br> % draw_fft(9,‘带通后’,3,3,COS_SIN,fs);<br> SNR_NEW=SNR_singlech(GENERATED_QPSK(:),real(COS_SIN(:)));</p> <p>SNR_NEW_OUT=(SNR_NEW+SNR_NEW_OUT);<br> % 计算误码率并赋值<br> for k=1:1:Rb-Redundancy<br> if( Demodulated_QPSK(k)~= Temp_1(k))<br> ERROR_COUNT=ERROR_COUNT+1;<br> end<br> if(mod(k,2)==1)<br> if(Demodulated_QPSK(k)~= Temp_1(k)||Demodulated_QPSK(k+1)~= Temp_1(k+1))<br> PE_COUNT=PE_COUNT+1;<br> end</p> <pre><code>end RECEIVER_1((Rb-Redundancy)*(i-1)+k)=Demodulated_QPSK(k); </code></pre> <p>end<br> end<br> SNR_NEW_OUT=SNR_NEW_OUT/(length(BIT)/(Rb-Redundancy));<br> %将二进制数据变为图片<br> Picture_Show(RECEIVER_1,L1,a1,a2,a3);<br> FIR_FLAG(LPF_FLAG,BPF_FLAG);<br> % fprintf(1,‘当前带通滤波前信噪比为：%dDB\\n’,SNR);<br> % fprintf(1,‘滤波后信噪比为：%fDB\\n’,SNR_NEW_OUT);<br> fprintf(1,‘输出信号的误码率为：%d\\n’,PE_COUNT/L1)<br> fprintf(1,‘理论误码率为：%d\\n’,1-(1-0.5*erfc(sqrt((10<sup>(SNR_NEW_OUT/10))/2)))</sup>2)</p> <h2><a id=\"_106\"></a>三、运行结果</h2> <p><img src=\"\" alt=\"在这里插入图片描述\"><br> <img src=\"\" alt=\"在这里插入图片描述\"><br> <img src=\"\" alt=\"在这里插入图片描述\"><br> <img src=\"\" alt=\"在这里插入图片描述\"><br> <img src=\"\" alt=\"在这里插入图片描述\"></p> <h2><a id=\"matlab_113\"></a>四、matlab版本及参考文献</h2> <p><strong>1 matlab版本</strong><br> 2014a</p> <p><strong>2 参考文献</strong><br> [1]李娜, 王磊, 赵宏伟. 基于改进的DWT-SVD的图像传输算法[J]."}
{"url": "https://blog.csdn.net/xiao1234oaix/article/details/134913203", "article_id": 134913203, "username": "xiao1234oaix", "title": "SQLMap介绍", "body": "<pre><code>预计更新\n</code></pre>\n<ol>\n<li>\n<p>SQL注入概述<br>\n1.1 SQL注入攻击概述<br>\n1.2 SQL注入漏洞分类<br>\n1.3 SQL注入攻击的危害</p>\n</li>\n<li>\n<p>SQLMap介绍<br>\n2.1 SQLMap简介<br>\n2.2 SQLMap安装与配置<br>\n2.3 SQLMap基本用法</p>\n</li>\n<li>\n<p>SQLMap进阶使用<br>\n3.1 SQLMap高级用法<br>\n3.2 SQLMap配置文件详解<br>\n3.3 SQLMap插件的使用</p>\n</li>\n<li>\n<p>SQL注入漏洞检测<br>\n4.1 SQL注入漏洞检测基础<br>\n4.2 SQL注入漏洞检测工具<br>\n4.3 SQL注入漏洞检测实战</p>\n</li>\n<li>\n<p>SQL注入漏洞利用<br>\n5.1 SQL注入漏洞利用介绍<br>\n5.2 SQLMap利用SQL注入漏洞<br>\n5.3 SQL注入漏洞利用实战</p>\n</li>\n<li>\n<p>SQL注入防御<br>\n6.1 SQL注入防御基础<br>\n6.2 防御SQL注入的最佳实践<br>\n6.3 使用SQLMap测试防御效果</p>\n</li>\n<li>\n<p>SQL注入绕过技术<br>\n7.1 SQL注入绕过技术介绍<br>\n7.2 绕过WAF<br>\n7.3 绕过输入过滤</p>\n</li>\n<li>\n<p>SQL注入攻击的后果<br>\n8.1 数据泄露<br>\n8.2 数据篡改<br>\n8.3 数据删除</p>\n</li>\n<li>\n<p>SQL注入漏洞的利用场景<br>\n9.1 SQL注入漏洞的利用场景介绍<br>\n9.2 电商网站SQL注入漏洞利用实战<br>\n9.3 CMS网站SQL注入漏洞利用实战</p>\n</li>\n<li>\n<p>SQL注入漏洞的漏洞挖掘与利用<br>\n10.1 SQL注入漏洞的漏洞挖掘方法<br>\n10.2 SQL注入漏洞利用的高级技巧<br>\n10.3 SQL注入漏洞利用的未来趋势</p>\n</li>\n</ol>\n<pre><code>SQLMap简介\n</code></pre>\n<p>SQLMap是一款开源的自动化SQL注入工具，可以帮助渗透测试工程师快速发现和利用SQL注入漏洞。SQLMap具有自动化探测、漏洞利用、数据提取等功能，可以针对各种不同类型的数据库进行测试。从渗透测试工程师的角度，我们需要深入了解SQLMap的原理和使用方法，以便于提高渗透测试的效率和准确性。</p>\n<ol>\n<li>SQLMap的原理</li>\n</ol>\n<p>SQLMap是基于Python开发的自动化SQL注入工具，其原理是通过构造恶意SQL查询语句，探测和利用目标网站的SQL注入漏洞。SQLMap通过发送不同类型的SQL查询请求，从而判断目标网站是否存在SQL注入漏洞，并且可以利用漏洞获取数据库中的数据。</p>\n<p>SQLMap的工作流程如下：</p>\n<ol>\n<li>\n<p>探测：SQLMap首先会对目标网站进行探测，判断是否存在SQL注入漏洞，包括基于错误消息的注入、基于时间的盲注、布尔盲注等多种探测方式。</p>\n</li>\n<li>\n<p>扫描：如果存在注入漏洞，SQLMap会对漏洞进行扫描，包括获取数据库版本、表结构、列名等信息。</p>\n</li>\n<li>\n<p>利用：SQLMap会利用漏洞进行攻击，包括获取敏感数据、执行任意SQL语句、提权等操作。</p>\n</li>\n</ol>\n<ol start=\"2\">\n<li>SQLMap的使用方法</li>\n</ol>\n<p>SQLMap是一款命令行工具，需要在终端中使用。下面我们来介绍SQLMap的常用参数和使用方法。</p>\n<ol>\n<li>基本参数</li>\n</ol>\n<p>-a：指定注入类型，包括GET、POST、COOKIE等。</p>\n<p>-u：指定目标URL。</p>\n<p>-p：指定注入参数。</p>\n<p>–level：指定注入等级，包括1-5级。</p>\n<p>–risk：指定注入风险，包括1-3级。</p>\n<p>-dbs：获取目标数据库列表。</p>\n<ol start=\"2\">\n<li>进阶参数</li>\n</ol>\n<p>–threads：指定线程数。</p>\n<p>–proxy：指定代理服务器。</p>\n<p>–time-sec：指定时间延迟，用于盲注。</p>\n<p>–tamper：指定字符编码方式，用于绕过WAF。</p>\n<p>–dbms：指定目标数据库类型，包括MySQL、Oracle、MSSQL等。</p>\n<ol start=\"3\">\n<li>操作参数</li>\n</ol>\n<p>–dump：获取目标数据库中的数据。</p>\n<p>–os-shell：获取目标服务器的操作系统Shell。</p>\n<p>–sql-shell：获取目标数据库的SQL Shell。</p>\n<p>–technique：指定注入技术，包括UNION注入、报错注入、时间盲注等。</p>\n<ol start=\"3\">\n<li>SQLMap的实战应用</li>\n</ol>\n<p>下面我们通过实例来介绍SQLMap的具体应用。</p>\n<ol>\n<li>探测目标网站是否存在注入漏洞</li>\n</ol>\n<p>我们可以使用以下命令进行探测：</p>\n<pre><code>sqlmap -u \"http://example.com/index.php?id=1\" --dbs\n</code></pre>\n<p>其中，-u参数指定目标URL，–dbs参数用于获取目标数据库列表。如果目标网站存在注入漏洞，则SQLMap会输出数据库列表。</p>\n<ol start=\"2\">\n<li>获取目标数据库中的数据</li>\n</ol>\n<p>我们可以使用以下命令获取目标数据库中的数据：</p>\n<pre><code>sqlmap -u \"http://example.com/index.php?id=1\" --dump -T users\n</code></pre>\n<p>其中，-T参数指定要获取的表名，–dump参数用于获取表中的数据。如果目标网站存在注入漏洞，则SQLMap会输出表中的数据。</p>\n<ol start=\"3\">\n<li>获取目标服务器的操作系统Shell</li>\n</ol>\n<p>我们可以使用以下命令获取目标服务器的操作系统Shell：</p>\n<pre><code>sqlmap -u \"http://example.com/index.php?id=1\" --os-shell\n</code></pre>\n<p>如果目标网站存在注入漏洞，则SQLMap会输出操作系统Shell。</p>\n<ol start=\"4\">\n<li>获取目标数据库的SQL Shell</li>\n</ol>\n<p>我们可以使用以下命令获取目标数据库的SQL Shell：</p>\n<pre><code>sqlmap -u \"http://example.com/index.php?id=1\" --sql-shell\n</code></pre>\n<p>如果目标网站存在注入漏洞，则SQLMap会输出数据库的SQL Shell。</p>\n<p>需要注意的是，使用SQLMap进行渗透测试时需要进行充分的测试和备份，以防止对目标系统造成不可逆的损害。</p>\n<ol start=\"4\">\n<li>总结</li>\n</ol>\n<p>SQLMap是一款开源的自动化SQL注入工具，可以帮助渗透测试工程师快速发现和利用SQL注入漏洞。SQLMap具有自动化探测、漏洞利用、数据提取等功能，可以针对各种不同类型的数据库进行测试。渗透测试工程师需要深入了解SQLMap的原理和使用方法，以便于提高渗透测试的效率和准确性。在使用SQLMap进行渗透测试时，需要进行充分的测试和备份，以防止对目标系统造成不可逆的损害。</p>\n<pre><code>SQLMap安装与配置\n</code></pre>\n<p>SQLMap是一款自动化SQL注入工具，可以帮助渗透测试工程师快速发现和利用SQL注入漏洞。在使用SQLMap进行渗透测试之前，我们需要先了解SQLMap的安装和配置方法。本文将从渗透测试工程师的角度，详细介绍SQLMap的安装和配置方法，以及常见问题的解决方案。</p>\n<ol>\n<li>SQLMap的安装方法</li>\n</ol>\n<p>SQLMap是一款基于Python开发的工具，因此需要先安装Python。下面我们将介绍SQLMap的安装方法。</p>\n<ol>\n<li>安装Python</li>\n</ol>\n<p>首先，我们需要在官网下载Python的安装包，然后按照安装向导进行安装。在安装过程中，需要选择添加Python到系统环境变量，以便于在命令行中使用Python。</p>\n<ol start=\"2\">\n<li>下载SQLMap</li>\n</ol>\n<p>我们可以在SQLMap的官网（https://sqlmap.org/）上下载最新版本的SQLMap。下载完成后，将文件解压到本地。</p>\n<ol start=\"3\">\n<li>安装依赖库</li>\n</ol>\n<p>SQLMap需要使用一些Python库来进行工作，我们可以通过以下命令安装这些依赖库：</p>\n<pre><code>pip install -r requirements.txt\n</code></pre>\n<p>其中，requirements.txt是SQLMap的依赖库列表文件。</p>\n<ol start=\"4\">\n<li>安装完成</li>\n</ol>\n<p>安装完成后，我们可以通过以下命令验证SQLMap是否安装成功：</p>\n<pre><code>python sqlmap.py --version\n</code></pre>\n<p>如果SQLMap版本信息被正确输出，说明SQLMap安装成功。</p>\n<ol start=\"2\">\n<li>SQLMap的配置方法</li>\n</ol>\n<p>SQLMap的配置文件位于sqlmap.conf文件中，我们可以通过修改这个文件来进行配置。下面我们将介绍SQLMap的常见配置项。</p>\n<ol>\n<li>数据库类型</li>\n</ol>\n<p>在sqlmap.conf文件中，可以通过设置dbms参数来指定目标数据库的类型。如果不指定，则SQLMap默认使用MySQL数据库。</p>\n<p>例如，以下配置指定目标数据库类型为MySQL：</p>\n<pre><code>dbms = mysql\n</code></pre>\n<ol start=\"2\">\n<li>User-Agent</li>\n</ol>\n<p>SQLMap默认使用随机的User-Agent头部，以模拟真实的请求。如果需要自定义User-Agent头部，可以在sqlmap.conf文件中设置User-Agent参数。</p>\n<p>例如，以下配置指定User-Agent头部为Mozilla Firefox：</p>\n<pre><code>user-agent = Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0\n</code></pre>\n<ol start=\"3\">\n<li>Cookie</li>\n</ol>\n<p>如果目标网站需要登录才能访问，我们需要在sqlmap.conf文件中设置Cookie参数来指定登录后的Cookie。设置Cookie的方法如下：</p>\n<pre><code>cookie = PHPSESSID=1234567890abcdef1234567890abcdef\n</code></pre>\n<p>其中，PHPSESSID是登录后的Session ID。</p>\n<ol start=\"4\">\n<li>代理</li>\n</ol>\n<p>如果目标网站使用了代理，我们需要在sqlmap.conf文件中设置proxy参数来指定代理。设置代理的方法如下：</p>\n<pre><code>proxy = http://127.0.0.1:8080\n</code></pre>\n<p>其中，http://127.0.0.1:8080是代理服务器的地址和端口号。</p>\n<ol start=\"5\">\n<li>扫描选项</li>\n</ol>\n<p>SQLMap可以通过一系列的选项来控制扫描的范围和深度。以下是一些常用的扫描选项：</p>\n<ul>\n<li>-u：指定目标URL</li>\n<li>-p：指定要测试的参数</li>\n<li>–level：指定测试的深度（1-5）</li>\n<li>–risk：指定测试的风险级别（1-3）</li>\n</ul>\n<p>例如，以下命令指定测试目标URL，测试参数为id，深度为2，风险级别为2：</p>\n<pre><code>python sqlmap.py -u \"http://example.com/index.php?id=1\" -p id --level=2 --risk=2\n</code></pre>\n<ol start=\"3\">\n<li>常见问题的解决方案</li>\n</ol>\n<p>在使用SQLMap进行渗透测试时，可能会遇到一些常见问题。下面我们将介绍一些常见问题的解决方案。</p>\n<ol>\n<li>报错：UnicodeDecodeError: ‘ascii’ codec can’t decode byte 0xe5 in position 0: ordinal not in range(128)</li>\n</ol>\n<p>这个问题是由于Python默认使用ascii编码，而sqlmap.conf文件中包含了非ascii字符导致的。解决方法是在sqlmap.conf文件开头添加以下代码：</p>\n<pre><code># coding=utf-8\n</code></pre>\n<ol start=\"2\">\n<li>报错：ImportError: No module named ‘Crypto.Cipher’</li>\n</ol>\n<p>这个问题是由于缺少pycrypto库导致的。解决方法是通过以下命令安装pycrypto库：</p>\n<pre><code>pip install pycrypto\n</code></pre>\n<ol start=\"3\">\n<li>报错：Connection refused</li>\n</ol>\n<p>这个问题是由于目标网站拒绝了SQLMap的连接请求导致的。解决方法是使用代理服务器或者调整SQLMap的扫描速度。</p>\n<ol start=\"4\">\n<li>扫描速度过慢</li>\n</ol>\n<p>如果扫描速度过慢，可能是因为SQLMap默认使用了大量的时间延迟。解决方法是通过以下命令关闭时间延迟：</p>\n<pre><code>python sqlmap.py -u \"http://example.com/index.php?id=1\" -p id --delay=0\n</code></pre>\n<ol start=\"5\">\n<li>报错：HTTP Error 403: Forbidden</li>\n</ol>\n<p>这个问题是由于目标网站禁止了SQLMap的访问导致的。解决方法是使用代理服务器或者调整SQLMap的扫描速度。</p>\n<p>总结</p>\n<p>通过本文的介绍，我们了解了SQLMap的安装和配置方法，以及常见问题的解决方案。在使用SQLMap进行渗透测试时，需要注意安全和合法性，避免对他人的网络造成不必要的损失。</p>\n<pre><code>SQLMap基本用法\n</code></pre>\n<p>SQLMap是一款自动化SQL注入工具，可以帮助渗透测试工程师快速发现和利用SQL注入漏洞。在使用SQLMap进行渗透测试时，需要掌握SQLMap的基本用法。本文将从渗透测试工程师的角度，详细介绍SQLMap的基本用法，包括测试目标的URL、参数、Cookie等，以及常见测试选项和测试结果的解释。</p>\n<ol>\n<li>测试目标的URL</li>\n</ol>\n<p>在使用SQLMap进行渗透测试时，首先需要指定目标URL。以下是一些常见的URL格式：</p>\n<ul>\n<li>http://example.com/index.php?id=1</li>\n<li>https://example.com/search.php?q=abc</li>\n<li>http://192.168.1.100/product.php?id=1</li>\n</ul>\n<p>其中，id、q、id=1等都是参数，需要进行注入测试。</p>\n<p>在指定URL时，我们可以使用以下命令：</p>\n<pre><code>python sqlmap.py -u \"http://example.com/index.php?id=1\"\n</code></pre>\n<p>其中，-u参数指定要测试的目标URL。</p>\n<ol start=\"2\">\n<li>测试目标的参数</li>\n</ol>\n<p>在指定目标URL后，我们需要指定要测试的参数。SQLMap可以自动检测URL中的参数，并进行注入测试。以下是一些常见的参数格式：</p>\n<ul>\n<li>id=1</li>\n<li>q=abc</li>\n<li>category=1&amp;sort=price</li>\n</ul>\n<p>在指定参数时，我们可以使用以下命令：</p>\n<pre><code>python sqlmap.py -u \"http://example.com/index.php?id=1\" -p id\n</code></pre>\n<p>其中，-p参数指定要测试的参数。</p>\n<ol start=\"3\">\n<li>指定Cookie</li>\n</ol>\n<p>如果目标网站需要登录才能访问，我们需要指定登录后的Cookie。以下是一个例子：</p>\n<pre><code>python sqlmap.py -u \"http://example.com/index.php?id=1\" -p id --cookie \"PHPSESSID=1234567890abcdef1234567890abcdef\"\n</code></pre>\n<p>其中，–cookie参数指定登录后的Cookie。</p>\n<ol start=\"4\">\n<li>常见测试选项</li>\n</ol>\n<p>SQLMap可以通过一系列的选项来控制测试的深度、速度、风险等。以下是一些常见的测试选项：</p>\n<ul>\n<li>–level：指定测试的深度（1-5）</li>\n<li>–risk：指定测试的风险级别（1-3）</li>\n<li>–delay：指定测试之间的时间延迟</li>\n<li>–batch：以批处理模式运行，不需要进行任何交互</li>\n<li>–dump：导出数据库中的数据</li>\n</ul>\n<p>以下是一个例子：</p>\n<pre><code>python sqlmap.py -u \"http://example.com/index.php?id=1\" -p id --level 2 --risk 2 --delay 1 --batch --dump\n</code></pre>\n<p>其中，–level参数指定测试的深度为2，–risk参数指定测试的风险级别为2，–delay参数指定测试之间的时间延迟为1秒，–batch参数以批处理模式运行，–dump参数导出数据库中的数据。</p>\n<ol start=\"5\">\n<li>测试结果解释</li>\n</ol>\n<p>在测试完成后，SQLMap会生成一份测试报告，其中包含了测试结果、漏洞详情等信息。以下是一些常见的测试结果：</p>\n<ul>\n<li>GET parameter ‘id’ is vulnerable.：表示id参数存在注入漏洞。</li>\n<li>POST parameter ‘username’ is vulnerable.：表示username参数存在注入漏洞。</li>\n<li>available databases [2]:：表示存在2个数据库。</li>\n<li>database: testdb：表示存在名为testdb的数据库。</li>\n<li>tables：表示数据库中的表。</li>\n<li>columns：表示表中的列。</li>\n<li>data：表示表中的数据。</li>\n</ul>\n<p>需要注意的是，测试结果仅供参考，需要结合实际情况进行分析。</p>\n<p>总结</p>\n<p>SQLMap是一款强大的自动化SQL注入工具，可以帮助渗透测试工程师快速发现和利用SQL注入漏洞。在使用SQLMap进行渗透测试时，需要掌握SQLMap的基本用法，包括测试目标的URL、参数、Cookie等，以及常见测试选项和测试结果的解释。在测试时需要谨慎操作，结合实际情况进行分析，以确保测试结果的准确性和可靠性。</p>\n\n", "status": 1, "cleanedContent": "<pre><code>预计更新 </code></pre> <ol> <li> <p>SQL注入概述<br> 1.1 SQL注入攻击概述<br> 1.2 SQL注入漏洞分类<br> 1.3 SQL注入攻击的危害</p> </li> <li> <p>SQLMap介绍<br> 2.1 SQLMap简介<br> 2.2 SQLMap安装与配置<br> 2.3 SQLMap基本用法</p> </li> <li> <p>SQLMap进阶使用<br> 3.1 SQLMap高级用法<br> 3.2 SQLMap配置文件详解<br> 3.3 SQLMap插件的使用</p> </li> <li> <p>SQL注入漏洞检测<br> 4.1 SQL注入漏洞检测基础<br> 4.2 SQL注入漏洞检测工具<br> 4.3 SQL注入漏洞检测实战</p> </li> <li> <p>SQL注入漏洞利用<br> 5.1 SQL注入漏洞利用介绍<br> 5.2 SQLMap利用SQL注入漏洞<br> 5.3 SQL注入漏洞利用实战</p> </li> <li> <p>SQL注入防御<br> 6.1 SQL注入防御基础<br> 6.2 防御SQL注入的最佳实践<br> 6.3 使用SQLMap测试防御效果</p> </li> <li> <p>SQL注入绕过技术<br> 7.1 SQL注入绕过技术介绍<br> 7.2 绕过WAF<br> 7.3 绕过输入过滤</p> </li> <li> <p>SQL注入攻击的后果<br> 8.1 数据泄露<br> 8.2 数据篡改<br> 8.3 数据删除</p> </li> <li> <p>SQL注入漏洞的利用场景<br> 9.1 SQL注入漏洞的利用场景介绍<br> 9.2 电商网站SQL注入漏洞利用实战<br> 9.3 CMS网站SQL注入漏洞利用实战</p> </li> <li> <p>SQL注入漏洞的漏洞挖掘与利用<br> 10.1 SQL注入漏洞的漏洞挖掘方法<br> 10.2 SQL注入漏洞利用的高级技巧<br> 10.3 SQL注入漏洞利用的未来趋势</p> </li> </ol> <pre><code>SQLMap简介 </code></pre> <p>SQLMap是一款开源的自动化SQL注入工具，可以帮助渗透测试工程师快速发现和利用SQL注入漏洞。SQLMap具有自动化探测、漏洞利用、数据提取等功能，可以针对各种不同类型的数据库进行测试。从渗透测试工程师的角度，我们需要深入了解SQLMap的原理和使用方法，以便于提高渗透测试的效率和准确性。</p> <ol> <li>SQLMap的原理</li> </ol> <p>SQLMap是基于Python开发的自动化SQL注入工具，其原理是通过构造恶意SQL查询语句，探测和利用目标网站的SQL注入漏洞。SQLMap通过发送不同类型的SQL查询请求，从而判断目标网站是否存在SQL注入漏洞，并且可以利用漏洞获取数据库中的数据。</p> <p>SQLMap的工作流程如下：</p> <ol> <li> <p>探测：SQLMap首先会对目标网站进行探测，判断是否存在SQL注入漏洞，包括基于错误消息的注入、基于时间的盲注、布尔盲注等多种探测方式。</p> </li> <li> <p>扫描：如果存在注入漏洞，SQLMap会对漏洞进行扫描，包括获取数据库版本、表结构、列名等信息。</p> </li> <li> <p>利用：SQLMap会利用漏洞进行攻击，包括获取敏感数据、执行任意SQL语句、提权等操作。</p> </li> </ol> <ol start=\"2\"> <li>SQLMap的使用方法</li> </ol> <p>SQLMap是一款命令行工具，需要在终端中使用。下面我们来介绍SQLMap的常用参数和使用方法。</p> <ol> <li>基本参数</li> </ol> <p>-a：指定注入类型，包括GET、POST、COOKIE等。</p> <p>-u：指定目标URL。</p> <p>-p：指定注入参数。</p> <p>–level：指定注入等级，包括1-5级。</p> <p>–risk：指定注入风险，包括1-3级。</p> <p>-dbs：获取目标数据库列表。</p> <ol start=\"2\"> <li>进阶参数</li> </ol> <p>–threads：指定线程数。</p> <p>–proxy：指定代理服务器。</p> <p>–time-sec：指定时间延迟，用于盲注。</p> <p>–tamper：指定字符编码方式，用于绕过WAF。</p> <p>–dbms：指定目标数据库类型，包括MySQL、Oracle、MSSQL等。</p> <ol start=\"3\"> <li>操作参数</li> </ol> <p>–dump：获取目标数据库中的数据。</p> <p>–os-shell：获取目标服务器的操作系统Shell。</p> <p>–sql-shell：获取目标数据库的SQL Shell。</p> <p>–technique：指定注入技术，包括UNION注入、报错注入、时间盲注等。</p> <ol start=\"3\"> <li>SQLMap的实战应用</li> </ol> <p>下面我们通过实例来介绍SQLMap的具体应用。</p> <ol> <li>探测目标网站是否存在注入漏洞</li> </ol> <p>我们可以使用以下命令进行探测：</p> <pre><code>sqlmap -u \"\" --dbs </code></pre> <p>其中，-u参数指定目标URL，–dbs参数用于获取目标数据库列表。如果目标网站存在注入漏洞，则SQLMap会输出数据库列表。</p> <ol start=\"2\"> <li>获取目标数据库中的数据</li> </ol> <p>我们可以使用以下命令获取目标数据库中的数据：</p> <pre><code>sqlmap -u \"\" --dump -T users </code></pre> <p>其中，-T参数指定要获取的表名，–dump参数用于获取表中的数据。如果目标网站存在注入漏洞，则SQLMap会输出表中的数据。</p> <ol start=\"3\"> <li>获取目标服务器的操作系统Shell</li> </ol> <p>我们可以使用以下命令获取目标服务器的操作系统Shell：</p> <pre><code>sqlmap -u \"\" --os-shell </code></pre> <p>如果目标网站存在注入漏洞，则SQLMap会输出操作系统Shell。</p> <ol start=\"4\"> <li>获取目标数据库的SQL Shell</li> </ol> <p>我们可以使用以下命令获取目标数据库的SQL Shell：</p> <pre><code>sqlmap -u \"\" --sql-shell </code></pre> <p>如果目标网站存在注入漏洞，则SQLMap会输出数据库的SQL Shell。</p> <p>需要注意的是，使用SQLMap进行渗透测试时需要进行充分的测试和备份，以防止对目标系统造成不可逆的损害。</p> <ol start=\"4\"> <li>总结</li> </ol> <p>SQLMap是一款开源的自动化SQL注入工具，可以帮助渗透测试工程师快速发现和利用SQL注入漏洞。SQLMap具有自动化探测、漏洞利用、数据提取等功能，可以针对各种不同类型的数据库进行测试。渗透测试工程师需要深入了解SQLMap的原理和使用方法，以便于提高渗透测试的效率和准确性。在使用SQLMap进行渗透测试时，需要进行充分的测试和备份，以防止对目标系统造成不可逆的损害。</p> <pre><code>SQLMap安装与配置 </code></pre> <p>SQLMap是一款自动化SQL注入工具，可以帮助渗透测试工程师快速发现和利用SQL注入漏洞。在使用SQLMap进行渗透测试之前，我们需要先了解SQLMap的安装和配置方法。本文将从渗透测试工程师的角度，详细介绍SQLMap的安装和配置方法，以及常见问题的解决方案。</p> <ol> <li>SQLMap的安装方法</li> </ol> <p>SQLMap是一款基于Python开发的工具，因此需要先安装Python。下面我们将介绍SQLMap的安装方法。</p> <ol> <li>安装Python</li> </ol> <p>首先，我们需要在官网下载Python的安装包，然后按照安装向导进行安装。在安装过程中，需要选择添加Python到系统环境变量，以便于在命令行中使用Python。</p> <ol start=\"2\"> <li>下载SQLMap</li> </ol> <p>我们可以在SQLMap的官网（）上下载最新版本的SQLMap。下载完成后，将文件解压到本地。</p> <ol start=\"3\"> <li>安装依赖库</li> </ol> <p>SQLMap需要使用一些Python库来进行工作，我们可以通过以下命令安装这些依赖库：</p> <pre><code>pip install -r requirements.txt </code></pre> <p>其中，requirements.txt是SQLMap的依赖库列表文件。</p> <ol start=\"4\"> <li>安装完成</li> </ol> <p>安装完成后，我们可以通过以下命令验证SQLMap是否安装成功：</p> <pre><code>python --version </code></pre> <p>如果SQLMap版本信息被正确输出，说明SQLMap安装成功。</p> <ol start=\"2\"> <li>SQLMap的配置方法</li> </ol> <p>SQLMap的配置文件位于sqlmap.conf文件中，我们可以通过修改这个文件来进行配置。下面我们将介绍SQLMap的常见配置项。</p> <ol> <li>数据库类型</li> </ol> <p>在sqlmap.conf文件中，可以通过设置dbms参数来指定目标数据库的类型。如果不指定，则SQLMap默认使用MySQL数据库。</p> <p>例如，以下配置指定目标数据库类型为MySQL：</p> <pre><code>dbms = mysql </code></pre> <ol start=\"2\"> <li>User-Agent</li> </ol> <p>SQLMap默认使用随机的User-Agent头部，以模拟真实的请求。如果需要自定义User-Agent头部，可以在sqlmap.conf文件中设置User-Agent参数。</p> <p>例如，以下配置指定User-Agent头部为Mozilla Firefox：</p> <pre><code>user-agent = Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/ Firefox/68.0 </code></pre> <ol start=\"3\"> <li>Cookie</li> </ol> <p>如果目标网站需要登录才能访问，我们需要在sqlmap.conf文件中设置Cookie参数来指定登录后的Cookie。设置Cookie的方法如下：</p> <pre><code>cookie = PHPSESSID=abcdefabcdef </code></pre> <p>其中，PHPSESSID是登录后的Session ID。</p> <ol start=\"4\"> <li>代理</li> </ol> <p>如果目标网站使用了代理，我们需要在sqlmap.conf文件中设置proxy参数来指定代理。设置代理的方法如下：</p> <pre><code>proxy = http://:8080 </code></pre> <p>其中，http://:8080是代理服务器的地址和端口号。</p> <ol start=\"5\"> <li>扫描选项</li> </ol> <p>SQLMap可以通过一系列的选项来控制扫描的范围和深度。以下是一些常用的扫描选项：</p> <ul> <li>-u：指定目标URL</li> <li>-p：指定要测试的参数</li> <li>–level：指定测试的深度（1-5）</li> <li>–risk：指定测试的风险级别（1-3）</li> </ul> <p>例如，以下命令指定测试目标URL，测试参数为id，深度为2，风险级别为2：</p> <pre><code>python -u \"\" -p id --level=2 --risk=2 </code></pre> <ol start=\"3\"> <li>常见问题的解决方案</li> </ol> <p>在使用SQLMap进行渗透测试时，可能会遇到一些常见问题。下面我们将介绍一些常见问题的解决方案。</p> <ol> <li>报错：UnicodeDecodeError: ‘ascii’ codec can’t decode byte 0xe5 in position 0: ordinal not in range(128)</li> </ol> <p>这个问题是由于Python默认使用ascii编码，而sqlmap.conf文件中包含了非ascii字符导致的。解决方法是在sqlmap.conf文件开头添加以下代码：</p> <pre><code># coding=utf-8 </code></pre> <ol start=\"2\"> <li>报错：ImportError: No module named ‘Crypto.Cipher’</li> </ol> <p>这个问题是由于缺少pycrypto库导致的。解决方法是通过以下命令安装pycrypto库：</p> <pre><code>pip install pycrypto </code></pre> <ol start=\"3\"> <li>报错：Connection refused</li> </ol> <p>这个问题是由于目标网站拒绝了SQLMap的连接请求导致的。解决方法是使用代理服务器或者调整SQLMap的扫描速度。</p> <ol start=\"4\"> <li>扫描速度过慢</li> </ol> <p>如果扫描速度过慢，可能是因为SQLMap默认使用了大量的时间延迟。解决方法是通过以下命令关闭时间延迟：</p> <pre><code>python -u \"\" -p id --delay=0 </code></pre> <ol start=\"5\"> <li>报错：HTTP Error 403: Forbidden</li> </ol> <p>这个问题是由于目标网站禁止了SQLMap的访问导致的。解决方法是使用代理服务器或者调整SQLMap的扫描速度。</p> <p>总结</p> <p>通过本文的介绍，我们了解了SQLMap的安装和配置方法，以及常见问题的解决方案。在使用SQLMap进行渗透测试时，需要注意安全和合法性，避免对他人的网络造成不必要的损失。</p> <pre><code>SQLMap基本用法 </code></pre> <p>SQLMap是一款自动化SQL注入工具，可以帮助渗透测试工程师快速发现和利用SQL注入漏洞。在使用SQLMap进行渗透测试时，需要掌握SQLMap的基本用法。本文将从渗透测试工程师的角度，详细介绍SQLMap的基本用法，包括测试目标的URL、参数、Cookie等，以及常见测试选项和测试结果的解释。</p> <ol> <li>测试目标的URL</li> </ol> <p>在使用SQLMap进行渗透测试时，首先需要指定目标URL。以下是一些常见的URL格式：</p> <ul> <li></li> <li></li> <li></li> </ul> <p>其中，id、q、id=1等都是参数，需要进行注入测试。</p> <p>在指定URL时，我们可以使用以下命令：</p> <pre><code>python -u \"\" </code></pre> <p>其中，-u参数指定要测试的目标URL。</p> <ol start=\"2\"> <li>测试目标的参数</li> </ol> <p>在指定目标URL后，我们需要指定要测试的参数。SQLMap可以自动检测URL中的参数，并进行注入测试。以下是一些常见的参数格式：</p> <ul> <li>id=1</li> <li>q=abc</li> <li>category=1&sort=price</li> </ul> <p>在指定参数时，我们可以使用以下命令：</p> <pre><code>python -u \"\" -p id </code></pre> <p>其中，-p参数指定要测试的参数。</p> <ol start=\"3\"> <li>指定Cookie</li> </ol> <p>如果目标网站需要登录才能访问，我们需要指定登录后的Cookie。以下是一个例子：</p> <pre><code>python -u \"\" -p id --cookie \"PHPSESSID=abcdefabcdef\" </code></pre> <p>其中，–cookie参数指定登录后的Cookie。</p> <ol start=\"4\"> <li>常见测试选项</li> </ol> <p>SQLMap可以通过一系列的选项来控制测试的深度、速度、风险等。以下是一些常见的测试选项：</p> <ul> <li>–level：指定测试的深度（1-5）</li> <li>–risk：指定测试的风险级别（1-3）</li> <li>–delay：指定测试之间的时间延迟</li> <li>–batch：以批处理模式运行，不需要进行任何交互</li> <li>–dump：导出数据库中的数据</li> </ul> <p>以下是一个例子：</p> <pre><code>python -u \"\" -p id --level 2 --risk 2 --delay 1 --batch --dump </code></pre> <p>其中，–level参数指定测试的深度为2，–risk参数指定测试的风险级别为2，–delay参数指定测试之间的时间延迟为1秒，–batch参数以批处理模式运行，–dump参数导出数据库中的数据。</p> <ol start=\"5\"> <li>测试结果解释</li> </ol> <p>在测试完成后，SQLMap会生成一份测试报告，其中包含了测试结果、漏洞详情等信息。以下是一些常见的测试结果：</p> <ul> <li>GET parameter ‘id’ is vulnerable.：表示id参数存在注入漏洞。</li> <li>POST parameter ‘username’ is vulnerable.：表示username参数存在注入漏洞。</li> <li>available databases [2]:：表示存在2个数据库。</li> <li>database: testdb：表示存在名为testdb的数据库。</li> <li>tables：表示数据库中的表。</li> <li>columns：表示表中的列。</li> <li>data：表示表中的数据。</li> </ul> <p>需要注意的是，测试结果仅供参考，需要结合实际情况进行分析。</p> <p>总结</p> <p>SQLMap是一款强大的自动化SQL注入工具，可以帮助渗透测试工程师快速发现和利用SQL注入漏洞。在使用SQLMap进行渗透测试时，需要掌握SQLMap的基本用法，包括测试目标的URL、参数、Cookie等，以及常见测试选项和测试结果的解释。在测试时需要谨慎操作，结合实际情况进行分析，以确保测试结果的准确性和可靠性。"}
{"url": "https://blog.csdn.net/weixin_57789471/article/details/134913989", "article_id": 134913989, "username": "weixin_57789471", "title": "项目二 创建与操作学生管理数据库", "body": "<h1><a id=\"__0\"></a>项目二 创建与操作学生管理数据库</h1>\n<pre><code class=\"prism language-mysql\">#目标\n创建库；查看库；操作库；图形工具操作库\n</code></pre>\n<h2><a id=\"1_7\"></a>1，创建学生管理数据库</h2>\n<pre><code class=\"prism language-mysql\">#创建数据库\nCREATE DATABASE [IF NOT EXISTS] db_name \n[[DEFAULT] CHARACTER SET charset_name] \n[[DEFAULT] COLLATE collation_name]\n\ncreate database：建库 \nif not exists：不存就建 \ndb_name：库名 \n[default]character set：指定建库的默认字符集 \ncharset_name：字符集名称，常用utf8字符集 \n[default] collate:库排列规则 （是在字符集内用于比较字符的一套规则 可以控制 select \n查询时 where 条件大小写是否敏感的规则。）\ncollation_name：排列规则名称 \n\nshow character set:查看字符集名 \nshow collation：查看可用的排列规则名\n</code></pre>\n<pre><code class=\"prism language-mysql\">1，#创建一个使用一个默认字符集合排序规则的数据库\nmysql&gt; create database mydb1;\nQuery OK, 1 row affected (0.00 sec)\n\n2，#创建数据库时，指定if not exists参数，只有当新建的数据库不存在时才创建\nmysql&gt; create database if not exists mydb2;\nQuery OK, 1 row affected (0.00 sec)\nmysql&gt; create database if not exists mydb2;\nQuery OK, 1 row affected, 1 warning (0.00 sec)\n\n3，#创建数据库时，指定默认字符集\nmysql&gt; create database mydb3 default character set utf8;\nQuery OK, 1 row affected (0.00 sec)\n\n4，#创建数据库时，指定默认的字符集和数据库排列规则\nmysql&gt; create database mydb4 default character set utf8 default collate utf8_unicode_ci;\nQuery OK, 1 row affected (0.00 sec)\n\n5，#创建一个学生管理数据库，该数据库将作为后续学习的主要案例库\nmysql&gt; create database if not exists xsgl\n-&gt; default character set utf8\n-&gt; default collate utf8_general_ci;\nQuery OK, 1 row affected (0.00 sec)\n</code></pre>\n<h2><a id=\"2_56\"></a>2，查看学生管理数据库</h2>\n<pre><code class=\"prism language-mysql\">1，#查看所有数据库\nmysql&gt; show databases;\n+--------------------+\n| Database |\n+--------------------+\n| information_schema |\n| mydb1 |\n| mydb2 |\n| mydb3 |\n| mydb4 |\n| mysql |\n| performance_schema |\n| sys |\n| xsgl |\n+--------------------+\n9 rows in set (0.00 sec)\n\n2，#查看数据库的定义\nmysql&gt; show create database xsgl;\n+----------+---------------------------------------------------------------+\n| Database | Create Database |\n+----------+---------------------------------------------------------------+\n| xsgl | CREATE DATABASE `xsgl` /*!40100 DEFAULT CHARACTER SET utf8 */ |\n+----------+---------------------------------------------------------------+\n1 row in set (0.00 sec)\n</code></pre>\n<p>3，使用Navicat查看某数据库的属性</p>\n<p>右击某数据库-&gt;点击编辑数据库</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/5f1a19e5a693be8b5cda00e63d8f6957.png\" alt=\"image.png\"></p>\n<h2><a id=\"3_92\"></a>3，操作学生管理数据库</h2>\n<h3><a id=\"31_94\"></a>3.1，使用数据库</h3>\n<pre><code class=\"prism language-mysql\">格式：use 数据库名称；\nmysql&gt; use xsgl;\nDatabase changed\n</code></pre>\n<h3><a id=\"32_102\"></a>3.2，修改数据库</h3>\n<pre><code class=\"prism language-mysql\">#修改库默认字符集和排列规则（与create相似）\nALTER DATABASE db_name \n[[DEFAULT] CHARACTER SET charset_name]\n[[DEFAULT] COLLATE collation_name]\n\n\n#例如：将数据库mydb1的默认字符集修改为gbk\nmysql&gt; alter database mydb1 default character set gbk;\nQuery OK, 1 row affected\n</code></pre>\n<h3><a id=\"33_116\"></a>3.3，删除数据库</h3>\n<pre><code class=\"prism language-mysql\">#删除数据库，其内容也会被删除，所分配的存储空间被回收(每次只能删除一个库)\n格式：DROP DATABASE db_name\n#例如：删除前面的mydb1\nmysql&gt; drop database mydb1;\nQuery OK, 0 rows affected (0.00 sec)\n</code></pre>\n<h2><a id=\"4_126\"></a>4，使用图形化工具操作数据库</h2>\n<p><strong>1，创建数据库</strong></p>\n<p>打开Navicat-&gt;右击服务器名称-&gt;选择“新建数据库”-&gt;输入（名称，字符集，排列规则）-&gt;确定</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/a406689b5ecb464f413c4ec68da7ee26.png\" alt=\"image.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/c959e2f74ad954fd0cf6f78930521078.png\" alt=\"image.png\"></p>\n<p><strong>2，查看或修改数据库</strong></p>\n<p>选中要查看属性的数据库名称，右键单击-&gt;点击“编辑数据库”</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/2c2b3808bab2aa41011509ee9e9617c3.png\" alt=\"image.png\"></p>\n<p><strong>3，删除数据库</strong></p>\n<p>选中要查看属性的数据库名称，右键单击-&gt;点击“删除数据库”</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/824f82d616eeb48eb695cbcf151fb02d.png\" alt=\"image.png\"></p>\n<h2><a id=\"5_148\"></a>5，巩固与提高</h2>\n<p>1、使用 create database 命令创建 book_mangement 数据库，要求设置默认字符集为 gbk，默认排序规则为</p>\n<p>gbk_chinese_ci。</p>\n<p>2、使用 alter database 命令修改 book_mangement 数据库，要求将默认字符集修改为 utf8。</p>\n<p>3、使用 Navicat 工具创建新数据库 NewDB，默认字符集和排序规则自拟。</p>\n<p>4、使用 drop database 命令删除 NewDB 新数据库。</p>\n<p>ook_mangement 数据库，要求将默认字符集修改为 utf8。</p>\n<p>3、使用 Navicat 工具创建新数据库 NewDB，默认字符集和排序规则自拟。</p>\n<p>4、使用 drop database 命令删除 NewDB 新数据库。</p>\n\n", "status": 1, "cleanedContent": "<h1><a id=\"__0\"></a>项目二 创建与操作学生管理数据库</h1> <pre><code class=\"prism language-mysql\">#目标 创建库；查看库；操作库；图形工具操作库 </code></pre> <h2><a id=\"1_7\"></a>1，创建学生管理数据库</h2> <pre><code class=\"prism language-mysql\">#创建数据库 CREATE DATABASE [IF NOT EXISTS] db_name [[DEFAULT] CHARACTER SET charset_name] [[DEFAULT] COLLATE collation_name] create database：建库 if not exists：不存就建 db_name：库名 [default]character set：指定建库的默认字符集 charset_name：字符集名称，常用utf8字符集 [default] collate:库排列规则 （是在字符集内用于比较字符的一套规则 可以控制 select 查询时 where 条件大小写是否敏感的规则。） collation_name：排列规则名称 show character set:查看字符集名 show collation：查看可用的排列规则名 </code></pre> <pre><code class=\"prism language-mysql\">1，#创建一个使用一个默认字符集合排序规则的数据库 mysql> create database mydb1; Query OK, 1 row affected (0.00 sec) 2，#创建数据库时，指定if not exists参数，只有当新建的数据库不存在时才创建 mysql> create database if not exists mydb2; Query OK, 1 row affected (0.00 sec) mysql> create database if not exists mydb2; Query OK, 1 row affected, 1 warning (0.00 sec) 3，#创建数据库时，指定默认字符集 mysql> create database mydb3 default character set utf8; Query OK, 1 row affected (0.00 sec) 4，#创建数据库时，指定默认的字符集和数据库排列规则 mysql> create database mydb4 default character set utf8 default collate utf8_unicode_ci; Query OK, 1 row affected (0.00 sec) 5，#创建一个学生管理数据库，该数据库将作为后续学习的主要案例库 mysql> create database if not exists xsgl -> default character set utf8 -> default collate utf8_general_ci; Query OK, 1 row affected (0.00 sec) </code></pre> <h2><a id=\"2_56\"></a>2，查看学生管理数据库</h2> <pre><code class=\"prism language-mysql\">1，#查看所有数据库 mysql> show databases; +--------------------+ | Database | +--------------------+ | information_schema | | mydb1 | | mydb2 | | mydb3 | | mydb4 | | mysql | | performance_schema | | sys | | xsgl | +--------------------+ 9 rows in set (0.00 sec) 2，#查看数据库的定义 mysql> show create database xsgl; +----------+---------------------------------------------------------------+ | Database | Create Database | +----------+---------------------------------------------------------------+ | xsgl | CREATE DATABASE `xsgl` /*! DEFAULT CHARACTER SET utf8 */ | +----------+---------------------------------------------------------------+ 1 row in set (0.00 sec) </code></pre> <p>3，使用Navicat查看某数据库的属性</p> <p>右击某数据库->点击编辑数据库</p> <p><img src=\"\" alt=\"image.png\"></p> <h2><a id=\"3_92\"></a>3，操作学生管理数据库</h2> <h3><a id=\"31_94\"></a>3.1，使用数据库</h3> <pre><code class=\"prism language-mysql\">格式：use 数据库名称； mysql> use xsgl; Database changed </code></pre> <h3><a id=\"32_102\"></a>3.2，修改数据库</h3> <pre><code class=\"prism language-mysql\">#修改库默认字符集和排列规则（与create相似） ALTER DATABASE db_name [[DEFAULT] CHARACTER SET charset_name] [[DEFAULT] COLLATE collation_name] #例如：将数据库mydb1的默认字符集修改为gbk mysql> alter database mydb1 default character set gbk; Query OK, 1 row affected </code></pre> <h3><a id=\"33_116\"></a>3.3，删除数据库</h3> <pre><code class=\"prism language-mysql\">#删除数据库，其内容也会被删除，所分配的存储空间被回收(每次只能删除一个库) 格式：DROP DATABASE db_name #例如：删除前面的mydb1 mysql> drop database mydb1; Query OK, 0 rows affected (0.00 sec) </code></pre> <h2><a id=\"4_126\"></a>4，使用图形化工具操作数据库</h2> <p><strong>1，创建数据库</strong></p> <p>打开Navicat->右击服务器名称->选择“新建数据库”->输入（名称，字符集，排列规则）->确定</p> <p><img src=\"\" alt=\"image.png\"></p> <p><img src=\"\" alt=\"image.png\"></p> <p><strong>2，查看或修改数据库</strong></p> <p>选中要查看属性的数据库名称，右键单击->点击“编辑数据库”</p> <p><img src=\"\" alt=\"image.png\"></p> <p><strong>3，删除数据库</strong></p> <p>选中要查看属性的数据库名称，右键单击->点击“删除数据库”</p> <p><img src=\"\" alt=\"image.png\"></p> <h2><a id=\"5_148\"></a>5，巩固与提高</h2> <p>1、使用 create database 命令创建 book_mangement 数据库，要求设置默认字符集为 gbk，默认排序规则为</p> <p>gbk_chinese_ci。</p> <p>2、使用 alter database 命令修改 book_mangement 数据库，要求将默认字符集修改为 utf8。</p> <p>3、使用 Navicat 工具创建新数据库 NewDB，默认字符集和排序规则自拟。</p> <p>4、使用 drop database 命令删除 NewDB 新数据库。</p> <p>ook_mangement 数据库，要求将默认字符集修改为 utf8。</p> <p>3、使用 Navicat 工具创建新数据库 NewDB，默认字符集和排序规则自拟。</p> <p>4、使用 drop database 命令删除 NewDB 新数据库。"}
{"url": "https://blog.csdn.net/2301_80068547/article/details/134914376", "article_id": 134914376, "username": "2301_80068547", "title": "Git 分布式版本控制工具(黑马程序员)", "body": "<p><strong>目标：</strong></p>\n\n<pre>\n<code class=\"language-javascript\">了解 Git 基本概念\n能够概述 Git 工作流程\n能够使用 Git 常用命令\n熟悉 Git 代码托管服务\n能够使用 idea 操作 git</code></pre>\n\n<hr /><h2>一、概述</h2>\n\n<p><strong>开发中的实际场景</strong></p>\n\n<pre>\n<code class=\"language-javascript\">场景一：备份\n小明负责的模块就要完成了，就在即将 Release 之前的一瞬间，\n电脑突然蓝屏，硬盘光荣牺牲！几个月来的努力付之东流\n​\n场景二：代码还原\n这个项目中需要一个很复杂的功能，老王摸索了一个星期终于有眉目了，\n可是这杯改得面目全非的代码已经回不去从前了，什么地方能买到哆啦A梦的时光机啊？\n​\n场景三：协同开发\n小刚和小天先后从文件服务器上下载了同一个文件：Analysis.java，\n小刚在 Analysis.java 文件中的第 30 行声明了一个方法，叫 count()，\n先保存到了文件服务器上，于是，count()方法只存在于小刚的记忆中了\n\n场景四：追溯问题代码的编写人和编写时间!\n老王是另一位项目经理，每次因为项目进度挨骂之后，\n他都不知道该扣哪个程序员的工资！就拿这次来说吧，\n有个Bug调试了30多个小时才知道是因为相关属性没有在应用初始化时赋值！\n可是二胖、王东、刘流和正经牛都不承认是自己干的！</code></pre>\n\n<hr /><h2>二、版本控制方式</h2>\n\n<pre>\n<code class=\"language-javascript\"> 集中式版本控制工具\n集中式版本控制工具，版本库是集中存放在中央服务器的，\nteam 里每个人 work 时从中央服务器下载代码，是必须联网才能工作，\n局域网或互联网，个人修改之后，然后提交中央版本库。\n举例：SVN 和 CVS\n分布式版本控制工具\n在分布式版本控制系统没有 \"中央服务器\"，每个人电脑上都是一个完整的版本库，\n这样工作的时候，无需联网了，因为版本库就在你自己电脑上，\n多人协作只需要各自的修改推送给对方，就能互相看到对方修改了。\n举例：Git</code></pre>\n\n<hr /><h2>三、SVN</h2>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/a3ad52288c734ba9ad371aed94381e9e.png\" /></p>\n\n<hr /><h2>四、Git</h2>\n\n<pre>\n  </pre>\n\n<pre>\n<code class=\"language-javascript\"> Git 是分布式的，Git 不需要有中央服务器，我们每台电脑拥有的东西都是一样的。\n我们使用 Git 并且有个中心服务器，仅仅是为了方便交换大家的修改，\n但是这个服务器的地位和我们每个人的 PC 是一样的，我们可以把它当做一个开发者的pc就可以，\n它就是为了大家代码容易交流不关机用的。没有它大家一样可以工作，只不过 \"交换\"修改不方便而已。\nGit 是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。\nGit 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。\n同生活中许多伟大事物一样，git 诞生于一个极富纷争大举创新的年代。\nLinux 内核开源项目有着为数众多的参与者，\n绝大多数的 Linux 内核维护工作都花在了提交补丁和保存归档的繁琐事务上 (1991 - 2020年间)。\n到 2002年，整个项目组开始启用一个专有的分布式版本控制系统 BitKeeper 来管理和维护代码。\n到了 2005年，开发 BitKeeper 的商业公司同 Linux 内核开源社区的合作关系结束，\n他们收回了 Linux 内核社区免费使用 BitKeeper 的权利。\n这就迫使 Linux 开源社区 (特别是 Linux 的缔造者 Linus Torvalds)\n基于使用 BitKeeper 时的经验教训，开发出自己的版本系统。他们对新的系统制定了若干目标：\n速度\n简单的设计\n对非线性开发模式的强力支持 (允许成千上万个并行开发的分支)\n完全分布式\n有能力高效管理类似 Linux 内核一样的超大规模项目 (速度和数据量)</code></pre>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/00c43b2fbfa84a899e62dd9d11c47449.png\" /></p>\n\n<hr /><h2>五、Git 工作流程图</h2>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/4a490fa5c7544555a049f621eac3a691.png\" /></p>\n\n<hr /><p><strong>命令如下：</strong></p>\n\n<ol><li>\n<p>clone (克隆)：从远程仓库中克隆代码到本地仓库</p>\n</li>\n<li>\n<p>checkout (检出)：从本地仓库中捡出一个仓库分支然后进行修订</p>\n</li>\n<li>\n<p>add (添加)：在提交前先将代码提交到暂存区</p>\n</li>\n<li>\n<p>commit (提交)：提交到本地仓库，本地仓库中保存修改的各个历史版本</p>\n</li>\n<li>\n<p>fetch (抓取)：从远程库，抓取到本地仓库，不进行任何的合并动作，一般操作比较少。</p>\n</li>\n<li>\n<p>pull (拉取)：从远程库拉到本地库，自动进行合并 (merge)，然后放到工作区，相当于 fetch + merge</p>\n</li>\n<li>\n<p>push (推送)：修改完成后，需要和团队成员共享代码时，将代码推送到远程仓库。</p>\n</li>\n</ol><hr /><h1>Git安装与常用命令</h1>\n\n<p>本教程里的 Git 命令例子都是在 Git Bash 中演示的，会用到一些基本的 linux 命令，在此为大家提前列举：</p>\n\n<ul><li>\n<p>ls/ll 查看当前目录</p>\n</li>\n<li>\n<p>cat 查看文件内容</p>\n</li>\n<li>\n<p>touch 创建文件</p>\n</li>\n<li>\n<p>vi vi编辑器 (使用 vi 编辑器是为了方便展示效果，成员可以记事本、editPlus、notPad++ 等其它编辑器)</p>\n</li>\n</ul><hr /><h2>一、Git 环境配置</h2>\n\n<p><strong>下载与安装</strong></p>\n\n<p>下载地址：<a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release2.3.6/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=N7T8\" data-link-title=\"Git - Downloads\" href=\"https://git-scm.com/download\" title=\"Git - Downloads\">Git - Downloads</a></p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/e8b4c05aaf5b4e0ab73230c056c391ef.png\" /></p>\n\n<hr /><p>下载完成后可以得到如下安装文件：</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/6f4ed61fc9b345abaa06a18e45f0fc24.png\" /></p>\n\n<hr /><p>双击下载的安装文件来安装 Git，安装完成后在电脑桌面 (也可以是其他目录) 点击右键，如果能够看到如下两个菜单则说明安装成功。</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/bec928e12ea9477f8415c62a39dcedbe.png\" /></p>\n\n<hr /><p><strong>备注：</strong></p>\n\n<ul><li>\n<p>Git GUI：Git提供的图形界面工具</p>\n</li>\n<li>\n<p>Git Bash：Git 提供的命令行工具 (选中复制，按下鼠标滚轮粘贴)</p>\n</li>\n</ul><p>当安装 Git 后首先要做的事情是设置用户名和 email 地址。这是非常重要的，因为每次 Git 提交都会使用该用户信息</p>\n\n<hr /><p><strong>基本配置</strong></p>\n\n<ol><li>\n<p>打开 Git Bash</p>\n</li>\n<li>\n<p>设置用户信息</p>\n\n<pre>\n<code class=\"language-css\">git config --global user.name \"Yua\"\n\ngit config --global user.email \"Yua@qq.com\" (不需要真实账户)</code></pre>\n\n<p></p>\n</li>\n<li>\n<p>查看配置信息</p>\n\n<pre>\n<code class=\"language-css\">git config --global user.name\n\ngit config --global user.email</code></pre>\n</li>\n</ol><hr /><p><strong>为常用指令配置别名 (可选)</strong></p>\n\n<p>有些 常用的指令参数 非常多，每次都要输入好多参数，我们可以使用别名。</p>\n\n<ul><li>\n<p>打开 用户目录，创建 <code>.bashrc</code> 文件</p>\n</li>\n</ul><p>部分 windows 系统不运行用户创建点号开头的文件，可以打开 gitBash，执行 <code>touch ~/.bashrc</code></p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/b7b4b3367cbf4885be2b6ae6d59bb9da.png\" /></p>\n\n<hr /><ul><li>\n<p>在 .bashrc 文件中输入如下内容：</p>\n</li>\n</ul><pre>\n<code class=\"language-css\"> #用于输出git提交日志\nalias git-log='git log --pretty=oneline --all --graph --abbrev-commit'\n#用于输出当前目录所有文件及基本信息\nalias ll='ls -al'</code></pre>\n\n<ul><li>\n<p>打开 gitBash，执行<code>source ~/.bashrc</code></p>\n</li>\n</ul><p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/9b5822c99c2c49b49eea2cc9d8608281.png\" /></p>\n\n<hr /><p><strong>解决GitBash 乱码问题</strong></p>\n\n<ul><li>\n<p>打开 GitBash 执行下面命令</p>\n</li>\n</ul><pre>\n<code class=\"language-css\"> git config --global core.quotepath false</code></pre>\n\n<ul><li>\n<p>${git_home}/etc/bash.bashrc 文件最后加入下面来个两行</p>\n</li>\n</ul><pre>\n<code class=\"language-css\"> export LANG=\"zh_CN.UTF-8\"\nexport LC_ALL=\"zh_CN.UTF-8\"</code></pre>\n\n<h2>二、获取本地仓库</h2>\n\n<p>要使用Git对我们的代码进行版本控制，首先需要获得本地仓库</p>\n\n<ol><li>\n<p>在电脑的任意位置创建一个空目录（例如test）作为我们的本地Git仓库</p>\n</li>\n<li>\n<p>进入这个目录中，点击右键打开 Git bash窗口</p>\n</li>\n<li>\n<p>执行命令 <strong>git init</strong></p>\n</li>\n<li>\n<p>如果创建成功后可在文件夹下看到隐藏的.git目录。</p>\n</li>\n</ol><p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/6aa93a624df5495c8e92e48e0063878a.png\" /></p>\n\n<hr /><p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/b61864e0d808492fa9b770d9b5268251.png\" /></p>\n\n<hr /><h2>三、Git基础操作指令</h2>\n\n<p>Git工作目录下（获取本地仓库后除了.git文件，其它都是工作目录）对文件的修改（增加、删除、更新）会存在几个状态，这些 修改 的状态会随着 Git 的指令而发生变化。</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/b4201a8f6cb943c4ab1fc6ba40103a41.png\" /></p>\n\n<hr /><p>控制状态之间转换的指令：</p>\n\n<ol><li>\n<p>git add （工作区 --&gt; 暂存区）</p>\n</li>\n<li>\n<p>git commit （ 暂存区 --&gt; 本地仓库）</p>\n</li>\n</ol><hr /><p><strong>*查看修改的状态（status）</strong></p>\n\n<pre>\n<code class=\"language-css\"> 查看修改的状态（暂存区、工作区）\n命令： git status</code></pre>\n\n<p><strong>*添加工作区到暂存区（add）</strong></p>\n\n<pre>\n<code class=\"language-css\">添加工作区一个或多个文件的修改到暂存区\n命令： git add 当文件名|通配符 \n如：git add file01.txt(加入单文件) git add . (将全部加入)</code></pre>\n\n<p><strong>*提交暂存区到本地仓库（comm it）</strong></p>\n\n<pre>\n<code class=\"language-css\">提交暂存区内容到本地仓库的当前分支\n命令： git commit -m “注释内容” “-m” 后为提交注释</code></pre>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/624f11a3045d4fbd9bd8e20dad611e2a.png\" /></p>\n\n<hr /><p><strong>使用 vi编辑器编辑内容</strong></p>\n\n<pre>\n<code class=\"language-javascript\"> vi file01.txt\n​\n// 按esc，输入:wq保存\n// insert切换</code></pre>\n\n<hr /><p><strong>*查看提交日志（log）</strong></p>\n\n<pre>\n<code class=\"language-css\">查看提交记录\n​\n命令： git log [option]\noption\n–-all 显示所有分支\n–-pretty=oneline 将提交信息显示为一行\n–-abbrev-commit 使得输出的commitId更简短\n–-graph 以图的形式显示</code></pre>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/f18d6814e33649db80729df154cbba69.png\" /></p>\n\n<p>通过别名方式查看（设置别名查看上方 <strong>为常用指令配置别名</strong>）</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/19cee91f067c476898e52b03327e4649.png\" /></p>\n\n<hr /><p><strong>版本回退（reset）</strong></p>\n\n<pre>\n<code class=\"language-css\">版本切换\n命令： git reset --hard commitID 提交id\ncommitID 可以使用 git-log 或 git log 指令查看\n\n查看已经删除的记录\n(如果版本回退后又clear清除了页面，就看不到回退前的id了，所以要查看已经删除的记录）\n命令： git reflog\n这个指令可以看到已经删除的提交记录</code></pre>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/8343d9ae0ad24feb85540a428e62f911.png\" /></p>\n\n<hr /><p><strong>添加文件到忽略列表（.gitignore文件）</strong></p>\n\n<p>一般我们总会有些文件无需纳入Git 的管理，也不希望它们总出现在未跟踪文件列表。 通常都是些自动生成的文件，比如日志文件，或者编译过程中创建的临时文件等。 在这种情况下，我们可以在工作目录中创建一个名为 .gitignore 的文件（文件名称固定），列出要忽略的文件模式。下面是一个示例：</p>\n\n<pre>\n<code class=\"language-javascript\"># no .a files\n*.a\n# but do track lib.a, even though you're ignoring .a files above\n!lib.a\n# only ignore the TODO file in the current directory, not subdir/TODO\n/TODO\n# ignore all files in the build/ directory\nbuild/\n# ignore doc/notes.txt, but not doc/server/arch.txt\ndoc/*.txt\n# ignore all .pdf files in the doc/ directory\ndoc/**/*.pdf</code></pre>\n\n<hr /><h1>分支</h1>\n\n<h2>一、什么是分支</h2>\n\n<p>在多人协作开发项目时，不同成员负责的功能不同，为了不受其他开发人员的影响，我们可以在主分支上建立自己专用的分支。完成工作后，将自己分支的修改合并到主分支。因为每一次提交的历史记录都会被保存，所以当发生问题时，定位和修改造成问题的提交就容易多了，而且这样每个人负责自己的分支从而不受其它分支的影响。</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/78a5ba255f7c4d649fe43013d7b3f6e2.png\" /></p>\n\n<hr /><h2>二、查看本地分支</h2>\n\n<pre>\n 命令：</pre>\n\n<pre>\n<code class=\"language-css\">git branch</code></pre>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/dcaef07520a64bb18007f03850f560d4.png\" /></p>\n\n<hr /><h2>三、创建本地分支</h2>\n\n<pre>\n 命令：</pre>\n\n<pre>\n<code class=\"language-css\">git branch 分支名</code></pre>\n\n<p>HEAD指向的是现在使用中的分支的最后一次更新。通常默认指向master分支的最后一次更新。通过移动HEAD，就可以变更使用的分支。</p>\n\n<p>因为新建了一条分支，所以会有两个提交（相当于你要在这个基础上写别的，新建的分支要有前面的内容）</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/3a206cf339a149aba37a1f12255a883d.png\" /></p>\n\n<hr /><h2>四、*切换分支（checkout）</h2>\n\n<pre>\n 命令：</pre>\n\n<pre>\n<code class=\"language-css\">git checkout 分支名</code></pre>\n\n<p>我们还可以直接切换到一个不存在的分支（创建并切换）</p>\n\n<pre>\n 命令：</pre>\n\n<pre>\n<code class=\"language-css\">git checkout -b 分支名</code></pre>\n\n<p>在分支上操作不会影响其它分支，例如下方 master 分支新建了 .gitignore 文件，提交后切换到 dev01 分支后，在此分支时看不到 .gitignore 文件的</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/ced40731ba57465fb101e772d2fb6a52.png\" /></p>\n\n<hr /><p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/5987aa4e45514325bb488cd9692d7d30.png\" /></p>\n\n<hr /><p>查看提交日志 master 提交了 .gitignore 文件（HEAD指向当前使用分支）</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/71f9207300224d82afa3a9a63c40ab75.png\" /></p>\n\n<hr /><h2>五、合并分支（merge）</h2>\n\n<pre>\n 一个分支上的提交可以合并到另一个分支\n 命令：</pre>\n\n<pre>\n<code class=\"language-css\">git merge 分支名称</code></pre>\n\n<p>一般都将分支合并到master分支，例如在dev01分支新建 file02.txt 后提交</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/ce703e77d5ac4347ab98e14c4858f1b2.png\" /></p>\n\n<hr /><p>切换为master分支合并dev01分支，输入git merge dev01会弹出vi编辑器，按Esc健后输入“ :wq ” 退出</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/2c1c878767394008aaee77dc5e6bb751.png\" /></p>\n\n<hr /><p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/3e9b09e551504a5b9cdf4b8258a33be7.png\" /></p>\n\n<hr /><p><strong>分支合并成功</strong></p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/e75117d169a74d3ca41469da0978f596.png\" /></p>\n\n<hr /><h2>六、删除分支</h2>\n\n<p>不能删除当前分支，只能删除其他分支</p>\n\n<pre>\n<code class=\"language-css\">git branch -d b1 删除分支时，需要做各种检查 （一般使用-d即可）\ngit branch -D b1 不做任何检查，强制删除</code></pre>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/e771ec22028d4250b0417a4c0d966967.png\" /></p>\n\n<hr /><h2>七、解决冲突</h2>\n\n<p><strong>冲突</strong></p>\n\n<p>当两个分支上对文件的修改可能会存在冲突，例如同时修改了同一个文件的同一行，这时就需要手动解决冲突。</p>\n\n<hr /><p>解决冲突步骤：</p>\n\n<pre>\n<code class=\"language-css\">合并分支\n处理文件中冲突的地方（将文件修改成想要的样子）\n将解决完冲突的文件加入暂存区(add)\n提交到仓库(commit)</code></pre>\n\n<p>当两个分支修改同一个文件，发现修改了同一个地方不同的内容。比如dev01修改为count=2，master修改为count=3，将dev合并到master后就会产生冲突。</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/cee6e5cc0d0d48ea93ee7da43b110866.png\" /></p>\n\n<hr /><p><strong>解决办法：</strong></p>\n\n<p>合并分支</p>\n\n<p>将dev01合并到master后会出现如下图所示，将文件修改成想要的样子再通过master提交。</p>\n\n<p>合并后file01.txt文件，会出现两个文件相冲突的地方，自动用\"====\"区分</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/7193fdd12ce84be693513c9107f58873.png\" /></p>\n\n<hr /><p>处理文件中冲突的地方（将文件修改成想要的样子）然后提交</p>\n\n<p>提交可以加-m指定一个注释，也可以不加，它会自动生成</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/85a02f4fc08d46c3b0a42a25ec143a2e.png\" /></p>\n\n<hr /><p>回车后会弹出vi编辑器，按 Esc健后输入“ :wq ” 退出</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/290e4a1c72c24ffcbe2f7e684cc82dc6.png\" /></p>\n\n<hr /><p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/d94644b85b5847c09cd24f109092428b.png\" /></p>\n\n<hr /><h2>八、开发中分支使用原则与流程</h2>\n\n<p>几乎所有的版本控制系统都以某种形式支持分支。 使用分支意味着你可以把你的工作从开发主线上分离开来进行重大的Bug修改、开发新的功能，以免影响开发主线。</p>\n\n<p>在开发中，一般有如下分支使用原则与流程：</p>\n\n<pre>\n<code class=\"language-css\"> master （生产） 分支</code></pre>\n\n<p>线上分支，主分支，中小规模项目作为线上运行的应用对应的分支；</p>\n\n<pre>\n<code class=\"language-css\"> develop（开发）分支</code></pre>\n\n<pre>\n ​\n 是从master创建的分支，一般作为开发部门的主要开发分支，如果没有其他并行开发不同期上线要求，</pre>\n\n<p>都可以在此版本进行开发，阶段开发完成后，需要是合并到master分支,准备上线。</p>\n\n<pre>\n<code class=\"language-css\"> feature/xxxx分支</code></pre>\n\n<p>从develop创建的分支，一般是同期并行开发，但不同期上线时创建的分支，分支上的研发任务完成后</p>\n\n<p>合并到develop分支。</p>\n\n<pre>\n<code class=\"language-css\"> hotfix/xxxx分支</code></pre>\n\n<p>从master派生的分支，一般作为线上bug修复使用，修复完成后需要合并到master、test、develop分支</p>\n\n<pre>\n 还有一些其他分支，在此不再详述，例如test分支（用于代码测试）、pre分支（预上线分支）等等。</pre>\n\n<p>master分支是主分支，是线上发布的分支。上线代码必须是从master分支上线，其它分支是不可能上线的。</p>\n\n<p>develop（开发分支），这是开发过程中的主要分支，它可以根据项目功能开发的分出不同的feature分支。feature分支功能开发完成后合并到develop分支，合并后记得删除对应feature分支（因为功能完成不需要了）</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/5038cff37f6c4a60aca04c7e38176658.png\" /></p>\n\n<hr /><h2>九、总结</h2>\n\n<pre>\n<code class=\"language-css\"> ################# 创建并切换到 dev01分支，在 dev01分支提交\n// [master] 创建分支 dev01\ngit brand dev01\n// [master] 切换到 dev01\ngit checkout dev01\n// [dev01] 创建文件 file02.txt\n略\n// [dev01] 将修改加入暂存区并提交到仓库，提交记录内容为: add file02 on dev\ngit add .\ngit commit -m 'add file02 on dev'\n// [dev01]以精简的方式显示记录\ngit-log\n################# 切换到 master分支，将 dev01合并到 master 分支\n// [dev01] 切换到 master 分支\ngit checkout master\n// [master]合并dev01到 master分支\ngit merge dev01\n// [master] 以精简的方式显示提交记录\ngit-log\n// [master] 查看文件变化 (目录下也出现了 file02.txt)\n略\n################# 删除 dev01分支\n// git branch -d dev01\n// [master]以精简的方式显示提交记录\ngit-log</code></pre>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/8d62b8a423494233af5814217b8d4460.png\" /></p>\n\n<h1>Git远程仓库</h1>\n\n<h2>一、常用的托管服务【远程仓库】</h2>\n\n<pre>\n<code class=\"language-javascript\"> 前面我们已经知道了Git中存在两种类型的仓库，即本地仓库和远程仓库。\n那么我们如何搭建Git远程仓库呢？我们可以借助互联网上提供的一些代码托管服务来实现，\n其中比较常用的有GitHub、码云、GitLab等。\n​\ngitHub（ 地址：https://github.com/ ）\n是一个面向开源及私有软件项目的托管平台，因为只支持Git 作为唯一的版本库格式进行托管，故名gitHub\n​\n码云（地址： https://gitee.com/ ）\n是国内的一个代码托管平台，由于服务器在国内，所以相比于GitHub，码云速度会更快\n​\nGitLab （地址： https://about.gitlab.com/ ）是一个用于仓库管理系统的开源项目，\n使用Git作为代码管理工具，并在此基础上搭建起来的web服务,\n一般用于在企业、学校等内部网络搭建git私服。\ngitHub跟码云都是把代码放到别人的服务器上进行托管，这样无法保障安全。\nGitLab就是自己搭建的一个代码管理的托管服务，所以一般用于在企业、学校等内部网络搭建git私服。</code></pre>\n\n<hr /><h2>二、码云的使用</h2>\n\n<p><strong>注册码云</strong></p>\n\n<p>要想使用码云的相关服务，需要注册账号（地址： <a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release2.3.6/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=N7T8\" data-link-title=\"注册 - Gitee.com\" href=\"https://gitee.com/signup\" title=\"注册 - Gitee.com\">注册 - Gitee.com</a> ）</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/1a46ca50a1054d00930204776e5ba25e.png\" /></p>\n\n<hr /><h2>三、创建远程仓库</h2>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/9f50c32ea64b457480539e7e4d87a6b0.png\" /></p>\n\n<hr /><p>仓库创建完成后可以看到仓库地址，如下图所示：</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/ead4c35887f648d7bb4758b814225634.png\" /></p>\n\n<hr /><h2>四、配置SSH公钥</h2>\n\n<p>在git中clone项目有两种方式：HTTPS和SSH，它们的区别如下：</p>\n\n<p><strong>HTTPS</strong>：不管是谁，拿到url随便clone，但是在 push 的时候需要验证用户名和密码。</p>\n\n<p><strong>SSH</strong>：clone的项目你必须是拥有者或者管理员，而且需要在clone前添加SSH Key。SSH 在push的时候，是不需要输入用户名的，如果配置SSH key的时候设置了密码，则需要输入密码的，否则直接是不需要输入密码的。</p>\n\n<p>仓库推送，推送仓库不是随意人员就可以的，码云会确认推送着是否为本人，有几种方案：1.输入码云的登录用户名密码——https 2.公私钥对——ssh 一般情况使用第二种公私钥对，所以需要配置公私钥对</p>\n\n<ul><li>\n<p>生成SSH公钥</p>\n</li>\n</ul><pre>\n<code class=\"language-css\">ssh-keygen -t rsa （Git Bash输入生成身份验证密钥）\n全部回车,采用默认值\n如果公钥已经存在，则自动覆盖</code></pre>\n\n<hr /><p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/12f3d922707e43b0b288a6f25084f1dc.png\" /></p>\n\n<hr /><ul><li>\n<p>Gitee设置账户公共钥</p>\n\n<ul><li>\n<p>获取公钥</p>\n</li>\n</ul></li>\n</ul><pre>\n<code class=\"language-css\">cat ~/.ssh/id_rsa.pub</code></pre>\n\n<hr /><p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/bc319ef01b404d17bfebb6297068376f.png\" /></p>\n\n<hr /><p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/f976716fd4d94bbbb540b6d2cdc7af74.png\" /></p>\n\n<hr /><pre>\n<strong>验证是否配置成功</strong>\n</pre>\n\n<pre>\n<code class=\"language-css\">ssh -T git@gitee.com</code></pre>\n\n<hr /><p>输入后会出现提示，第一次访问gitee.com，？后输入yes即可</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/9ee632b9acd748a583bc873fa55abe24.png\" /></p>\n\n<hr /><p>这里之所以 <strong>设置Gitee密钥原因是</strong>，通过非对称加密的公钥与私钥来完成加密，公钥放置在Gitee上，私钥放置在自己的电脑里。Gitee要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟Gitee上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。</p>\n\n<h2>五、操作远程仓库</h2>\n\n<p><strong>添加远程仓库</strong></p>\n\n<p>此操作是先初始化本地库，然后与已创建的远程库进行对接</p>\n\n<pre>\n<code class=\"language-css\"> 命令： git remote add &lt;远端名称&gt; &lt;仓库路径&gt;\n远端名称，默认是origin，取决于远端服务器设置 \n（给远程仓库设置本地名称，大多数情况一个本地仓库对应一个远程仓库 所以默认origin）\n仓库路径，从远端服务器获取此URL\n例如: git remote add origin git@gitee.com:peng-guangwei/git_test.git</code></pre>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/d603abe54e3344608d8a5546b103a222.png\" /></p>\n\n<hr /><p><strong>解绑远程仓库</strong></p>\n\n<pre>\n<code class=\"language-css\"> 如果添加的时候地址写错了，或者就是想删除远程库，可以用该命令\n命令：git remote rm &lt;远端名称&gt;\n使用前，可以git remote -v查看远程库信息</code></pre>\n\n<p><strong>查看远程仓库</strong></p>\n\n<pre>\n 命令： </pre>\n\n<pre>\n<code class=\"language-css\">git remote</code></pre>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/6103e736eaed40b1bb54f48c8a624ee9.png\" /></p>\n\n<hr /><p><strong>推送到远程仓库</strong></p>\n\n<pre>\n 命令：\n</pre>\n\n<pre>\n<code class=\"language-css\">git push [-f] [–set-upstream] [远端名称 [本地分支名][:远端分支名] ]</code></pre>\n\n<pre>\n 如果远程分支名和本地分支名称相同，则可以只写本地分支\n</pre>\n\n<pre>\n<code class=\"language-css\"> git push origin master</code></pre>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/aaf2fc31d592425692be9e2948e4f894.png\" /></p>\n\n<hr /><pre>\n<code class=\"language-css\">-f 表示强制覆盖\n（如果本地代码和云端代码修改了同一个东西产生冲突，不让推送，可以使用-f强制覆盖，以提交的为准）\n​\n–set-upstream 推送到远端的同时并且建立起和远端分支的关联关系。\n（远端分支与本地分支进行关联）\ngit push --set-upstream origin master:maste</code></pre>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/88991a3e9877492ca52f4ad26575defe.png\" /></p>\n\n<hr /><p>如果当前分支已经和远端分支关联，则可以省略分支名和远端名。</p>\n\n<pre>\ngit push 将master分支推送到已关联的远端分支</pre>\n\n<hr /><p><strong>查询远程仓库</strong></p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/901a9a2604e14112beac738f249eae5e.png\" /></p>\n\n<hr /><p><strong>查看本地分支与远程分支的关联关系</strong></p>\n\n<pre>\n 命令：</pre>\n\n<pre>\n<code class=\"language-css\">git branch -vv</code></pre>\n\n<p>关联前：</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/d356b9d36cf9461dbb2650da277ba453.png\" /></p>\n\n<hr /><p>使用–set-upstream关联后：</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/a057f8b5e82d4d4ab30be69023f3fe60.png\" /></p>\n\n<hr /><p><strong>从远程仓库克隆</strong></p>\n\n<pre>\n<strong> 命令：</strong>\n</pre>\n\n<pre>\n<code class=\"language-css\">git clone &lt;仓库路径&gt; [本地目录]</code></pre>\n\n<pre>\n本地目录可以省略，会自动生成一个目录（远程仓库的名称）</pre>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/45f165b224a2455c91c4a229c74d5de5.png\" /></p>\n\n<hr /><p><strong>从远程仓库中抓取和拉取</strong></p>\n\n<p>远程分支和本地的分支一样，我们可以进行merge操作，只是需要先把远端仓库里的更新都下载到本地，再进行操作。</p>\n\n<pre>\n 抓取 命令：</pre>\n\n<pre>\n<code class=\"language-css\">git fetch [remote name] [branch name]</code></pre>\n\n<ul><li>\n<p><strong>抓取指令就是将仓库里的更新都抓取到本地，不会进行合并</strong></p>\n</li>\n<li>\n<p>如果不指定远端名称和分支名，则抓取所有分支。</p>\n</li>\n</ul><hr /><p><strong>02Git_demo推送file03.txt</strong></p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/b678e6404f544e01b5f9b203a89d6afa.png\" /></p>\n\n<hr /><p><strong>01Git_demo使用fetch抓取命令</strong></p>\n\n<p>远端分支也是分支，执行抓取后还未与本地master合并，所以本地还看不到file03.txt</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/bf00a06e3cd848b2a126aaf2cd67fc77.png\" /></p>\n\n<hr /><p><strong>合并本地和远端分支</strong></p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/44d77cf6480f4aeeab9da3a34af1faf8.png\" /></p>\n\n<hr /><pre>\n 拉取 命令：\n</pre>\n\n<pre>\n<code class=\"language-css\">git pull [remote name] [branch name]</code></pre>\n\n<p><strong>拉取指令 </strong>就是<span style=\"color:#fe2c24;\">将远端仓库的修改拉到本地并自动进行合并</span>，<strong>等同于fetch+merge </strong>    如果不指定远端名称和分支名，则抓取所有并更新当前分支。</p>\n\n<hr /><p><strong>02Git_demo推送file04.txt</strong></p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/5965266614474b7b9385763b53a0d5f3.png\" /></p>\n\n<hr /><p><strong>01Git_demo使用pull拉取命令 自动合并本地和远端分支</strong></p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/2ba25ae0b4a848ba82c438ab4e126f19.png\" /></p>\n\n<hr /><p><strong>解决合并冲突</strong></p>\n\n<p><span style=\"color:#fe2c24;\">在一段时间，A、B用户修改了同一个文件，且修改了同一行位置的代码，此时会发生合并冲突</span></p>\n\n<p>A用户在本地修改代码后优先推送到远程仓库，此时B用户在本地修订代码，提交到本地仓库后，也需要推送到远程仓库，此时B用户晚于A用户，故需要先拉取远程仓库的提交，经过合并后才能推送到远端分支,如下图所示。</p>\n\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/01ed2e1c876b4777a839ae3fe49d9d28.png\" /></p>\n\n<hr /><p><span style=\"color:#fe2c24;\">在B用户拉取代码时，因为A、B用户同一段时间修改了同一个文件的相同位置代码，故会发生合并冲突</span>。</p>\n\n<p>远程分支也是分支，所以合并时冲突的解决方式也和解决本地分支冲突相同相同。（<span style=\"color:#fe2c24;\">冲突的地方会用’==='区分，改成想要的样子提交再推送即可</span>）</p>\n\n<p></p>\n", "status": 1, "cleanedContent": "<p><strong>目标：</strong></p> <pre> <code class=\"language-javascript\">了解 Git 基本概念 能够概述 Git 工作流程 能够使用 Git 常用命令 熟悉 Git 代码托管服务 能够使用 idea 操作 git</code></pre> <hr /><h2>一、概述</h2> <p><strong>开发中的实际场景</strong></p> <pre> <code class=\"language-javascript\">场景一：备份 小明负责的模块就要完成了，就在即将 Release 之前的一瞬间， 电脑突然蓝屏，硬盘光荣牺牲！几个月来的努力付之东流 场景二：代码还原 这个项目中需要一个很复杂的功能，老王摸索了一个星期终于有眉目了， 可是这杯改得面目全非的代码已经回不去从前了，什么地方能买到哆啦A梦的时光机啊？ 场景三：协同开发 小刚和小天先后从文件服务器上下载了同一个文件：， 小刚在 文件中的第 30 行声明了一个方法，叫 count()， 先保存到了文件服务器上，于是，count()方法只存在于小刚的记忆中了 场景四：追溯问题代码的编写人和编写时间! 老王是另一位项目经理，每次因为项目进度挨骂之后， 他都不知道该扣哪个程序员的工资！就拿这次来说吧， 有个Bug调试了30多个小时才知道是因为相关属性没有在应用初始化时赋值！ 可是二胖、王东、刘流和正经牛都不承认是自己干的！</code></pre> <hr /><h2>二、版本控制方式</h2> <pre> <code class=\"language-javascript\"> 集中式版本控制工具 集中式版本控制工具，版本库是集中存放在中央服务器的， team 里每个人 work 时从中央服务器下载代码，是必须联网才能工作， 局域网或互联网，个人修改之后，然后提交中央版本库。 举例：SVN 和 CVS 分布式版本控制工具 在分布式版本控制系统没有 \"中央服务器\"，每个人电脑上都是一个完整的版本库， 这样工作的时候，无需联网了，因为版本库就在你自己电脑上， 多人协作只需要各自的修改推送给对方，就能互相看到对方修改了。 举例：Git</code></pre> <hr /><h2>三、SVN</h2> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><h2>四、Git</h2> <pre> </pre> <pre> <code class=\"language-javascript\"> Git 是分布式的，Git 不需要有中央服务器，我们每台电脑拥有的东西都是一样的。 我们使用 Git 并且有个中心服务器，仅仅是为了方便交换大家的修改， 但是这个服务器的地位和我们每个人的 PC 是一样的，我们可以把它当做一个开发者的pc就可以， 它就是为了大家代码容易交流不关机用的。没有它大家一样可以工作，只不过 \"交换\"修改不方便而已。 Git 是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。 Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。 同生活中许多伟大事物一样，git 诞生于一个极富纷争大举创新的年代。 Linux 内核开源项目有着为数众多的参与者， 绝大多数的 Linux 内核维护工作都花在了提交补丁和保存归档的繁琐事务上 (1991 - 2020年间)。 到 2002年，整个项目组开始启用一个专有的分布式版本控制系统 BitKeeper 来管理和维护代码。 到了 2005年，开发 BitKeeper 的商业公司同 Linux 内核开源社区的合作关系结束， 他们收回了 Linux 内核社区免费使用 BitKeeper 的权利。 这就迫使 Linux 开源社区 (特别是 Linux 的缔造者 Linus Torvalds) 基于使用 BitKeeper 时的经验教训，开发出自己的版本系统。他们对新的系统制定了若干目标： 速度 简单的设计 对非线性开发模式的强力支持 (允许成千上万个并行开发的分支) 完全分布式 有能力高效管理类似 Linux 内核一样的超大规模项目 (速度和数据量)</code></pre> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><h2>五、Git 工作流程图</h2> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p><strong>命令如下：</strong></p> <ol><li> <p>clone (克隆)：从远程仓库中克隆代码到本地仓库</p> </li> <li> <p>checkout (检出)：从本地仓库中捡出一个仓库分支然后进行修订</p> </li> <li> <p>add (添加)：在提交前先将代码提交到暂存区</p> </li> <li> <p>commit (提交)：提交到本地仓库，本地仓库中保存修改的各个历史版本</p> </li> <li> <p>fetch (抓取)：从远程库，抓取到本地仓库，不进行任何的合并动作，一般操作比较少。</p> </li> <li> <p>pull (拉取)：从远程库拉到本地库，自动进行合并 (merge)，然后放到工作区，相当于 fetch + merge</p> </li> <li> <p>push (推送)：修改完成后，需要和团队成员共享代码时，将代码推送到远程仓库。</p> </li> </ol><hr /><h1>Git安装与常用命令</h1> <p>本教程里的 Git 命令例子都是在 Git Bash 中演示的，会用到一些基本的 linux 命令，在此为大家提前列举：</p> <ul><li> <p>ls/ll 查看当前目录</p> </li> <li> <p>cat 查看文件内容</p> </li> <li> <p>touch 创建文件</p> </li> <li> <p>vi vi编辑器 (使用 vi 编辑器是为了方便展示效果，成员可以记事本、editPlus、notPad++ 等其它编辑器)</p> </li> </ul><hr /><h2>一、Git 环境配置</h2> <p><strong>下载与安装</strong></p> <p>下载地址：<a data-link-icon=\"\" data-link-title=\"Git - Downloads\" href=\"\" title=\"Git - Downloads\">Git - Downloads</a></p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p>下载完成后可以得到如下安装文件：</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p>双击下载的安装文件来安装 Git，安装完成后在电脑桌面 (也可以是其他目录) 点击右键，如果能够看到如下两个菜单则说明安装成功。</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p><strong>备注：</strong></p> <ul><li> <p>Git GUI：Git提供的图形界面工具</p> </li> <li> <p>Git Bash：Git 提供的命令行工具 (选中复制，按下鼠标滚轮粘贴)</p> </li> </ul><p>当安装 Git 后首先要做的事情是设置用户名和 email 地址。这是非常重要的，因为每次 Git 提交都会使用该用户信息</p> <hr /><p><strong>基本配置</strong></p> <ol><li> <p>打开 Git Bash</p> </li> <li> <p>设置用户信息</p> <pre> <code class=\"language-css\">git config --global \"Yua\" git config --global \"\" (不需要真实账户)</code></pre> <p></p> </li> <li> <p>查看配置信息</p> <pre> <code class=\"language-css\">git config --global git config --global </code></pre> </li> </ol><hr /><p><strong>为常用指令配置别名 (可选)</strong></p> <p>有些 常用的指令参数 非常多，每次都要输入好多参数，我们可以使用别名。</p> <ul><li> <p>打开 用户目录，创建 <code>.bashrc</code> 文件</p> </li> </ul><p>部分 windows 系统不运行用户创建点号开头的文件，可以打开 gitBash，执行 <code>touch ~/.bashrc</code></p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><ul><li> <p>在 .bashrc 文件中输入如下内容：</p> </li> </ul><pre> <code class=\"language-css\"> #用于输出git提交日志 alias git-log='git log --pretty=oneline --all --graph --abbrev-commit' #用于输出当前目录所有文件及基本信息 alias ll='ls -al'</code></pre> <ul><li> <p>打开 gitBash，执行<code>source ~/.bashrc</code></p> </li> </ul><p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p><strong>解决GitBash 乱码问题</strong></p> <ul><li> <p>打开 GitBash 执行下面命令</p> </li> </ul><pre> <code class=\"language-css\"> git config --global core.quotepath false</code></pre> <ul><li> <p>${git_home}/etc/bash.bashrc 文件最后加入下面来个两行</p> </li> </ul><pre> <code class=\"language-css\"> export LANG=\"zh_CN.UTF-8\" export LC_ALL=\"zh_CN.UTF-8\"</code></pre> <h2>二、获取本地仓库</h2> <p>要使用Git对我们的代码进行版本控制，首先需要获得本地仓库</p> <ol><li> <p>在电脑的任意位置创建一个空目录（例如test）作为我们的本地Git仓库</p> </li> <li> <p>进入这个目录中，点击右键打开 Git bash窗口</p> </li> <li> <p>执行命令 <strong>git init</strong></p> </li> <li> <p>如果创建成功后可在文件夹下看到隐藏的.git目录。</p> </li> </ol><p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><h2>三、Git基础操作指令</h2> <p>Git工作目录下（获取本地仓库后除了.git文件，其它都是工作目录）对文件的修改（增加、删除、更新）会存在几个状态，这些 修改 的状态会随着 Git 的指令而发生变化。</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p>控制状态之间转换的指令：</p> <ol><li> <p>git add （工作区 --> 暂存区）</p> </li> <li> <p>git commit （ 暂存区 --> 本地仓库）</p> </li> </ol><hr /><p><strong>*查看修改的状态（status）</strong></p> <pre> <code class=\"language-css\"> 查看修改的状态（暂存区、工作区） 命令： git status</code></pre> <p><strong>*添加工作区到暂存区（add）</strong></p> <pre> <code class=\"language-css\">添加工作区一个或多个文件的修改到暂存区 命令： git add 当文件名|通配符 如：git add file01.txt(加入单文件) git add . (将全部加入)</code></pre> <p><strong>*提交暂存区到本地仓库（comm it）</strong></p> <pre> <code class=\"language-css\">提交暂存区内容到本地仓库的当前分支 命令： git commit -m “注释内容” “-m” 后为提交注释</code></pre> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p><strong>使用 vi编辑器编辑内容</strong></p> <pre> <code class=\"language-javascript\"> vi file01.txt // 按esc，输入:wq保存 // insert切换</code></pre> <hr /><p><strong>*查看提交日志（log）</strong></p> <pre> <code class=\"language-css\">查看提交记录 命令： git log [option] option –-all 显示所有分支 –-pretty=oneline 将提交信息显示为一行 –-abbrev-commit 使得输出的commitId更简短 –-graph 以图的形式显示</code></pre> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <p>通过别名方式查看（设置别名查看上方 <strong>为常用指令配置别名</strong>）</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p><strong>版本回退（reset）</strong></p> <pre> <code class=\"language-css\">版本切换 命令： git reset --hard commitID 提交id commitID 可以使用 git-log 或 git log 指令查看 查看已经删除的记录 (如果版本回退后又clear清除了页面，就看不到回退前的id了，所以要查看已经删除的记录） 命令： git reflog 这个指令可以看到已经删除的提交记录</code></pre> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p><strong>添加文件到忽略列表（.gitignore文件）</strong></p> <p>一般我们总会有些文件无需纳入Git 的管理，也不希望它们总出现在未跟踪文件列表。 通常都是些自动生成的文件，比如日志文件，或者编译过程中创建的临时文件等。 在这种情况下，我们可以在工作目录中创建一个名为 .gitignore 的文件（文件名称固定），列出要忽略的文件模式。下面是一个示例：</p> <pre> <code class=\"language-javascript\"># no .a files *.a # but do track lib.a, even though you're ignoring .a files above !lib.a # only ignore the TODO file in the current directory, not subdir/TODO /TODO # ignore all files in the build/ directory build/ # ignore doc/notes.txt, but not doc/server/arch.txt doc/*.txt # ignore all .pdf files in the doc/ directory doc/**/*.pdf</code></pre> <hr /><h1>分支</h1> <h2>一、什么是分支</h2> <p>在多人协作开发项目时，不同成员负责的功能不同，为了不受其他开发人员的影响，我们可以在主分支上建立自己专用的分支。完成工作后，将自己分支的修改合并到主分支。因为每一次提交的历史记录都会被保存，所以当发生问题时，定位和修改造成问题的提交就容易多了，而且这样每个人负责自己的分支从而不受其它分支的影响。</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><h2>二、查看本地分支</h2> <pre> 命令：</pre> <pre> <code class=\"language-css\">git branch</code></pre> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><h2>三、创建本地分支</h2> <pre> 命令：</pre> <pre> <code class=\"language-css\">git branch 分支名</code></pre> <p>HEAD指向的是现在使用中的分支的最后一次更新。通常默认指向master分支的最后一次更新。通过移动HEAD，就可以变更使用的分支。</p> <p>因为新建了一条分支，所以会有两个提交（相当于你要在这个基础上写别的，新建的分支要有前面的内容）</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><h2>四、*切换分支（checkout）</h2> <pre> 命令：</pre> <pre> <code class=\"language-css\">git checkout 分支名</code></pre> <p>我们还可以直接切换到一个不存在的分支（创建并切换）</p> <pre> 命令：</pre> <pre> <code class=\"language-css\">git checkout -b 分支名</code></pre> <p>在分支上操作不会影响其它分支，例如下方 master 分支新建了 .gitignore 文件，提交后切换到 dev01 分支后，在此分支时看不到 .gitignore 文件的</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p>查看提交日志 master 提交了 .gitignore 文件（HEAD指向当前使用分支）</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><h2>五、合并分支（merge）</h2> <pre> 一个分支上的提交可以合并到另一个分支 命令：</pre> <pre> <code class=\"language-css\">git merge 分支名称</code></pre> <p>一般都将分支合并到master分支，例如在dev01分支新建 file02.txt 后提交</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p>切换为master分支合并dev01分支，输入git merge dev01会弹出vi编辑器，按Esc健后输入“ :wq ” 退出</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p><strong>分支合并成功</strong></p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><h2>六、删除分支</h2> <p>不能删除当前分支，只能删除其他分支</p> <pre> <code class=\"language-css\">git branch -d b1 删除分支时，需要做各种检查 （一般使用-d即可） git branch -D b1 不做任何检查，强制删除</code></pre> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><h2>七、解决冲突</h2> <p><strong>冲突</strong></p> <p>当两个分支上对文件的修改可能会存在冲突，例如同时修改了同一个文件的同一行，这时就需要手动解决冲突。</p> <hr /><p>解决冲突步骤：</p> <pre> <code class=\"language-css\">合并分支 处理文件中冲突的地方（将文件修改成想要的样子） 将解决完冲突的文件加入暂存区(add) 提交到仓库(commit)</code></pre> <p>当两个分支修改同一个文件，发现修改了同一个地方不同的内容。比如dev01修改为count=2，master修改为count=3，将dev合并到master后就会产生冲突。</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p><strong>解决办法：</strong></p> <p>合并分支</p> <p>将dev01合并到master后会出现如下图所示，将文件修改成想要的样子再通过master提交。</p> <p>合并后file01.txt文件，会出现两个文件相冲突的地方，自动用\"====\"区分</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p>处理文件中冲突的地方（将文件修改成想要的样子）然后提交</p> <p>提交可以加-m指定一个注释，也可以不加，它会自动生成</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p>回车后会弹出vi编辑器，按 Esc健后输入“ :wq ” 退出</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><h2>八、开发中分支使用原则与流程</h2> <p>几乎所有的版本控制系统都以某种形式支持分支。 使用分支意味着你可以把你的工作从开发主线上分离开来进行重大的Bug修改、开发新的功能，以免影响开发主线。</p> <p>在开发中，一般有如下分支使用原则与流程：</p> <pre> <code class=\"language-css\"> master （生产） 分支</code></pre> <p>线上分支，主分支，中小规模项目作为线上运行的应用对应的分支；</p> <pre> <code class=\"language-css\"> develop（开发）分支</code></pre> <pre> 是从master创建的分支，一般作为开发部门的主要开发分支，如果没有其他并行开发不同期上线要求，</pre> <p>都可以在此版本进行开发，阶段开发完成后，需要是合并到master分支,准备上线。</p> <pre> <code class=\"language-css\"> feature/xxxx分支</code></pre> <p>从develop创建的分支，一般是同期并行开发，但不同期上线时创建的分支，分支上的研发任务完成后</p> <p>合并到develop分支。</p> <pre> <code class=\"language-css\"> hotfix/xxxx分支</code></pre> <p>从master派生的分支，一般作为线上bug修复使用，修复完成后需要合并到master、test、develop分支</p> <pre> 还有一些其他分支，在此不再详述，例如test分支（用于代码测试）、pre分支（预上线分支）等等。</pre> <p>master分支是主分支，是线上发布的分支。上线代码必须是从master分支上线，其它分支是不可能上线的。</p> <p>develop（开发分支），这是开发过程中的主要分支，它可以根据项目功能开发的分出不同的feature分支。feature分支功能开发完成后合并到develop分支，合并后记得删除对应feature分支（因为功能完成不需要了）</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><h2>九、总结</h2> <pre> <code class=\"language-css\"> ################# 创建并切换到 dev01分支，在 dev01分支提交 // [master] 创建分支 dev01 git brand dev01 // [master] 切换到 dev01 git checkout dev01 // [dev01] 创建文件 file02.txt 略 // [dev01] 将修改加入暂存区并提交到仓库，提交记录内容为: add file02 on dev git add . git commit -m 'add file02 on dev' // [dev01]以精简的方式显示记录 git-log ################# 切换到 master分支，将 dev01合并到 master 分支 // [dev01] 切换到 master 分支 git checkout master // [master]合并dev01到 master分支 git merge dev01 // [master] 以精简的方式显示提交记录 git-log // [master] 查看文件变化 (目录下也出现了 file02.txt) 略 ################# 删除 dev01分支 // git branch -d dev01 // [master]以精简的方式显示提交记录 git-log</code></pre> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <h1>Git远程仓库</h1> <h2>一、常用的托管服务【远程仓库】</h2> <pre> <code class=\"language-javascript\"> 前面我们已经知道了Git中存在两种类型的仓库，即本地仓库和远程仓库。 那么我们如何搭建Git远程仓库呢？我们可以借助互联网上提供的一些代码托管服务来实现， 其中比较常用的有GitHub、码云、GitLab等。 gitHub（ 地址： ） 是一个面向开源及私有软件项目的托管平台，因为只支持Git 作为唯一的版本库格式进行托管，故名gitHub 码云（地址： ） 是国内的一个代码托管平台，由于服务器在国内，所以相比于GitHub，码云速度会更快 GitLab （地址： ）是一个用于仓库管理系统的开源项目， 使用Git作为代码管理工具，并在此基础上搭建起来的web服务, 一般用于在企业、学校等内部网络搭建git私服。 gitHub跟码云都是把代码放到别人的服务器上进行托管，这样无法保障安全。 GitLab就是自己搭建的一个代码管理的托管服务，所以一般用于在企业、学校等内部网络搭建git私服。</code></pre> <hr /><h2>二、码云的使用</h2> <p><strong>注册码云</strong></p> <p>要想使用码云的相关服务，需要注册账号（地址： <a data-link-icon=\"\" data-link-title=\"注册 - \" href=\"signup\" title=\"注册 - \">注册 - </a> ）</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><h2>三、创建远程仓库</h2> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p>仓库创建完成后可以看到仓库地址，如下图所示：</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><h2>四、配置SSH公钥</h2> <p>在git中clone项目有两种方式：HTTPS和SSH，它们的区别如下：</p> <p><strong>HTTPS</strong>：不管是谁，拿到url随便clone，但是在 push 的时候需要验证用户名和密码。</p> <p><strong>SSH</strong>：clone的项目你必须是拥有者或者管理员，而且需要在clone前添加SSH Key。SSH 在push的时候，是不需要输入用户名的，如果配置SSH key的时候设置了密码，则需要输入密码的，否则直接是不需要输入密码的。</p> <p>仓库推送，推送仓库不是随意人员就可以的，码云会确认推送着是否为本人，有几种方案：1.输入码云的登录用户名密码——https 2.公私钥对——ssh 一般情况使用第二种公私钥对，所以需要配置公私钥对</p> <ul><li> <p>生成SSH公钥</p> </li> </ul><pre> <code class=\"language-css\">ssh-keygen -t rsa （Git Bash输入生成身份验证密钥） 全部回车,采用默认值 如果公钥已经存在，则自动覆盖</code></pre> <hr /><p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><ul><li> <p>Gitee设置账户公共钥</p> <ul><li> <p>获取公钥</p> </li> </ul></li> </ul><pre> <code class=\"language-css\">cat ~/.ssh/id_rsa.pub</code></pre> <hr /><p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><pre> <strong>验证是否配置成功</strong> </pre> <pre> <code class=\"language-css\">ssh -T </code></pre> <hr /><p>输入后会出现提示，第一次访问gitee.com，？后输入yes即可</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p>这里之所以 <strong>设置Gitee密钥原因是</strong>，通过非对称加密的公钥与私钥来完成加密，公钥放置在Gitee上，私钥放置在自己的电脑里。Gitee要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟Gitee上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。</p> <h2>五、操作远程仓库</h2> <p><strong>添加远程仓库</strong></p> <p>此操作是先初始化本地库，然后与已创建的远程库进行对接</p> <pre> <code class=\"language-css\"> 命令： git remote add <远端名称> <仓库路径> 远端名称，默认是origin，取决于远端服务器设置 （给远程仓库设置本地名称，大多数情况一个本地仓库对应一个远程仓库 所以默认origin） 仓库路径，从远端服务器获取此URL 例如: git remote add origin :peng-guangwei/git_test.git</code></pre> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p><strong>解绑远程仓库</strong></p> <pre> <code class=\"language-css\"> 如果添加的时候地址写错了，或者就是想删除远程库，可以用该命令 命令：git remote rm <远端名称> 使用前，可以git remote -v查看远程库信息</code></pre> <p><strong>查看远程仓库</strong></p> <pre> 命令： </pre> <pre> <code class=\"language-css\">git remote</code></pre> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p><strong>推送到远程仓库</strong></p> <pre> 命令： </pre> <pre> <code class=\"language-css\">git push [-f] [–set-upstream] [远端名称 [本地分支名][:远端分支名] ]</code></pre> <pre> 如果远程分支名和本地分支名称相同，则可以只写本地分支 </pre> <pre> <code class=\"language-css\"> git push origin master</code></pre> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><pre> <code class=\"language-css\">-f 表示强制覆盖 （如果本地代码和云端代码修改了同一个东西产生冲突，不让推送，可以使用-f强制覆盖，以提交的为准） –set-upstream 推送到远端的同时并且建立起和远端分支的关联关系。 （远端分支与本地分支进行关联） git push --set-upstream origin master:maste</code></pre> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p>如果当前分支已经和远端分支关联，则可以省略分支名和远端名。</p> <pre> git push 将master分支推送到已关联的远端分支</pre> <hr /><p><strong>查询远程仓库</strong></p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p><strong>查看本地分支与远程分支的关联关系</strong></p> <pre> 命令：</pre> <pre> <code class=\"language-css\">git branch -vv</code></pre> <p>关联前：</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p>使用–set-upstream关联后：</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p><strong>从远程仓库克隆</strong></p> <pre> <strong> 命令：</strong> </pre> <pre> <code class=\"language-css\">git clone <仓库路径> [本地目录]</code></pre> <pre> 本地目录可以省略，会自动生成一个目录（远程仓库的名称）</pre> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p><strong>从远程仓库中抓取和拉取</strong></p> <p>远程分支和本地的分支一样，我们可以进行merge操作，只是需要先把远端仓库里的更新都下载到本地，再进行操作。</p> <pre> 抓取 命令：</pre> <pre> <code class=\"language-css\">git fetch [remote name] [branch name]</code></pre> <ul><li> <p><strong>抓取指令就是将仓库里的更新都抓取到本地，不会进行合并</strong></p> </li> <li> <p>如果不指定远端名称和分支名，则抓取所有分支。</p> </li> </ul><hr /><p><strong>02Git_demo推送file03.txt</strong></p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p><strong>01Git_demo使用fetch抓取命令</strong></p> <p>远端分支也是分支，执行抓取后还未与本地master合并，所以本地还看不到file03.txt</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p><strong>合并本地和远端分支</strong></p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><pre> 拉取 命令： </pre> <pre> <code class=\"language-css\">git pull [remote name] [branch name]</code></pre> <p><strong>拉取指令 </strong>就是<span style=\"color:#fe2c24;\">将远端仓库的修改拉到本地并自动进行合并</span>，<strong>等同于fetch+merge </strong> 如果不指定远端名称和分支名，则抓取所有并更新当前分支。</p> <hr /><p><strong>02Git_demo推送file04.txt</strong></p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p><strong>01Git_demo使用pull拉取命令 自动合并本地和远端分支</strong></p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p><strong>解决合并冲突</strong></p> <p><span style=\"color:#fe2c24;\">在一段时间，A、B用户修改了同一个文件，且修改了同一行位置的代码，此时会发生合并冲突</span></p> <p>A用户在本地修改代码后优先推送到远程仓库，此时B用户在本地修订代码，提交到本地仓库后，也需要推送到远程仓库，此时B用户晚于A用户，故需要先拉取远程仓库的提交，经过合并后才能推送到远端分支,如下图所示。</p> <p style=\"text-align:center;\"><img alt=\"\" src=\"\" /></p> <hr /><p><span style=\"color:#fe2c24;\">在B用户拉取代码时，因为A、B用户同一段时间修改了同一个文件的相同位置代码，故会发生合并冲突</span>。</p> <p>远程分支也是分支，所以合并时冲突的解决方式也和解决本地分支冲突相同相同。（<span style=\"color:#fe2c24;\""}
{"url": "https://blog.csdn.net/2301_80018137/article/details/134914750", "article_id": 134914750, "username": "2301_80018137", "title": "贪心算法是什么？", "body": "<p>大佬：嘿，你好！听说你对算法有兴趣，有什么想了解的？</p>\n\n<p>小白：*嗯，是的。我听说了贪心算法，但不太理解它是怎么工作的。你能给我解释一下吗？</p>\n\n<p>大佬：当然可以。贪心算法是一种在每一步选择中都采取当前状态下最优决策的策略。简单来说，它每次都选择当前看起来最好的选项，而不考虑全局的情况。</p>\n\n<p>小白： 好像明白了一点。这个“最优决策”是怎么定义的呢？</p>\n\n<p>大佬： 很好的问题！最优决策通常是基于某个局部的标准来确定的。贪心算法会在每一步都做出在当前情况下最优的选择，而不考虑后续的影响。</p>\n\n<p>小白： 这样的话，它怎么保证最后的结果是全局最优的呢？</p>\n\n<p>大佬:  也是一个常见的疑惑。事实上，并不是所有问题都适合贪心算法。对于一些问题，贪心算法可能会得到次优解。但在一些特定的场景，贪心算法能够确保最后的结果是全局最优的。</p>\n\n<p>小白： 能给个例子吗？</p>\n\n<p>大佬： 当然。比如，假设你有一袋硬币，每种硬币的面值都是2的幂次方（1、2、4、8、...）。你需要找零某个金额。贪心算法会选择尽可能大的硬币，这样找零的硬币数量就会最少。</p>\n\n<p>小白：那听起来挺简单的嘛。有没有什么情况贪心算法不适用？</p>\n\n<p>大佬： 是的，有些问题贪心算法就不太适用，比如涉及到动态规划和全局最优解的情况。在这些问题中，贪心算法可能会陷入局部最优解而无法达到全局最优。</p>\n\n<p>小白： 明白了，贪心算法似乎是一种效率高但局限性也比较大的方法。</p>\n\n<p>大佬： 没错。它适用于一些特定的问题，但在解决其他问题时，我们可能需要考虑更复杂的算法。贪心算法是算法世界中的一颗明星，但并非适用于所有场景。</p>\n", "status": 1, "cleanedContent": "<p>大佬：嘿，你好！听说你对算法有兴趣，有什么想了解的？</p> <p>小白：*嗯，是的。我听说了贪心算法，但不太理解它是怎么工作的。你能给我解释一下吗？</p> <p>大佬：当然可以。贪心算法是一种在每一步选择中都采取当前状态下最优决策的策略。简单来说，它每次都选择当前看起来最好的选项，而不考虑全局的情况。</p> <p>小白： 好像明白了一点。这个“最优决策”是怎么定义的呢？</p> <p>大佬： 很好的问题！最优决策通常是基于某个局部的标准来确定的。贪心算法会在每一步都做出在当前情况下最优的选择，而不考虑后续的影响。</p> <p>小白： 这样的话，它怎么保证最后的结果是全局最优的呢？</p> <p>大佬: 也是一个常见的疑惑。事实上，并不是所有问题都适合贪心算法。对于一些问题，贪心算法可能会得到次优解。但在一些特定的场景，贪心算法能够确保最后的结果是全局最优的。</p> <p>小白： 能给个例子吗？</p> <p>大佬： 当然。比如，假设你有一袋硬币，每种硬币的面值都是2的幂次方（1、2、4、8、...）。你需要找零某个金额。贪心算法会选择尽可能大的硬币，这样找零的硬币数量就会最少。</p> <p>小白：那听起来挺简单的嘛。有没有什么情况贪心算法不适用？</p> <p>大佬： 是的，有些问题贪心算法就不太适用，比如涉及到动态规划和全局最优解的情况。在这些问题中，贪心算法可能会陷入局部最优解而无法达到全局最优。</p> <p>小白： 明白了，贪心算法似乎是一种效率高但局限性也比较大的方法。</p> <p>大佬： 没错。它适用于一些特定的问题，但在解决其他问题时，我们可能需要考虑更复杂的算法。贪心算法是算法世界中的一颗明星，但并非适用于所有场景。"}
{"url": "https://blog.csdn.net/hujie9371/article/details/135207847", "article_id": 135207847, "username": "hujie9371", "title": "【无标题】", "body": "<p>Skyline已经发布了正式版，有越来越多的小程序使用 Skyline 渲染引擎开发，距离我独立开发，并且所有页面均使用Skyline框架的小程序</p>\n<p>【NONZERO COFFEE】上架已经过了好几个月，我也一直在为开源做着努力与尝试。</p>\n<p>但开源之成本超乎我的想象，第一：项目使用的技术比较杂乱，想使用的同学一定会有较大的困扰，所有我正在开发配置后台，让使用者只需关心配置数据，不需要考虑技术。第二：目前我并不希望利用它盈利，但我也不希望开源的产品被人拿来就用，所以我萌生了开发组件库的想法，于是有了 【SkylineUI组件库】。</p>\n<p>SkylineUI组件库： 是一款适配Skyline渲染框架的组件库，暂不支持webview渲染,它的风格倾向于极简风与标准化。它拥有以下特点：</p>\n<p>1、拥有丰富的css样式与色彩变量，并且色彩变量兼容适配了深色模式。</p>\n<p>2、得益于Skyline框架的特性，各组件拥有丰富的动画与高性能。</p>\n<p>3、标准组件外，后续会加入丰富的电商组件（风格参考于 NONZERO COFFEE小程序）</p>\n<p>4、媲美APP的体验，参考了较多大厂软件，也非常努力的还原了使用中的各种效果与组件。</p>\n<p>5、组件开发难度较我个人来说，还是比较大的，基本上一两天可以完成一个组件，所以目前的组件库组件不是很多，但不会停止添加与维护。</p>\n<p><strong>组件截图示例：</strong></p>\n\n", "status": 2, "cleanedContent": "<p>Skyline已经发布了正式版，有越来越多的小程序使用 Skyline 渲染引擎开发，距离我独立开发，并且所有页面均使用Skyline框架的小程序</p> <p>【NONZERO COFFEE】上架已经过了好几个月，我也一直在为开源做着努力与尝试。</p> <p>但开源之成本超乎我的想象，第一：项目使用的技术比较杂乱，想使用的同学一定会有较大的困扰，所有我正在开发配置后台，让使用者只需关心配置数据，不需要考虑技术。第二：目前我并不希望利用它盈利，但我也不希望开源的产品被人拿来就用，所以我萌生了开发组件库的想法，于是有了 【SkylineUI组件库】。</p> <p>SkylineUI组件库： 是一款适配Skyline渲染框架的组件库，暂不支持webview渲染,它的风格倾向于极简风与标准化。它拥有以下特点：</p> <p>1、拥有丰富的css样式与色彩变量，并且色彩变量兼容适配了深色模式。</p> <p>2、得益于Skyline框架的特性，各组件拥有丰富的动画与高性能。</p> <p>3、标准组件外，后续会加入丰富的电商组件（风格参考于 NONZERO COFFEE小程序）</p> <p>4、媲美APP的体验，参考了较多大厂软件，也非常努力的还原了使用中的各种效果与组件。</p> <p>5、组件开发难度较我个人来说，还是比较大的，基本上一两天可以完成一个组件，所以目前的组件库组件不是很多，但不会停止添加与维护。"}
{"url": "https://blog.csdn.net/m0_65484028/article/details/134914823", "article_id": 134914823, "username": "m0_65484028", "title": "HTML中华传统文化题材网页《中国民间年画》HTML+CSS+JavaScript", "body": "<blockquote>\n<p>�‍�学生HTML静态网页基础水平制作�‍�，页面排版干净简洁。使用HTML+CSS页面布局设计,web大学生网页设计作业源码，这是一个不错的旅游网页制作，画面精明，排版整洁，内容丰富，主题鲜明，非常适合初学者学习使用, 这个实例比较全面，有助于同学的学习,本文将介绍如何通过从头开始设计个人网站并将其转换为代码的过程来实践设计。</p>\n</blockquote>\n<hr>\n<p><font color=\"#b44846\" size=\"4px\"> ❤</font> <a href=\"https://blog.csdn.net/m0_46321522?type=blog\">【作者主页——�获取更多优质源码】</a></p>\n<p><font color=\"#b44846\" size=\"4px\"> ❤</font> <a href=\"https://blog.csdn.net/m0_46321522?type=blog\">【学习资料/简历模板/面试资料/ 网站设计与制作】</a></p>\n<p><font color=\"#b44846\" size=\"4px\"> ❤</font> <a href=\"#weibu\">【web前端期末大作业——��毕设项目精品实战案例】</a></p>\n<hr>\n# 一、�‍�网站题目\n�茶文化网站、�️‍�中华传统文化题材、京剧文化�水墨风书画、中国民间年画文化艺术网站 、等网站的设计与制作。\n<hr>\n<h1><a id=\"_16\"></a>二、✍️网站描述</h1>\n<p>�️ 这个首页代码运用了DIV盒子的使用方法，如盒子的嵌套、浮动、margin、border、background等属性的使用，外部大盒子设定居中，内部左中右布局，下方横向浮动排列，大学学习的前端知识点和布局方式都有运用，CSS的代码量也很足、很细致，使用hover来完成过渡效果、鼠标滑过效果等，使用表格、表单补充模块，为方便新手学习, 个别源码页面中没有使用js有需要的可以自行添加。</p>\n<p><strong>� 一套优质的�网页设计应该包含 (具体可根据个人要求而定)</strong></p>\n<ol>\n<li>页面分为页头、菜单导航栏（最好可下拉）、中间内容板块、页脚四大部分。</li>\n<li>所有页面相互超链接，可到三级页面，有5-10个页面组成。</li>\n<li>页面样式风格统一布局显示正常，不错乱，使用Div+Css技术。</li>\n<li>菜单美观、醒目，二级菜单可正常弹出与跳转。</li>\n<li>要有JS特效，如定时切换和手动切换图片轮播。</li>\n<li>页面中有多媒体元素，如gif、视频、音乐，表单技术的使用。</li>\n<li>页面清爽、美观、大方，不雷同。 。</li>\n<li>不仅要能够把用户要求的内容呈现出来，还要满足布局良好、界面美观、配色优雅、表现形式多样等要求。</li>\n</ol>\n<hr>\n<h1><a id=\"_31\"></a>三、�网站介绍</h1>\n<p><strong>�网站布局方面</strong>：计划采用目前主流的、能兼容各大主流浏览器、显示效果稳定的浮动网页布局结构。</p>\n<p><strong>�网站程序方面</strong>：计划采用最新的网页编程语言HTML5+CSS3+JS程序语言完成网站的功能设计。并确保网站代码兼容目前市面上所有的主流浏览器，已达到打开后就能即时看到网站的效果。</p>\n<p><strong>�网站素材方面</strong>：计划收集各大平台好看的图片素材，并精挑细选适合网页风格的图片，然后使用PS做出适合网页尺寸的图片。</p>\n<p><strong>�网站文件方面</strong>：网站系统文件种类包含：html网页结构文件、css网页样式文件、js网页特效文件、images网页图片文件；</p>\n<p><strong>�网页编辑方面</strong>：网页作品代码简单，可使用任意HTML编辑软件（如：<code>Dreamweaver、HBuilder、Vscode 、Sublime 、Webstorm、Text 、Notepad++</code> 等任意html编辑软件进行运行及修改编辑等操作）。<br>\n其中：<br>\n（1）�html文件包含：其中index.html是首页、其他html为二级页面；<br>\n（2）� css文件包含：css全部页面样式,文字滚动, 图片放大等；<br>\n（3）� js文件包含：js实现动态轮播特效, 表单提交, 点击事件等等（个别网页中运用到js代码）。</p>\n<hr>\n<h1><a id=\"_47\"></a>四、�网站演示</h1>\n<p><img src=\"https://img-blog.csdnimg.cn/464750d49cfc4699a8a9d72720c2bce8.png#pic_center\" alt=\"在这里插入图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/b1e748f30f54419c9afe6be9d00e458f.png#pic_center\" alt=\"在这里插入图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/c3adbb8912054036b9fec027e725c6f4.png#pic_center\" alt=\"在这里插入图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/6ef7e8a7b65a4dd6b7dc1eff4b0204ec.png#pic_center\" alt=\"在这里插入图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/b7666b22e27b4d7d8bceaf6ed60c5d76.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<hr>\n<h1><a id=\"__60\"></a>五、⚙️ 网站代码</h1>\n<h2><a id=\"HTML_61\"></a>�HTML结构代码</h2>\n<pre><code class=\"prism language-html\">\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/1999/xhtml<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Content-Type<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/html; charset=utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>中国民间年画<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css/index.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">language</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">function</span> <span class=\"token function\">clearText</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">field</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">.</span>defaultValue <span class=\"token operator\">==</span> field<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> field<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">.</span>value <span class=\"token operator\">==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> field<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> field<span class=\"token punctuation\">.</span>defaultValue<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>templatemo_container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>templatemo_banner<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span>760px<span class=\"token punctuation\">;</span><span class=\"token property\">height</span><span class=\"token punctuation\">:</span>90px<span class=\"token punctuation\">;</span><span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span>170px</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>marquee</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>40px<span class=\"token punctuation\">;</span><span class=\"token property\">height</span><span class=\"token punctuation\">:</span>90px<span class=\"token punctuation\">;</span><span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span>90px<span class=\"token punctuation\">;</span><span class=\"token property\">color</span><span class=\"token punctuation\">:</span>orange<span class=\"token punctuation\">;</span><span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span>bold<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n中国民间年画\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>marquee</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!-- end of banner --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>templatemo_menu<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>index.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>首页<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>jj.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>简介<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tc.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>图册<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dg.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>典故<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>cq.html<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>last<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>产区<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!-- end of menu --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>templatemo_content_top<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>section_w335 fl margin_right_40<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>header_01<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>年画简介<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image_wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images/n1.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>135px<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>135<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token entity named-entity\" title=\"&nbsp;\">&amp;nbsp;</span><span class=\"token entity named-entity\" title=\"&nbsp;\">&amp;nbsp;</span><span class=\"token entity named-entity\" title=\"&nbsp;\">&amp;nbsp;</span><span class=\"token entity named-entity\" title=\"&nbsp;\">&amp;nbsp;</span>年 画 ， 中 国 画 的 一 种 。 始 于 古 代 的 “ 门 神 画 ” ， 大 都 用 于 新 年 时 张 帖 ， 装 饰 环境 ，含 有 祝 福 新 年 吉 祥 喜庆 之 意 ， 故 名 。 传 统 民 间 年 画 多 用 木 板 水 印 制 作 主 要 。 。 。 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>jj.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>更多<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>section_w335 fl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>header_01<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> 图册<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image_wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images/n2.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>135px<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>135<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token entity named-entity\" title=\"&nbsp;\">&amp;nbsp;</span><span class=\"token entity named-entity\" title=\"&nbsp;\">&amp;nbsp;</span><span class=\"token entity named-entity\" title=\"&nbsp;\">&amp;nbsp;</span><span class=\"token entity named-entity\" title=\"&nbsp;\">&amp;nbsp;</span>年 画 大 部分 是 以 吉 祥 、 喜 庆 、 欢 乐 、 美 好 等 事 物 ， 或 以 典故 、 成 语 作 为 主 题 ，有 情 节 ， 易 于 理解 。 其 取 材 内 容 极 为 广 泛 ， 诸 如 历 史故 事 、 神 话 传 说 、 吸 取 人 。。。 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tc.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>更多》<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>margin_bottom_40<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>section_w335 fl margin_right_40<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>header_01<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> 典故<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image_wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images/n3.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>1、五福临门<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">/&gt;</span></span>\n2、门神<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">/&gt;</span></span>\n3、雄狮<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">/&gt;</span></span>\n4、神虎<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">/&gt;</span></span>\n5、和合二仙<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">/&gt;</span></span>\n6、九九肖寒图<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dg.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>更多》<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>section_w335 fl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>header_01<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> 产区 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image_wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images/ds.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>95px<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>95<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>1、杨家埠<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">/&gt;</span></span>\n2、朱仙镇 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">/&gt;</span></span>\n3、桃花坞<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">/&gt;</span></span>\n4、杨柳青<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"tok", "status": 1, "cleanedContent": "<blockquote> <p>��学生HTML静态网页基础水平制作��，页面排版干净简洁。使用HTML+CSS页面布局设计,web大学生网页设计作业源码，这是一个不错的旅游网页制作，画面精明，排版整洁，内容丰富，主题鲜明，非常适合初学者学习使用, 这个实例比较全面，有助于同学的学习,本文将介绍如何通过从头开始设计个人网站并将其转换为代码的过程来实践设计。</p> </blockquote> <hr> <p><font color=\"#b\" size=\"4px\"> </font> <a href=\"\">【作者主页——�获取更多优质源码】</a></p> <p><font color=\"#b\" size=\"4px\"> </font> <a href=\"\">【学习资料/简历模板/面试资料/ 网站设计与制作】</a></p> <p><font color=\"#b\" size=\"4px\"> </font> <a href=\"#weibu\">【web前端期末大作业——��毕设项目精品实战案例】</a></p> <hr> # 一、��网站题目 �茶文化网站、��中华传统文化题材、京剧文化�水墨风书画、中国民间年画文化艺术网站 、等网站的设计与制作。 <hr> <h1><a id=\"_16\"></a>二、网站描述</h1> <p>� 这个首页代码运用了DIV盒子的使用方法，如盒子的嵌套、浮动、margin、border、background等属性的使用，外部大盒子设定居中，内部左中右布局，下方横向浮动排列，大学学习的前端知识点和布局方式都有运用，CSS的代码量也很足、很细致，使用hover来完成过渡效果、鼠标滑过效果等，使用表格、表单补充模块，为方便新手学习, 个别源码页面中没有使用js有需要的可以自行添加。</p> <p><strong>� 一套优质的�网页设计应该包含 (具体可根据个人要求而定)</strong></p> <ol> <li>页面分为页头、菜单导航栏（最好可下拉）、中间内容板块、页脚四大部分。</li> <li>所有页面相互超链接，可到三级页面，有5-10个页面组成。</li> <li>页面样式风格统一布局显示正常，不错乱，使用Div+Css技术。</li> <li>菜单美观、醒目，二级菜单可正常弹出与跳转。</li> <li>要有JS特效，如定时切换和手动切换图片轮播。</li> <li>页面中有多媒体元素，如gif、视频、音乐，表单技术的使用。</li> <li>页面清爽、美观、大方，不雷同。 。</li> <li>不仅要能够把用户要求的内容呈现出来，还要满足布局良好、界面美观、配色优雅、表现形式多样等要求。</li> </ol> <hr> <h1><a id=\"_31\"></a>三、�网站介绍</h1> <p><strong>�网站布局方面</strong>：计划采用目前主流的、能兼容各大主流浏览器、显示效果稳定的浮动网页布局结构。</p> <p><strong>�网站程序方面</strong>：计划采用最新的网页编程语言HTML5+CSS3+JS程序语言完成网站的功能设计。并确保网站代码兼容目前市面上所有的主流浏览器，已达到打开后就能即时看到网站的效果。</p> <p><strong>�网站素材方面</strong>：计划收集各大平台好看的图片素材，并精挑细选适合网页风格的图片，然后使用PS做出适合网页尺寸的图片。</p> <p><strong>�网站文件方面</strong>：网站系统文件种类包含：html网页结构文件、css网页样式文件、js网页特效文件、images网页图片文件；</p> <p><strong>�网页编辑方面</strong>：网页作品代码简单，可使用任意HTML编辑软件（如：<code>Dreamweaver、HBuilder、Vscode 、Sublime 、Webstorm、Text 、Notepad++</code> 等任意html编辑软件进行运行及修改编辑等操作）。<br> 其中：<br> （1）�html文件包含：其中index.html是首页、其他html为二级页面；<br> （2）� css文件包含：css全部页面样式,文字滚动, 图片放大等；<br> （3）� js文件包含：js实现动态轮播特效, 表单提交, 点击事件等等（个别网页中运用到js代码）。</p> <hr> <h1><a id=\"_47\"></a>四、�网站演示</h1> <p><img src=\"\" alt=\"在这里插入图片描述\"><br> <img src=\"\" alt=\"在这里插入图片描述\"><br> <img src=\"\" alt=\"在这里插入图片描述\"><br> <img src=\"\" alt=\"在这里插入图片描述\"><br> <img src=\"\" alt=\"在这里插入图片描述\"></p> <hr> <h1><a id=\"__60\"></a>五、 网站代码</h1> <h2><a id=\"HTML_61\"></a>�HTML结构代码</h2> <pre><code class=\"prism language-html\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>html</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>head</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Content-Type<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/html; charset=utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>title</span><span class=\"token punctuation\">></span></span>中国民间年画<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>title</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css/index.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>script</span> <span class=\"token attr-name\">language</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"> <span class=\"token keyword\">function</span> <span class=\"token function\">clearText</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">field</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">.</span>defaultValue <span class=\"token operator\">==</span> field<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> field<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">.</span>value <span class=\"token operator\">==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> field<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> field<span class=\"token punctuation\">.</span>defaultValue<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>script</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>head</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>body</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>templatemo_container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>templatemo_banner<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span>760px<span class=\"token punctuation\">;</span><span class=\"token property\">height</span><span class=\"token punctuation\">:</span>90px<span class=\"token punctuation\">;</span><span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span>170px</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>marquee</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>40px<span class=\"token punctuation\">;</span><span class=\"token property\">height</span><span class=\"token punctuation\">:</span>90px<span class=\"token punctuation\">;</span><span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span>90px<span class=\"token punctuation\">;</span><span class=\"token property\">color</span><span class=\"token punctuation\">:</span>orange<span class=\"token punctuation\">;</span><span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span>bold<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span> 中国民间年画 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>marquee</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\"><!-- end of banner --></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>templatemo_menu<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>ul</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>index.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>首页<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>jj.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>简介<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tc.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>图册<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dg.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>典故<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>cq.html<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>last<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>产区<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>ul</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\"><!-- end of menu --></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>templatemo_content_top<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>section_w335 fl margin_right_40<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>header_01<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>年画简介<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image_wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images/n1.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>135px<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>135<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token entity named-entity\" title=\" \"> </span><span class=\"token entity named-entity\" title=\" \"> </span><span class=\"token entity named-entity\" title=\" \"> </span><span class=\"token entity named-entity\" title=\" \"> </span>年 画 ， 中 国 画 的 一 种 。 始 于 古 代 的 “ 门 神 画 ” ， 大 都 用 于 新 年 时 张 帖 ， 装 饰 环境 ，含 有 祝 福 新 年 吉 祥 喜庆 之 意 ， 故 名 。 传 统 民 间 年 画 多 用 木 板 水 印 制 作 主 要 。 。 。 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>p</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>jj.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>更多<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>p</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>section_w335 fl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>header_01<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> 图册<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image_wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images/n2.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>135px<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>135<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token entity named-entity\" title=\" \"> </span><span class=\"token entity named-entity\" title=\" \"> </span><span class=\"token entity named-entity\" title=\" \"> </span><span class=\"token entity named-entity\" title=\" \"> </span>年 画 大 部分 是 以 吉 祥 、 喜 庆 、 欢 乐 、 美 好 等 事 物 ， 或 以 典故 、 成 语 作 为 主 题 ，有 情 节 ， 易 于 理解 。 其 取 材 内 容 极 为 广 泛 ， 诸 如 历 史故 事 、 神 话 传 说 、 吸 取 人 。。。 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>p</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tc.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>更多》<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>p</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>margin_bottom_40<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>section_w335 fl margin_right_40<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>header_01<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> 典故<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image_wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images/n3.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>p</span><span class=\"token punctuation\">></span></span>1、五福临门<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>br</span><span class=\"token punctuation\">/></span></span> 2、门神<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>br</span><span class=\"token punctuation\">/></span></span> 3、雄狮<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>br</span><span class=\"token punctuation\">/></span></span> 4、神虎<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>br</span><span class=\"token punctuation\">/></span></span> 5、和合二仙<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>br</span><span class=\"token punctuation\">/></span></span> 6、九九肖寒图<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>p</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dg.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>更多》<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>p</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>section_w335 fl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>header_01<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> 产区 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image_wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images/ds."}
{"url": "https://blog.csdn.net/qinze5857/article/details/134915076", "article_id": 134915076, "username": "qinze5857", "title": "GB/T 39901 ——AEB功能定义及测试方法解读", "body": "<p></p>\n\n<p></p>\n\n<p>一、术语</p>\n\n<p></p>\n\n<p></p>\n\n<p></p>\n\n<p></p>\n\n<p>二、功能定义</p>\n\n<p></p>\n\n<p></p>\n\n<p>三、测试方法</p>\n\n<p></p>\n\n<p></p>\n\n<p></p>\n\n<p></p>\n\n<p></p>\n\n<p></p>\n\n<p></p>\n", "status": 2, "cleanedContent": ""}
{"url": "https://blog.csdn.net/weixin_36643308/article/details/134915503", "article_id": 134915503, "username": "weixin_36643308", "title": "开源好用EasyImages简单图床源码", "body": "<h2 style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/4d6a6930b7134dacb1db44c825290852.jpeg\" /></h2>\n\n<p>源码介绍</p>\n\n<p>开源好用EasyImages简单图床源码分享，虽然它是开源程序，但功能一点也不弱，不仅支持多文件上传、文字/图片水印、支持API和鉴黄、还能自定义代码，最重要的是它不强制使用数据库运行，这就给我们的部署和维护带来极大方便。<br />\n搭建教程</p>\n\n<p>安装要求Nginx1.21，PHP7.4</p>\n\n<p>如果没提示也不要经，在左侧栏中找到软件商店，在应用搜索中搜索PHP和Nginx安装指定版本即可。<br />\n当PHP安装完毕以后，需要我们进行额外的操作。<br />\n我们在软件商店中，找到已经安装好的PHP，选中设置，在设置页面中，在左侧栏中找到安装扩展，安装以下PHP扩展：Fileinfo  iconv   zip  mbstring  openssl</p>\n\n<p>上传源码，解压到根目录，访问站点，按照提示安装</p>\n\n<p>如果拓展中没有显示就是已经安装了。有条件的建议开启OPcache拓展</p>\n", "status": 1, "cleanedContent": "<h2 style=\"text-align:center;\"><img alt=\"\" src=\"\" /></h2> <p>源码介绍</p> <p>开源好用EasyImages简单图床源码分享，虽然它是开源程序，但功能一点也不弱，不仅支持多文件上传、文字/图片水印、支持API和鉴黄、还能自定义代码，最重要的是它不强制使用数据库运行，这就给我们的部署和维护带来极大方便。<br /> 搭建教程</p> <p>安装要求Nginx1.21，PHP7.4</p> <p>如果没提示也不要经，在左侧栏中找到软件商店，在应用搜索中搜索PHP和Nginx安装指定版本即可。<br /> 当PHP安装完毕以后，需要我们进行额外的操作。<br /> 我们在软件商店中，找到已经安装好的PHP，选中设置，在设置页面中，在左侧栏中找到安装扩展，安装以下PHP扩展：Fileinfo iconv zip mbstring openssl</p> <p>上传源码，解压到根目录，访问站点，按照提示安装</p> <p>如果拓展中没有显示就是已经安装了。"}
{"url": "https://blog.csdn.net/m0_60310473/article/details/134915845", "article_id": 134915845, "username": "m0_60310473", "title": "招兵买马了", "body": "<p>有个赛道可以试试，需要电子系，计算机系同学，有兴趣的加个微信聊聊</p>\n\n<p>13501440311</p>\n", "status": 6, "cleanedContent": ""}
{"url": "https://blog.csdn.net/m0_58700648/article/details/134915982", "article_id": 134915982, "username": "m0_58700648", "title": "博客摘录「 第二篇：微服务中的生产者与消费者的关系」2023年12月10日", "body": "<p>（Order Service）</p>\n", "status": 2, "cleanedContent": ""}
{"url": "https://blog.csdn.net/m0_64562382/article/details/134872947", "article_id": 134872947, "username": "m0_64562382", "title": "第5关：求班级平均成绩", "body": "<p id=\"main-toc\"><strong>目录</strong></p>\n\n<p id=\"任务描述-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BB%BB%E5%8A%A1%E6%8F%8F%E8%BF%B0\">任务描述</a></p>\n\n<p id=\"相关知识-toc\" style=\"margin-left:0px;\"><a href=\"#%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86\">相关知识</a></p>\n\n<p id=\"编程要求-toc\" style=\"margin-left:0px;\"><a href=\"#%E7%BC%96%E7%A8%8B%E8%A6%81%E6%B1%82\">编程要求</a></p>\n\n<p id=\"测试说明-toc\" style=\"margin-left:40px;\"><a href=\"#%E6%B5%8B%E8%AF%95%E8%AF%B4%E6%98%8E\">测试说明</a></p>\n\n<hr id=\"hr-toc\" /><p></p>\n\n<h1 id=\"任务描述\">任务描述</h1>\n\n<p>期末考试到了，自动化2201班的C语言老师陈老师想要把班上的考试情况统计一下。陈老师依次输入每个同学的成绩（<code>0~100</code>之间）,当输入成绩在<code>0~100</code>之间时，继续输入下一个成绩，如果输入一个负数或大于<code>100</code>的数，就表明成绩输入完毕，停止输入成绩，计算并输出班级平均分（保留<code>2</code>位小数）。‪‬‪‬‪‬‪‬‪‬‮‬‪‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬</p>\n\n<p>输入输出示例 1.输入时不需要任何提示；‪‬‪‬‪‬‪‬‪‬‮‬‪‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬ 2.如果人数为<code>0 </code>，则输出： “人数为0‪‬‪‬‪‬‪‬‪‬‮‬‪‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬” 3.如果人数大于等于<code>1</code>,则输出平均值，平均分保留两位小数。</p>\n\n<h1 id=\"相关知识\">相关知识</h1>\n\n<p>为了完成本关任务，你需要掌握：1.如何确定循环的截止条件，2.无限循环<code>while</code>的使用。</p>\n\n<h1 id=\"编程要求\">编程要求</h1>\n\n<p>根据提示，在右侧编辑器补充代码，计算并输出班级平均分，结果保留2位小数。</p>\n\n<h2 id=\"测试说明\">测试说明</h2>\n\n<p>平台会对你编写的代码进行测试：</p>\n\n<p>测试输入： <code>60</code> <code>70</code> <code>80</code> <code>-1</code> 预期输出： <code>班级平均成绩:70.00</code></p>\n\n<p>测试输入： <code>-6</code></p>\n\n<p>预期输出： <code>人数为0</code></p>\n\n<hr /><p>开始你的任务吧，祝你成功！</p>\n\n<pre>\n<code class=\"language-python\">\n# 请在此添加代码\n########## Begin ##########\n\ncount = 0\nsum = 0\nn = 0\nwhile n&gt;=0 and n&lt;=100:\nn = int(input())\nif n&lt;0 or n&gt;100:\nbreak\nsum+=n\ncount+=1\nif count==0:\nprint('人数为0')\nelse:\nprint('班级平均成绩:{0:.2f}'.format(sum/count)) \n\n########## End ##########</code></pre>\n\n<p> </p>\n", "status": 1, "cleanedContent": "<p id=\"main-toc\"><strong>目录</strong></p> <p id=\"任务描述-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BB%BB%E5%8A%A1%E6%8F%8F%E8%BF%B0\">任务描述</a></p> <p id=\"相关知识-toc\" style=\"margin-left:0px;\"><a href=\"#%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86\">相关知识</a></p> <p id=\"编程要求-toc\" style=\"margin-left:0px;\"><a href=\"#%E7%BC%96%E7%A8%8B%E8%A6%81%E6%B1%82\">编程要求</a></p> <p id=\"测试说明-toc\" style=\"margin-left:40px;\"><a href=\"#%E6%B5%8B%E8%AF%95%E8%AF%B4%E6%98%8E\">测试说明</a></p> <hr id=\"hr-toc\" /><p></p> <h1 id=\"任务描述\">任务描述</h1> <p>期末考试到了，自动化2201班的C语言老师陈老师想要把班上的考试情况统计一下。陈老师依次输入每个同学的成绩（<code>0~100</code>之间）,当输入成绩在<code>0~100</code>之间时，继续输入下一个成绩，如果输入一个负数或大于<code>100</code>的数，就表明成绩输入完毕，停止输入成绩，计算并输出班级平均分（保留<code>2</code>位小数）。</p> <p>输入输出示例 1.输入时不需要任何提示； 2.如果人数为<code>0 </code>，则输出： “人数为0” 3.如果人数大于等于<code>1</code>,则输出平均值，平均分保留两位小数。</p> <h1 id=\"相关知识\">相关知识</h1> <p>为了完成本关任务，你需要掌握：1.如何确定循环的截止条件，2.无限循环<code>while</code>的使用。</p> <h1 id=\"编程要求\">编程要求</h1> <p>根据提示，在右侧编辑器补充代码，计算并输出班级平均分，结果保留2位小数。</p> <h2 id=\"测试说明\">测试说明</h2> <p>平台会对你编写的代码进行测试：</p> <p>测试输入： <code>60</code> <code>70</code> <code>80</code> <code>-1</code> 预期输出： <code>班级平均成绩:70.00</code></p> <p>测试输入： <code>-6</code></p> <p>预期输出： <code>人数为0</code></p> <hr /><p>开始你的任务吧，祝你成功！</p> <pre> <code class=\"language-python\"> # 请在此添加代码 ########## Begin ########## count = 0 sum = 0 n = 0 while n>=0 and n<=100: n = int(input()) if n<0 or n>100: break sum+=n count+=1 if count==0: print('人数为0') else: print('班级平均成绩:{0:.2f}'."}
{"url": "https://blog.csdn.net/qq_45260619/article/details/134916008", "article_id": 134916008, "username": "qq_45260619", "title": "JVM虚拟机系统性学习-运行时数据区（堆）", "body": "<h2><a id=\"_0\"></a>运行时数据区</h2>\n<p>JVM 由三部分组成：类加载系统、运行时数据区、执行引擎</p>\n<p><img src=\"https://img-blog.csdnimg.cn/direct/e2b825b7dea749d99337a917791dca4a.png\" alt=\"在这里插入图片描述\"></p>\n<p>下边讲一下运行时数据区中的构成</p>\n<p>根据线程的使用情况分为两类：</p>\n<ul>\n<li>线程独享（此区域不需要垃圾回收）\n<ul>\n<li>虚拟机栈、本地方法栈、程序计数器</li>\n</ul>\n</li>\n<li>线程共享（数据存储区域，此区域需要垃圾回收）\n<ul>\n<li>存储类的静态数据和对象数据</li>\n<li>堆和方法区</li>\n</ul>\n</li>\n</ul>\n<h3><a id=\"_21\"></a>堆</h3>\n<p>Java 堆在 JVM 启动时创建内存区域去实现对象、数组与运行时常量的内存分配，它是虚拟机管理最大的，也是垃圾回收的主要内存区域</p>\n<p><img src=\"https://img-blog.csdnimg.cn/direct/1bc238d90a6a4613a98a0470f87f55f0.png\" alt=\"在这里插入图片描述\"></p>\n<p>在 JDK1.8 中，堆由两部分组成：新生代和老年代</p>\n<p>而在 JDK1.9 中，取消了新生代和老年代的物理划分，将堆划分为若干个区域 Region，如下图：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/direct/a8ef99835f76478792270eb68ba3047f.png\" alt=\"在这里插入图片描述\"></p>\n<p>可以通过代码查看堆空间的大小：</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HeapSpaceInitial</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">/**\n使用Runtime.getRuntime()获取当前 （运行时数据区） ， 是单例的。\n*/</span>\n\n<span class=\"token comment\">// 返回Java虚拟机中的堆内存总量</span>\n<span class=\"token keyword\">long</span> initialMemory <span class=\"token operator\">=</span> <span class=\"token class-name\">Runtime</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRuntime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">totalMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 返回Java虚拟机试图使用的最大堆内存量</span>\n<span class=\"token keyword\">long</span> maxMemory <span class=\"token operator\">=</span> <span class=\"token class-name\">Runtime</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRuntime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">maxMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-Xms: \"</span> <span class=\"token operator\">+</span> initialMemory <span class=\"token operator\">+</span> <span class=\"token string\">\"M\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-Xmx: \"</span> <span class=\"token operator\">+</span> maxMemory <span class=\"token operator\">+</span> <span class=\"token string\">\"M\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"系统初始内存大小为: \"</span> <span class=\"token operator\">+</span> initialMemory <span class=\"token operator\">*</span> <span class=\"token number\">64.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"G\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"系统最大内存大小为: \"</span> <span class=\"token operator\">+</span> maxMemory <span class=\"token operator\">*</span> <span class=\"token number\">4.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"G\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n输出：\n-Xms: 243M\n-Xmx: 3609M\n系统初始内存大小为: 15.1875G\n系统最大内存大小为: 14.09765625G\n*/</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>通过命令行查看堆中的参数：</p>\n<pre><code class=\"prism language-bash\">jps <span class=\"token comment\"># 查看运行的进程</span>\njstat <span class=\"token parameter variable\">-gc</span> 进程id <span class=\"token comment\"># 查看该进程的堆中参数</span>\n</code></pre>\n<p>通过 VM options 查看垃圾回收时的信息：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token parameter variable\">-XX:+PrintGCDetails</span>\n</code></pre>\n<p><strong>Java 中新创建的对象如何分配空间呢？</strong></p>\n<ol>\n<li>new 的对象先放 Eden 区（如果是大对象，直接放入老年代）</li>\n<li>当 Eden 区满了之后，程序还需要创建对象，则垃圾回收器会对 Eden 区进行垃圾回收</li>\n<li>在垃圾回收的时候，会将 Eden 区的幸存对象转移到 Survivor From 区</li>\n<li>如果再次触发垃圾回收，此时将 Eden 区的幸存对象转移到 Survivor To 区中，并且将 Survivor From 区中的幸存对象也转移到 Survivor To 区</li>\n<li>如果再次出发垃圾回收，此时将 Eden 区和 Survivor To 区中的幸存对象转移到 Survivor From 区中</li>\n<li>当对象的生存年龄达到 15 时，会被放入老年代</li>\n</ol>\n<p>在幸存对象每次转移的时候，对会将对象的生存年龄 + 1，达到 15 时会放入老年代中</p>\n<p><strong>Java 对象只会分配在堆中吗？</strong></p>\n<p>不是的，如果经过 <code>逃逸分析</code> 后发现，一个对象并没有逃逸出方法的话，就可能被优化为在<code>栈上分配</code>，这是常见的堆外存储技术。</p>\n<p>逃逸分析就是分析对象动态作用域：</p>\n<ul>\n<li>对象在方法中被定义后，对象只在方法内部使用，则认为没有发生逃逸</li>\n<li>对象在方法中被定义后，对象被外部方法所引用，则认为发生逃逸</li>\n</ul>\n\n", "status": 1, "cleanedContent": "<h2><a id=\"_0\"></a>运行时数据区</h2> <p>JVM 由三部分组成：类加载系统、运行时数据区、执行引擎</p> <p><img src=\"\" alt=\"在这里插入图片描述\"></p> <p>下边讲一下运行时数据区中的构成</p> <p>根据线程的使用情况分为两类：</p> <ul> <li>线程独享（此区域不需要垃圾回收） <ul> <li>虚拟机栈、本地方法栈、程序计数器</li> </ul> </li> <li>线程共享（数据存储区域，此区域需要垃圾回收） <ul> <li>存储类的静态数据和对象数据</li> <li>堆和方法区</li> </ul> </li> </ul> <h3><a id=\"_21\"></a>堆</h3> <p>Java 堆在 JVM 启动时创建内存区域去实现对象、数组与运行时常量的内存分配，它是虚拟机管理最大的，也是垃圾回收的主要内存区域</p> <p><img src=\"\" alt=\"在这里插入图片描述\"></p> <p>在 JDK1.8 中，堆由两部分组成：新生代和老年代</p> <p>而在 JDK1.9 中，取消了新生代和老年代的物理划分，将堆划分为若干个区域 Region，如下图：</p> <p><img src=\"\" alt=\"在这里插入图片描述\"></p> <p>可以通过代码查看堆空间的大小：</p> <pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HeapSpaceInitial</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/** 使用Runtime.getRuntime()获取当前 （运行时数据区） ， 是单例的。 */</span> <span class=\"token comment\">// 返回Java虚拟机中的堆内存总量</span> <span class=\"token keyword\">long</span> initialMemory <span class=\"token operator\">=</span> <span class=\"token class-name\">Runtime</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRuntime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">totalMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 返回Java虚拟机试图使用的最大堆内存量</span> <span class=\"token keyword\">long</span> maxMemory <span class=\"token operator\">=</span> <span class=\"token class-name\">Runtime</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRuntime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">maxMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-Xms: \"</span> <span class=\"token operator\">+</span> initialMemory <span class=\"token operator\">+</span> <span class=\"token string\">\"M\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-Xmx: \"</span> <span class=\"token operator\">+</span> maxMemory <span class=\"token operator\">+</span> <span class=\"token string\">\"M\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"系统初始内存大小为: \"</span> <span class=\"token operator\">+</span> initialMemory <span class=\"token operator\">*</span> <span class=\"token number\">64.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"G\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"系统最大内存大小为: \"</span> <span class=\"token operator\">+</span> maxMemory <span class=\"token operator\">*</span> <span class=\"token number\">4.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"G\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/** 输出： -Xms: 243M -Xmx: 3609M 系统初始内存大小为: 15.1875G 系统最大内存大小为: 14.0G */</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> </code></pre> <p>通过命令行查看堆中的参数：</p> <pre><code class=\"prism language-bash\">jps <span class=\"token comment\"># 查看运行的进程</span> jstat <span class=\"token parameter variable\">-gc</span> 进程id <span class=\"token comment\"># 查看该进程的堆中参数</span> </code></pre> <p>通过 VM options 查看垃圾回收时的信息：</p> <pre><code class=\"prism language-bash\"><span class=\"token parameter variable\">-XX:+PrintGCDetails</span> </code></pre> <p><strong>Java 中新创建的对象如何分配空间呢？</strong></p> <ol> <li>new 的对象先放 Eden 区（如果是大对象，直接放入老年代）</li> <li>当 Eden 区满了之后，程序还需要创建对象，则垃圾回收器会对 Eden 区进行垃圾回收</li> <li>在垃圾回收的时候，会将 Eden 区的幸存对象转移到 Survivor From 区</li> <li>如果再次触发垃圾回收，此时将 Eden 区的幸存对象转移到 Survivor To 区中，并且将 Survivor From 区中的幸存对象也转移到 Survivor To 区</li> <li>如果再次出发垃圾回收，此时将 Eden 区和 Survivor To 区中的幸存对象转移到 Survivor From 区中</li> <li>当对象的生存年龄达到 15 时，会被放入老年代</li> </ol> <p>在幸存对象每次转移的时候，对会将对象的生存年龄 + 1，达到 15 时会放入老年代中</p> <p><strong>Java 对象只会分配在堆中吗？</strong></p> <p>不是的，如果经过 <code>逃逸分析</code> 后发现，一个对象并没有逃逸出方法的话，就可能被优化为在<code>栈上分配</code>，这是常见的堆外存储技术。"}
{"url": "https://blog.csdn.net/m1_46321522/article/details/134916079", "article_id": 134916079, "username": "m1_46321522", "title": "静态网页设计：基于html企业官网项目的设计与实现【艺术官网】", "body": "<p><font color=\"#b44846\" size=\"4px\"> ❤</font> <a href=\"https://blog.csdn.net/m0_46321522?type=blog\">【作者主页——�获取更多优质源码】</a></p>\n<p><font color=\"#b44846\" size=\"4px\"> ❤</font> <a href=\"https://blog.csdn.net/m0_46321522?type=blog\">【学习资料/简历模板/面试资料/ 网站设计与制作】</a></p>\n<p><font color=\"#b44846\" size=\"4px\"> ❤</font> <a href=\"#weibu\">【web前端期末大作业——��毕设项目精品实战案例】</a></p>\n<hr>\n# 一、�‍�网站题目\n� 公司官网网站 、企业官网、酒店官网、等网站的设计与制作。\n<hr>\n<h1><a id=\"_12\"></a>二、✍️网站描述</h1>\n<p>�️ 网页中包含：Div+CSS、鼠标滑过特效、Table、导航栏效果、banner、表单、二级三级页面等，视频音频元素，同时设计了logo（源文件），基本期末作业所需的知识点全覆盖。</p>\n<p><strong>� 一套优质的�网页设计应该包含 (具体可根据个人要求而定)</strong></p>\n<ol>\n<li>页面分为页头、菜单导航栏（最好可下拉）、中间内容板块、页脚四大部分。</li>\n<li>所有页面相互超链接，可到三级页面，有5-10个页面组成。</li>\n<li>页面样式风格统一布局显示正常，不错乱，使用Div+Css技术。</li>\n<li>菜单美观、醒目，二级菜单可正常弹出与跳转。</li>\n<li>要有JS特效，如定时切换和手动切换图片轮播。</li>\n<li>页面中有多媒体元素，如gif、视频、音乐，表单技术的使用。</li>\n<li>页面清爽、美观、大方，不雷同。 。</li>\n<li>不仅要能够把用户要求的内容呈现出来，还要满足布局良好、界面美观、配色优雅、表现形式多样等要求。</li>\n</ol>\n<hr>\n<h1><a id=\"_27\"></a>三、�网站介绍</h1>\n<p><strong>�网站布局方面</strong>：计划采用目前主流的、能兼容各大主流浏览器、显示效果稳定的浮动网页布局结构。</p>\n<p><strong>�网站程序方面</strong>：计划采用最新的网页编程语言HTML5+CSS3+JS程序语言完成网站的功能设计。并确保网站代码兼容目前市面上所有的主流浏览器，已达到打开后就能即时看到网站的效果。</p>\n<p><strong>�网站素材方面</strong>：计划收集各大平台好看的图片素材，并精挑细选适合网页风格的图片，然后使用PS做出适合网页尺寸的图片。</p>\n<p><strong>�网站文件方面</strong>：网站系统文件种类包含：html网页结构文件、css网页样式文件、js网页特效文件、images网页图片文件；</p>\n<p><strong>�网页编辑方面</strong>：网页作品代码简单，可使用任意HTML编辑软件（如：<code>Dreamweaver、HBuilder、Vscode 、Sublime 、Webstorm、Text 、Notepad++</code> 等任意html编辑软件进行运行及修改编辑等操作）。<br>\n其中：<br>\n（1）�html文件包含：其中index.html是首页、其他html为二级页面；<br>\n（2）� css文件包含：css全部页面样式,文字滚动, 图片放大等；<br>\n（3）� js文件包含：js实现动态轮播特效, 表单提交, 点击事件等等（个别网页中运用到js代码）。</p>\n<hr>\n<h1><a id=\"_43\"></a>四、�网站演示</h1>\n<p><img src=\"https://img-blog.csdnimg.cn/6fb4e546b5d143c2b6c410e83335b8ad.png#pic_center\" alt=\"在这里插入图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/40f2cc5b588b4e66a3a3a59e6037dc2f.png#pic_center\" alt=\"在这里插入图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/e20d5c22ca9641c8b71c33a523c9035f.png#pic_center\" alt=\"在这里插入图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/d0d88d2f92994244b77d8368bf0655ed.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<hr>\n<h1><a id=\"__55\"></a>五、⚙️ 网站代码</h1>\n<h2><a id=\"HTML_56\"></a>�HTML结构代码</h2>\n<pre><code class=\"prism language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>Document<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css/index.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css/common.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!-- 头部 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>header</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!-- 头部导航条 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">&gt;</span></span>公告：您好，欢迎登陆广西品思文化发展有限公司<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">&gt;</span></span>欢迎<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>person.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Yuki0816<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>进入商城<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>register.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>免费注册<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/line.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>line<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>settled.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>艺术家入驻<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>shopcar<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>shopping.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/shopcar.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n购物车(0)\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>share<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n分享到:\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/sina.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/qq.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/wechat.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!-- 背景图 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top_bg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>search<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/header-bg.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>one<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!-- 头部搜索框 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>search_input<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请输入您要搜索的内容<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!-- 搜索按钮 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/search.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n搜索\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!-- 品思文化logo --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>logo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/logo.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>header</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!-- 导航条 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nav</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>active<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>首页<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>spacial.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>专场<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mall.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>商城<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>artist.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>艺术家<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!-- 轮播图片 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/banner1.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nav</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!-- 今日推选 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>today<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>txt<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span>RECOMMENDS<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>—— 今日推荐 ——<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>好作品无需多说 你会由心的感觉它的诉说<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!-- 图片 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>today_left<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/1-1.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>—— 何瑾思 | 00<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">&gt;</span></span>.00<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span> ——<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/1-3.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>—— 何瑾思 | 00<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">&gt;</span></span>.00<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span> ——<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>today_right<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/1-2.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</spa", "status": 1, "cleanedContent": "<p><font color=\"#b\" size=\"4px\"> </font> <a href=\"\">【作者主页——�获取更多优质源码】</a></p> <p><font color=\"#b\" size=\"4px\"> </font> <a href=\"\">【学习资料/简历模板/面试资料/ 网站设计与制作】</a></p> <p><font color=\"#b\" size=\"4px\"> </font> <a href=\"#weibu\">【web前端期末大作业——��毕设项目精品实战案例】</a></p> <hr> # 一、��网站题目 � 公司官网网站 、企业官网、酒店官网、等网站的设计与制作。 <hr> <h1><a id=\"_12\"></a>二、网站描述</h1> <p>� 网页中包含：Div+CSS、鼠标滑过特效、Table、导航栏效果、banner、表单、二级三级页面等，视频音频元素，同时设计了logo（源文件），基本期末作业所需的知识点全覆盖。</p> <p><strong>� 一套优质的�网页设计应该包含 (具体可根据个人要求而定)</strong></p> <ol> <li>页面分为页头、菜单导航栏（最好可下拉）、中间内容板块、页脚四大部分。</li> <li>所有页面相互超链接，可到三级页面，有5-10个页面组成。</li> <li>页面样式风格统一布局显示正常，不错乱，使用Div+Css技术。</li> <li>菜单美观、醒目，二级菜单可正常弹出与跳转。</li> <li>要有JS特效，如定时切换和手动切换图片轮播。</li> <li>页面中有多媒体元素，如gif、视频、音乐，表单技术的使用。</li> <li>页面清爽、美观、大方，不雷同。 。</li> <li>不仅要能够把用户要求的内容呈现出来，还要满足布局良好、界面美观、配色优雅、表现形式多样等要求。</li> </ol> <hr> <h1><a id=\"_27\"></a>三、�网站介绍</h1> <p><strong>�网站布局方面</strong>：计划采用目前主流的、能兼容各大主流浏览器、显示效果稳定的浮动网页布局结构。</p> <p><strong>�网站程序方面</strong>：计划采用最新的网页编程语言HTML5+CSS3+JS程序语言完成网站的功能设计。并确保网站代码兼容目前市面上所有的主流浏览器，已达到打开后就能即时看到网站的效果。</p> <p><strong>�网站素材方面</strong>：计划收集各大平台好看的图片素材，并精挑细选适合网页风格的图片，然后使用PS做出适合网页尺寸的图片。</p> <p><strong>�网站文件方面</strong>：网站系统文件种类包含：html网页结构文件、css网页样式文件、js网页特效文件、images网页图片文件；</p> <p><strong>�网页编辑方面</strong>：网页作品代码简单，可使用任意HTML编辑软件（如：<code>Dreamweaver、HBuilder、Vscode 、Sublime 、Webstorm、Text 、Notepad++</code> 等任意html编辑软件进行运行及修改编辑等操作）。<br> 其中：<br> （1）�html文件包含：其中index.html是首页、其他html为二级页面；<br> （2）� css文件包含：css全部页面样式,文字滚动, 图片放大等；<br> （3）� js文件包含：js实现动态轮播特效, 表单提交, 点击事件等等（个别网页中运用到js代码）。</p> <hr> <h1><a id=\"_43\"></a>四、�网站演示</h1> <p><img src=\"\" alt=\"在这里插入图片描述\"><br> <img src=\"\" alt=\"在这里插入图片描述\"><br> <img src=\"\" alt=\"在这里插入图片描述\"><br> <img src=\"\" alt=\"在这里插入图片描述\"></p> <hr> <h1><a id=\"__55\"></a>五、 网站代码</h1> <h2><a id=\"HTML_56\"></a>�HTML结构代码</h2> <pre><code class=\"prism language-html\"><span class=\"token doctype\"><span class=\"token punctuation\"><!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>head</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>title</span><span class=\"token punctuation\">></span></span>Document<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>title</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css/index.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css/common.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>head</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>body</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\"><!-- 头部 --></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>header</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\"><!-- 头部导航条 --></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>p</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>span</span><span class=\"token punctuation\">></span></span>公告：您好，欢迎登陆广西品思文化发展有限公司<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>span</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>span</span><span class=\"token punctuation\">></span></span>欢迎<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>person.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Yuki0816<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>a</span><span class=\"token punctuation\">></span></span>进入商城<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>span</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>register.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>免费注册<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>a</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/line.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>line<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>settled.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>艺术家入驻<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>a</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>a</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>shopcar<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>shopping.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/shopcar.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> 购物车(0) <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>a</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>share<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> 分享到: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/sina.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/qq.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/wechat.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>span</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>p</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\"><!-- 背景图 --></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top_bg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>search<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/header-bg.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>one<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token comment\"><!-- 头部搜索框 --></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>search_input<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请输入您要搜索的内容<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token comment\"><!-- 搜索按钮 --></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/search.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> 搜索 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\"><!-- 品思文化logo --></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>logo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/logo.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>header</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\"><!-- 导航条 --></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>nav</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>ul</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>active<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>首页<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>spacial.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>专场<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mall.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>商城<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>artist.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>艺术家<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>ul</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\"><!-- 轮播图片 --></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/banner1.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>nav</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\"><!-- 今日推选 --></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>today<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>txt<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>h2</span><span class=\"token punctuation\">></span></span>RECOMMENDS<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>h2</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>p</span><span class=\"token punctuation\">></span></span>—— 今日推荐 ——<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>p</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>p</span><span class=\"token punctuation\">></span></span>好作品无需多说 你会由心的感觉它的诉说<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>p</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\"><!-- 图片 --></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>today_left<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/1-1.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>p</span><span class=\"token punctuation\">></span></span>—— 何瑾思 | 00<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>span</span><span class=\"token punctuation\">></span></span>.00<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>span</span><span class=\"token punctuation\">></span></span> ——<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>p</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/1-3.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>p</span><span class=\"token punctuation\">></span></span>—— 何瑾思 | 00<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>span</span><span class=\"token punctuation\">></span></span>.00<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>span</span><span class=\"token punctuation\">></span></span> ——<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>p</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>today_right<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/1-2."}
{"url": "https://blog.csdn.net/m0_65484028/article/details/134916214", "article_id": 134916214, "username": "m0_65484028", "title": "html简单网页代码——web网页设计期末课程大作业 HTML+CSS+JS网页设计期末课程大作业 web前端开发技术 web课程设计 网页规划与设计", "body": "<blockquote>\n<p>HTML实例网页代码, 本实例适合于初学HTML的同学。该实例里面有设置了css的样式设置，有div的样式格局，这个实例比较全面，有助于同学的学习,本文将介绍如何通过从头开始设计个人网站并将其转换为代码的过程来实践设计。</p>\n</blockquote>\n<hr>\n<p><font color=\"#b44846\" size=\"5px\"> <strong>⚽精彩专栏推荐������</strong> </font><br>\n<font color=\"#b44846\" size=\"4px\"> ❤</font> <a href=\"https://blog.csdn.net/m0_46321522?type=blog\">【作者主页——�获取更多优质源码】</a></p>\n<p><font color=\"#b44846\" size=\"4px\"> ❤</font> <a href=\"https://blog.csdn.net/m0_46321522?type=blog\">【学习资料/简历模板/面试资料/ 网站设计与制作】</a></p>\n<p><font color=\"#b44846\" size=\"4px\"> ❤</font> <a href=\"#weibu\">【web前端期末大作业——��毕设项目精品实战案例】</a></p>\n<hr>\n<hr>\n<p></p><div class=\"toc\"><h3>文章目录�</h3><ul><li><a href=\"#_16\">一、网页介绍�</a></li><li><a href=\"#_26\">一、网页效果�</a></li><li><a href=\"#_35\">二、代码展示�</a></li><ul><li><a href=\"#1HTML__37\">1.HTML代码结构 �</a></li><li><a href=\"#2CSS__129\">2.CSS样式代码 �</a></li></ul><li><a href=\"#_243\">三、个人总结�</a></li><li><a href=\"#_257\">四、更多干货�</a></li></ul></div><p></p>\n<h1><a id=\"_16\"></a>一、网页介绍�</h1>\n<p>1 <strong>网页简介</strong>：此作品为学生个人主页网页设计题材，HTML+CSS 布局制作,web前端期末大作业,大学生网页设计作业源码，这是一个不错的网页制作，画面精明，代码为简单学生水平, 非常适合初学者学习使用。</p>\n<p>2.<strong>网页编辑</strong>：网页作品代码简单，可使用任意HTML编辑软件（如：<strong>Dreamweaver、HBuilder、Vscode 、Sublime 、Webstorm、Text 、Notepad++</strong> 等任意html编辑软件进行运行及修改编辑等操作）。</p>\n<p>3.<strong>知识应用</strong>：技术方面主要应用了网页知识中的: Div+CSS、鼠标滑过特效、Table、导航栏效果、Banner、表单、二级三级页面等，视频、 音频元素 、Flash，同时设计了Logo（源文件）所需的知识点。</p>\n<hr>\n<h1><a id=\"_26\"></a>一、网页效果�</h1>\n<p><img src=\"https://img-blog.csdnimg.cn/bffe86cb52f54243bef94d6efac29995.png#pic_center\" alt=\"在这里插入图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/5e098fb0d48249c88cd7de9c9d81c70a.png#pic_center\" alt=\"在这里插入图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/476998d85ecc4834a1cad5161a317e6f.png#pic_center\" alt=\"在这里插入图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/c38ec653b1584b8d87b870df70fe1e44.png#pic_center\" alt=\"在这里插入图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/98228ba48e2c4c43915d3b8408d9b66d.png#pic_center\" alt=\"在这里插入图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/f846b3316d2944f383760234901a4ec5.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<hr>\n<h1><a id=\"_35\"></a>二、代码展示�</h1>\n<hr>\n<h2><a id=\"1HTML__37\"></a>1.HTML代码结构 �</h2>\n<p>代码如下（示例）：以下仅展示部分代码供参考~</p>\n<pre><code class=\"prism language-html\">\n<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>X-UA-Compatible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ie=edge<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>海贼王主题网站<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>shortcut icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.ylcp.shop/files/files/1649600488898/favicon.ico<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/x-icon<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css/loading.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css/style.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>header</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nav</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>logo<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>One Piece<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>nav<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>恶魔果实<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>强者世界<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>明暗大战<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>成员介绍<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>经典战役<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>联系我们<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nav</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>header</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>main</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fruit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span>恶魔果实<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fruit-box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/16.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>泡泡果实<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">&gt;</span></span>泡泡果实<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h5</span><span class=\"token punctuation\">&gt;</span></span>卡莉法 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h5</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/21.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>烧烧果实<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">&gt;</span></span>烧烧果实<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h5</span><span class=\"token punctuation\">&gt;</span></span>艾斯/萨博<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h5</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/31.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>暗暗果实<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">&gt;</span></span>暗暗果实<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h5</span><span class=\"token punctuation\">&gt;</span></span>黑胡子<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h5</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/41.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>手术果实<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">&gt;</span></span>手术果实<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h5</span><span class=\"token punctuation\">&gt;</span></span>特拉法尔加·罗<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h5</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/51.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>牛牛果实<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">&gt;</span></span>牛牛果实-长颈鹿形态<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h5</span><span class=\"token punctuation\">&gt;</span></span>卡库 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h5</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/61.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>线线果实<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">&gt;</span></span>线线果实<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h5</span><span class=\"token punctuation\">&gt;</span></span>多弗朗明哥<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h5</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/7.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>橡胶果实<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">&gt;</span></span>橡胶果实<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h5</span><span class=\"token punctuation\">&gt;</span></span>路飞<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h5</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/8.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>四分五裂果实<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">&gt;</span></span>四分五裂果实<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h5</span><span class=\"token punctuation\">&gt;</span></span>小丑巴基<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h5</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>section</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>main</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n\n</code></pre>\n<hr>\n<h2><a id=\"2CSS__129\"></a>2.CSS样式代码 �</h2>\n<pre><code class=\"prism language-css\">\n\n<span class=\"token selector\">.loading</span><span class=\"token punctuation\">{</span>\n<span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> bisque<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.dot-box</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n<span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n<span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n<span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translateX</span><span class=\"token punctuation\">(</span>-50%<span class=\"token punctuation\">)</span> <span class=\"token function\">translateY</span><span class=\"token punctuation\">(</span>-50%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.dot</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 24px<span class=\"token punctuation\">;</span>\n<span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 24px<span class=\"token punctuation\">;</span>\n<span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #3ac<span class=\"token punctuation\">;</span>\n<span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span>\n<span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> slide 1s infinite<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.dot:nth-child(1)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">animation-delay</span><span class=\"token punctuation\">:</span> 0.1s<span class=\"token punctuation\">;</span>\n<span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #32cc8c<span class=\"token punctuation\">;</span>\n<span class=\"token punctuati", "status": 1, "cleanedContent": "<blockquote> <p>HTML实例网页代码, 本实例适合于初学HTML的同学。该实例里面有设置了css的样式设置，有div的样式格局，这个实例比较全面，有助于同学的学习,本文将介绍如何通过从头开始设计个人网站并将其转换为代码的过程来实践设计。</p> </blockquote> <hr> <p><font color=\"#b\" size=\"5px\"> <strong>精彩专栏推荐������</strong> </font><br> <font color=\"#b\" size=\"4px\"> </font> <a href=\"\">【作者主页——�获取更多优质源码】</a></p> <p><font color=\"#b\" size=\"4px\"> </font> <a href=\"\">【学习资料/简历模板/面试资料/ 网站设计与制作】</a></p> <p><font color=\"#b\" size=\"4px\"> </font> <a href=\"#weibu\">【web前端期末大作业——��毕设项目精品实战案例】</a></p> <hr> <hr> <p></p><div class=\"toc\"><h3>文章目录�</h3><ul><li><a href=\"#_16\">一、网页介绍�</a></li><li><a href=\"#_26\">一、网页效果�</a></li><li><a href=\"#_35\">二、代码展示�</a></li><ul><li><a href=\"#1HTML__37\">1.HTML代码结构 �</a></li><li><a href=\"#2CSS__129\">2.CSS样式代码 �</a></li></ul><li><a href=\"#_243\">三、个人总结�</a></li><li><a href=\"#_257\">四、更多干货�</a></li></ul></div><p></p> <h1><a id=\"_16\"></a>一、网页介绍�</h1> <p>1 <strong>网页简介</strong>：此作品为学生个人主页网页设计题材，HTML+CSS 布局制作,web前端期末大作业,大学生网页设计作业源码，这是一个不错的网页制作，画面精明，代码为简单学生水平, 非常适合初学者学习使用。</p> <p>2.<strong>网页编辑</strong>：网页作品代码简单，可使用任意HTML编辑软件（如：<strong>Dreamweaver、HBuilder、Vscode 、Sublime 、Webstorm、Text 、Notepad++</strong> 等任意html编辑软件进行运行及修改编辑等操作）。</p> <p>3.<strong>知识应用</strong>：技术方面主要应用了网页知识中的: Div+CSS、鼠标滑过特效、Table、导航栏效果、Banner、表单、二级三级页面等，视频、 音频元素 、Flash，同时设计了Logo（源文件）所需的知识点。</p> <hr> <h1><a id=\"_26\"></a>一、网页效果�</h1> <p><img src=\"\" alt=\"在这里插入图片描述\"><br> <img src=\"\" alt=\"在这里插入图片描述\"><br> <img src=\"\" alt=\"在这里插入图片描述\"><br> <img src=\"\" alt=\"在这里插入图片描述\"><br> <img src=\"\" alt=\"在这里插入图片描述\"><br> <img src=\"\" alt=\"在这里插入图片描述\"></p> <hr> <h1><a id=\"_35\"></a>二、代码展示�</h1> <hr> <h2><a id=\"1HTML__37\"></a>1.HTML代码结构 �</h2> <p>代码如下（示例）：以下仅展示部分代码供参考~</p> <pre><code class=\"prism language-html\"> <span class=\"token doctype\"><span class=\"token punctuation\"><!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>head</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>X-UA-Compatible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ie=edge<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>title</span><span class=\"token punctuation\">></span></span>海贼王主题网站<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>title</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>shortcut icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/x-icon<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css/loading.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css/style.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>head</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>body</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>header</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>nav</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>a</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>logo<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>One Piece<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>a</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>ul</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>nav<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>恶魔果实<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>强者世界<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>明暗大战<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>成员介绍<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>经典战役<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>联系我们<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>ul</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>nav</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>header</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>main</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>section</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fruit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>h2</span><span class=\"token punctuation\">></span></span>恶魔果实<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>h2</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>ul</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fruit-box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/16.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>泡泡果实<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>h3</span><span class=\"token punctuation\">></span></span>泡泡果实<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>h3</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>h5</span><span class=\"token punctuation\">></span></span>卡莉法 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>h5</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/21.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>烧烧果实<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>h3</span><span class=\"token punctuation\">></span></span>烧烧果实<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>h3</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>h5</span><span class=\"token punctuation\">></span></span>艾斯/萨博<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>h5</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/31.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>暗暗果实<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>h3</span><span class=\"token punctuation\">></span></span>暗暗果实<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>h3</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>h5</span><span class=\"token punctuation\">></span></span>黑胡子<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>h5</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/41.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>手术果实<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>h3</span><span class=\"token punctuation\">></span></span>手术果实<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>h3</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>h5</span><span class=\"token punctuation\">></span></span>特拉法尔加·罗<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>h5</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/51.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>牛牛果实<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>h3</span><span class=\"token punctuation\">></span></span>牛牛果实-长颈鹿形态<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>h3</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>h5</span><span class=\"token punctuation\">></span></span>卡库 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>h5</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/61.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>线线果实<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>h3</span><span class=\"token punctuation\">></span></span>线线果实<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>h3</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>h5</span><span class=\"token punctuation\">></span></span>多弗朗明哥<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>h5</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/7.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>橡胶果实<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>h3</span><span class=\"token punctuation\">></span></span>橡胶果实<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>h3</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>h5</span><span class=\"token punctuation\">></span></span>路飞<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>h5</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>picture/8.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>四分五裂果实<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>h3</span><span class=\"token punctuation\">></span></span>四分五裂果实<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>h3</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"><</span>h5</span><span class=\"token punctuation\">></span></span>小丑巴基<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>h5</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>ul</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>section</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>main</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>body</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\"></</span>html</span><span class=\"token punctuation\">></span></span> </code></pre> <hr> <h2><a id=\"2CSS__129\"></a>2.CSS样式代码 �</h2> <pre><code class=\"prism language-css\"> <span class=\"token selector\">.loading</span><span class=\"token punctuation\">{</span> <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span> <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span> <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> bisque<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token selector\">.dot-box</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span> <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span> <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span> <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translateX</span><span class=\"token punctuation\">(</span>-50%<span class=\"token punctuation\">)</span> <span class=\"token function\">translateY</span><span class=\"token punctuation\">(</span>-50%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token selector\">.dot</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 24px<span class=\"token punctuation\">;</span> <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 24px<span class=\"token punctuation\">;</span> <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #3ac<span class=\"token punctuation\">;</span> <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span> <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span> <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> slide 1s infinite<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token selector\">.dot:nth-child(1)</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">animation-delay</span><span class=\"token punctuation\">:</span> 0.1s<span class=\"token punctuation\">;</span> <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #32cc8c<span class=\"token punctuation\">;"}
{"url": "https://blog.csdn.net/jnrjian/article/details/134917389", "article_id": 134917389, "username": "jnrjian", "title": "【无标题】", "body": "<p> CREATE DATABASE LINK getpdb_link CONNECT TO remote_user_for_clone identified by remote_user_for_clone using '(DESCRIPTION =<br />\n    (ADDRESS = (PROTOCOL = TCP)(HOST = rac-scan)(PORT = 1521))<br />\n    (CONNECT_DATA =<br />\n      (SERVER = DEDICATED)<br />\n      (SERVICE_NAME = pdb.cj.com)<br />\n    )<br />\n  )'; </p>\n\n<p>create pluggable database pdb1 from pdb@getpdb_link file_name_convert=('pdb','pdb1');<br />\nCREATE PLUGGABLE DATABASE  pdb1 from pdb@getpdb_link path_prefix = '+DATA/CDB';<br />\nCREATE PLUGGABLE DATABASE  pdb1 from pdb@getpdb_link path_prefix = '+DATA1';  --不生效</p>\n\n<p><br />\nIf source PDB datafiles are created as Oracle Managed File then target datafiles need to be created as Oracle Managed File for same CDB <br />\nSOLUTION<br />\nDo not specify any FILE_NAME_CONVERT while creating clone copy from source local PDB.</p>\n\n<p>CREATE PLUGGABLE DATABASE &lt;Target PDB&gt; from &lt;Source PDB&gt;;</p>\n\n<p>---OR<br />\nSQL&gt; alter system set db_create_file_dest='+data1';<br />\nSQL&gt; create pluggable database pdb2 from pdb1;</p>\n\n<p><br />\ncreate pluggable database pdb2 from pdb1   path_prefix = '+DATA1' file_name_convert=('DATA','DATA1'); </p>\n\n<p>---If CDB is RAC, make sure you test the dblink in all instances.</p>\n\n<p><br />\nselect *From dba_data_files;<br />\nSELECT NAME, PDB FROM V$SERVICES  ORDER BY PDB, NAME;<br />\nselect NAME,OPEN_MODE,RESTRICTED from gv$containers;<br />\nselect Name, Open_Mode, Inst_ID from gv$PDBs;<br />\nselect * from database_properties where property_name='LOCAL_UNDO_ENABLED';       <br />\nselect PROPERTY_VALUE  from database_properties where PROPERTY_NAME='LOCAL_UNDO_ENABLED';       <br />\n        </p>\n\n<p>srvctl add service -d cdb -s pdb1_srv -pdb pdb1 -r rac1,rac2,rac3</p>\n\n<p><br />\nselect *from PDB_PLUG_IN_VIOLATIONS</p>\n\n<p>alter pluggable database &amp;pdb1 close immediate instances=all;<br />\nalter pluggable database &amp;pdb1 open restricted;<br />\nalter session set container=&amp;pdb1;<br />\nalter pluggable database rename global_name to pdb1<br />\nalter pluggable database close immediate; <br />\nalter pluggable database open  instances=all;</p>\n\n<p><br />\nTo avoid potential TDE-related issues when renaming a PDB that already has a master key set, do the following before you rename the PDB:</p>\n\n<p>Verify that a key is activated in the PDB to be renamed.  To do this, connect to the PDB and query V$ENCRYPTION_KEYS.</p>\n\n<p>If no rows are returned, and this PDB is known to contain data encrypted with TDE, check if the keystore is OPEN in the PDB by querying GV$ENCRYPTION_WALLET and V$ENCRYPTION_WALLET.  <br />\nIf the PDB is using a PASSWORD keystore, and the keystore is CLOSED, open it using ADMINISTER KEY MANAGEMENT SET KEYSTORE OPEN IDENTIFIED BY &lt;password&gt;.<br />\nThen, re-query all three views.<br />\nIf an activated key still does not show in V$ENCRYPTION_KEYS, and/or if the keystore status is OPEN_NO_MASTER_KEY (and you are using the correct keystore), then the keystore doesnt have a key for this particular PDB.  If this PDB is known to contain previously-encrypted data, there is an issue with your configuration; contact Oracle Support. </p>\n\n<p>Make sure there are no rows in PDB_PLUG_IN_VIOLATIONS that point to TDE.  Such violations would typically involve the word \"wallet\" or \"key\".</p>\n\n<p>select * from cdb_service$ where name='pdbname.service.name';</p>\n\n<p>exec DBMS_SERVICE.DELETE_SERVICE('pdbname.service.name');</p>\n\n<p>select name, network_name from v$services;</p>\n\n<p><br />\nexec DBMS_SERVICE.DELETE_SERVICE('pdb1');</p>\n\n<p>rows will be truncated</p>\n\n<p>rows will be truncated</p>\n\n<p>rows will be truncated</p>\n\n<p>rows will be truncated</p>\n\n<p><br />\nno rows selected</p>\n\n<p>SYS@dwhiuft1&gt; exit<br />\nDisconnected from Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production<br />\nVersion 19.20.0.0.0<br />\n[oracle@n1pdblinu0001 ~]$ srvctl start service  -d dwhiuft -role<br />\nPRCD-1133 : failed to start services  for database dwhiuft<br />\nPRCR-1095 : Failed to start resources using filter (((ROLE == PRIMARY) OR ((ROLE co  PRIMARY ) OR ((ROLE co  PRIMARY) OR (ROLE co PRIMARY )))) AND (((NAME starts ora.dwhiuft.) AND (NAME ends .svc)) AND (TYPE == ora.service.type)))<br />\nCRS-2800: Cannot start resource 'ora.dwhiuft.db' as it is already in the INTERMEDIATE state on server 'n1pdblinu0001'<br />\nCRS-2528: Unable to place an instance of 'ora.dwhiuft.dwhpd26uft_srv.svc' as all possible servers are occupied by the resource<br />\nCRS-2800: Cannot start resource 'ora.dwhiuft.db' as it is already in the INTERMEDIATE state on server 'n1pdblinu0001'<br />\nCRS-2528: Unable to place an instance of 'ora.dwhiuft.dwhpd07uft_srv.svc' as all possible servers are occupied by the resource<br />\nCRS-2800: Cannot start resource 'ora.dwhiuft.db' as it is already in the INTERMEDIATE state on server 'n1pdblinu0001'<br />\nCRS-2528: Unable to place an instance of 'ora.dwhiuft.dwhpd23uft_srv.svc' as all possible servers are occupied by the resource<br />\nCRS-2800: Cannot start resource 'ora.dwhiuft.db' as it is already in the INTERMEDIATE state on server 'n1pdblinu0001'<br />\nCRS-2528: Unable to place an instance of 'ora.dwhiuft.dwhpd10uft_srv.svc' as all possible servers are occupied by the resource<br />\nCRS-2800: Cannot start resource 'ora.dwhiuft.db' as it is already in the INTERMEDIATE state on server 'n1pdblinu0001'<br />\nCRS-2528: Unable to place an instance of 'ora.dwhiuft.dwhpd12uft_srv.svc' as all possible servers are occupied by the resource<br />\nCRS-2800: Cannot start resource 'ora.dwhiuft.db' as it is already in the INTERMEDIATE state on server 'n1pdblinu0001'<br />\nCRS-2528: Unable to place an instance of 'ora.dwhiuft.dwhiuft_srv.svc' as all possible servers are occupied by the resource<br />\nCRS-2800: Cannot start resource 'ora.dwhiuft.db' as it is already in the INTERMEDIATE state on server 'n1pdblinu0001'<br />\nCRS-2528: Unable to place an instance of 'ora.dwhiuft.dwhpd15uft_srv.svc' as all possible servers are occupied by the resource<br />\nCRS-2800: Cannot start resource 'ora.dwhiuft.db' as it is already in the INTERMEDIATE state on server 'n1pdblinu0001'<br />\nCRS-2528: Unable to place an instance of 'ora.dwhiuft.dwhpd16uft_srv.svc' as all possible servers are occupied by the resource<br />\nCRS-2800: Cannot start resource 'ora.dwhiuft.db' as it is already in the INTERMEDIATE state on server 'n1pdblinu0001'<br />\nCRS-2528: Unable to place an instance of 'ora.dwhiuft.dwhpd27uft_srv.svc' as all possible servers are occupied by the resource<br />\nCRS-2800: Cannot start resource 'ora.dwhiuft.db' as it is already in the INTERMEDIATE state on server 'n1pdblinu0001'<br />\nCRS-2528: Unable to place an instance of 'ora.dwhiuft.dwhpd03uft_srv.svc' as all possible servers are occupied by the resource<br />\nCRS-2800: Cannot start resource 'ora.dwhiuft.db' as it is already in the INTERMEDIATE state on server 'n1pdblinu0001'<br />\nCRS-2528: Unable to place an instance of 'ora.dwhiuft.dwhpd13uft_srv.svc' as all possible servers are occupied by the resource<br />\n[oracle@n1pdblinu0001 ~]$ crsctl</p>\n\n<p>with latest_run as<br />\n(<br />\nSELECT all_runs.CON_ID,<br />\nall_runs.OWNER,<br />\nall_runs.JOB_NAME,<br />\nall_runs.STATUS<br />\nFROM CDB_SCHEDULER_JOB_RUN_DETAILS all_runs,<br />\n(SELECT sub.CON_ID,<br />\nsub.OWNER,<br />\nsub.JOB_NAME,<br />\nMAX(sub.ACTUAL_START_DATE) AS START_DATE<br />\nFROM CDB_SCHEDULER_JOB_RUN_DETAILS sub<br />\nWHERE sub.job_name in (SELECT job_name FROM CDB_SCHEDULER_JOB_RUN_DETAILS where status = 'FAILED')<br />\nGROUP BY sub.CON_ID,OWNER,JOB_NAME) latest_runs<br />\nWHERE all_runs.status = 'FAILED'<br />\nAND latest_runs.CON_ID =all_runs.CON_ID<br />\nAND latest_runs.OWNER=all_runs.OWNER<br />\nAND latest_runs.JOB_NAME=all_runs.JOB_NAME<br />\nAND all_runs.ACTUAL_START_DATE= latest_runs.START_DATE<br />\n)</p>\n\n<p>SELECT pdb_name, NVL(SUM(broken),0), NVL(SUM(failed),0)<br />\nFROM (SELECT c.name pdb_name,<br />\nDECODE(broken, 'N', 0, 1) broken,<br />\nDECODE(NVL(failures,0), 0, 0, 1) failed<br />\nFROM cdb_jobs j, v$containers c<br />\nWHERE j.con_id  = TO_NUMBER(c.con_id)<br />\nUNION ALL<br />\nSELECT c.name pdb_name,<br />\nDECODE(failed_details.STATE, 'BROKEN', 1, 0) broken,<br />\nDECODE(failed_details.STATUS , 'FAILED', DECODE(failed_details.STATE,'BROKEN',0,'DISABLED',0,1), 0) failed<br />\nFROM  v$containers c,<br />\n(SELECT all_jobs.CON_ID,<br />\nall_jobs.OWNER,<br />\nall_jobs.JOB_NAME,<br />\nlatest_run.STATUS,<br />\nall_jobs.STATE<br />\nFROM  CDB_SCHEDULER_JOBS all_jobs,latest_run<br />\nWHERE  latest_run.CON_ID=all_jobs.CON_ID<br />\nAND  latest_run.OWNER=all_jobs.OWNER<br />\nAND  latest_run.JOB_NAME=all_jobs.JOB_NAME<br />\n) failed_details<br />\nWHERE failed_details.con_id  = TO_NUMBER(c.con_id)<br />\n)<br />\nGROUP BY pdb_name</p>\n\n<p></p>\n\n<p></p>\n\n<p></p>\n\n<p>backup as compressed backupset keep until time 'sysdate+1' format '+data1/cdb/backup/%U' tag 'my_bkup' (database ROOT) (pluggable database 'pdb$seed', pdb);</p>\n\n<p>expdp system/oracle@pdb full=Y dumpfile=pdb.dmp directory=dmp transportable=always logfile=&lt;LOGFILE&gt;</p>\n\n<p>EXEC DVSYS.DBMS_MACADM.AUTHORIZE_DATAPUMP_USER('SYSTEM'); </p>\n\n<p><br />\n  <br />\n  </p>\n", "status": 2, "cleanedContent": "<p> CREATE DATABASE LINK getpdb_link CONNECT TO remote_user_for_clone identified by remote_user_for_clone using '(DESCRIPTION =<br /> (ADDRESS = (PROTOCOL = TCP)(HOST = rac-scan)(PORT = 1521))<br /> (CONNECT_DATA =<br /> (SERVER = DEDICATED)<br /> (SERVICE_NAME = )<br /> )<br /> )'; </p> <p>create pluggable database pdb1 from pdb@getpdb_link file_name_convert=('pdb','pdb1');<br /> CREATE PLUGGABLE DATABASE pdb1 from pdb@getpdb_link path_prefix = '+DATA/CDB';<br /> CREATE PLUGGABLE DATABASE pdb1 from pdb@getpdb_link path_prefix = '+DATA1'; --不生效</p> <p><br /> If source PDB datafiles are created as Oracle Managed File then target datafiles need to be created as Oracle Managed File for same CDB <br /> SOLUTION<br /> Do not specify any FILE_NAME_CONVERT while creating clone copy from source local PDB.</p> <p>CREATE PLUGGABLE DATABASE <Target PDB> from <Source PDB>;</p> <p>---OR<br /> SQL> alter system set db_create_file_dest='+data1';<br /> SQL> create pluggable database pdb2 from pdb1;</p> <p><br /> create pluggable database pdb2 from pdb1 path_prefix = '+DATA1' file_name_convert=('DATA','DATA1'); </p> <p>---If CDB is RAC, make sure you test the dblink in all instances.</p> <p><br /> select *From dba_data_files;<br /> SELECT NAME, PDB FROM V$SERVICES ORDER BY PDB, NAME;<br /> select NAME,OPEN_MODE,RESTRICTED from gv$containers;<br /> select Name, Open_Mode, Inst_ID from gv$PDBs;<br /> select * from database_properties where property_name='LOCAL_UNDO_ENABLED'; <br /> select PROPERTY_VALUE from database_properties where PROPERTY_NAME='LOCAL_UNDO_ENABLED'; <br /> </p> <p>srvctl add service -d cdb -s pdb1_srv -pdb pdb1 -r rac1,rac2,rac3</p> <p><br /> select *from PDB_PLUG_IN_VIOLATIONS</p> <p>alter pluggable database &pdb1 close immediate instances=all;<br /> alter pluggable database &pdb1 open restricted;<br /> alter session set container=&pdb1;<br /> alter pluggable database rename global_name to pdb1<br /> alter pluggable database close immediate; <br /> alter pluggable database open instances=all;</p> <p><br /> To avoid potential TDE-related issues when renaming a PDB that already has a master key set, do the following before you rename the PDB:</p> <p>Verify that a key is activated in the PDB to be renamed. To do this, connect to the PDB and query V$ENCRYPTION_KEYS.</p> <p>If no rows are returned, and this PDB is known to contain data encrypted with TDE, check if the keystore is OPEN in the PDB by querying GV$ENCRYPTION_WALLET and V$ENCRYPTION_WALLET. <br /> If the PDB is using a PASSWORD keystore, and the keystore is CLOSED, open it using ADMINISTER KEY MANAGEMENT SET KEYSTORE OPEN IDENTIFIED BY <password>.<br /> Then, re-query all three views.<br /> If an activated key still does not show in V$ENCRYPTION_KEYS, and/or if the keystore status is OPEN_NO_MASTER_KEY (and you are using the correct keystore), then the keystore doesnt have a key for this particular PDB. If this PDB is known to contain previously-encrypted data, there is an issue with your configuration; contact Oracle Support. </p> <p>Make sure there are no rows in PDB_PLUG_IN_VIOLATIONS that point to TDE. Such violations would typically involve the word \"wallet\" or \"key\".</p> <p>select * from cdb_service$ where name='';</p> <p>exec DBMS_SERVICE.DELETE_SERVICE('');</p> <p>select name, network_name from v$services;</p> <p><br /> exec DBMS_SERVICE.DELETE_SERVICE('pdb1');</p> <p>rows will be truncated</p> <p>rows will be truncated</p> <p>rows will be truncated</p> <p>rows will be truncated</p> <p><br /> no rows selected</p> <p>SYS@dwhiuft1> exit<br /> Disconnected from Oracle Database 19c Enterprise Edition Release .0 - Production<br /> Version .0<br /> [oracle@n1pdblinu0001 ~]$ srvctl start service -d dwhiuft -role<br /> PRCD-1133 : failed to start services for database dwhiuft<br /> PRCR-1095 : Failed to start resources using filter (((ROLE == PRIMARY) OR ((ROLE co PRIMARY ) OR ((ROLE co PRIMARY) OR (ROLE co PRIMARY )))) AND (((NAME starts ora.dwhiuft.) AND (NAME ends .svc)) AND (TYPE == ora.service.type)))<br /> CRS-2800: Cannot start resource 'ora.dwhiuft.db' as it is already in the INTERMEDIATE state on server 'n1pdblinu0001'<br /> CRS-2528: Unable to place an instance of 'ora.dwhiuft.dwhpd26uft_srv.svc' as all possible servers are occupied by the resource<br /> CRS-2800: Cannot start resource 'ora.dwhiuft.db' as it is already in the INTERMEDIATE state on server 'n1pdblinu0001'<br /> CRS-2528: Unable to place an instance of 'ora.dwhiuft.dwhpd07uft_srv.svc' as all possible servers are occupied by the resource<br /> CRS-2800: Cannot start resource 'ora.dwhiuft.db' as it is already in the INTERMEDIATE state on server 'n1pdblinu0001'<br /> CRS-2528: Unable to place an instance of 'ora.dwhiuft.dwhpd23uft_srv.svc' as all possible servers are occupied by the resource<br /> CRS-2800: Cannot start resource 'ora.dwhiuft.db' as it is already in the INTERMEDIATE state on server 'n1pdblinu0001'<br /> CRS-2528: Unable to place an instance of 'ora.dwhiuft.dwhpd10uft_srv.svc' as all possible servers are occupied by the resource<br /> CRS-2800: Cannot start resource 'ora.dwhiuft.db' as it is already in the INTERMEDIATE state on server 'n1pdblinu0001'<br /> CRS-2528: Unable to place an instance of 'ora.dwhiuft.dwhpd12uft_srv.svc' as all possible servers are occupied by the resource<br /> CRS-2800: Cannot start resource 'ora.dwhiuft.db' as it is already in the INTERMEDIATE state on server 'n1pdblinu0001'<br /> CRS-2528: Unable to place an instance of 'ora.dwhiuft.dwhiuft_srv.svc' as all possible servers are occupied by the resource<br /> CRS-2800: Cannot start resource 'ora.dwhiuft.db' as it is already in the INTERMEDIATE state on server 'n1pdblinu0001'<br /> CRS-2528: Unable to place an instance of 'ora.dwhiuft.dwhpd15uft_srv.svc' as all possible servers are occupied by the resource<br /> CRS-2800: Cannot start resource 'ora.dwhiuft.db' as it is already in the INTERMEDIATE state on server 'n1pdblinu0001'<br /> CRS-2528: Unable to place an instance of 'ora.dwhiuft.dwhpd16uft_srv.svc' as all possible servers are occupied by the resource<br /> CRS-2800: Cannot start resource 'ora.dwhiuft.db' as it is already in the INTERMEDIATE state on server 'n1pdblinu0001'<br /> CRS-2528: Unable to place an instance of 'ora.dwhiuft.dwhpd27uft_srv.svc' as all possible servers are occupied by the resource<br /> CRS-2800: Cannot start resource 'ora.dwhiuft.db' as it is already in the INTERMEDIATE state on server 'n1pdblinu0001'<br /> CRS-2528: Unable to place an instance of 'ora.dwhiuft.dwhpd03uft_srv.svc' as all possible servers are occupied by the resource<br /> CRS-2800: Cannot start resource 'ora.dwhiuft.db' as it is already in the INTERMEDIATE state on server 'n1pdblinu0001'<br /> CRS-2528: Unable to place an instance of 'ora.dwhiuft.dwhpd13uft_srv.svc' as all possible servers are occupied by the resource<br /> [oracle@n1pdblinu0001 ~]$ crsctl</p> <p>with latest_run as<br /> (<br /> SELECT all_runs.CON_ID,<br /> all_runs.OWNER,<br /> all_runs.JOB_NAME,<br /> all_runs.STATUS<br /> FROM CDB_SCHEDULER_JOB_RUN_DETAILS all_runs,<br /> (SELECT sub.CON_ID,<br /> sub.OWNER,<br /> sub.JOB_NAME,<br /> MAX(sub.ACTUAL_START_DATE) AS START_DATE<br /> FROM CDB_SCHEDULER_JOB_RUN_DETAILS sub<br /> WHERE sub.job_name in (SELECT job_name FROM CDB_SCHEDULER_JOB_RUN_DETAILS where status = 'FAILED')<br /> GROUP BY sub.CON_ID,OWNER,JOB_NAME) latest_runs<br /> WHERE all_runs.status = 'FAILED'<br /> AND latest_runs.CON_ID =all_runs.CON_ID<br /> AND latest_runs.OWNER=all_runs.OWNER<br /> AND latest_runs.JOB_NAME=all_runs.JOB_NAME<br /> AND all_runs.ACTUAL_START_DATE= latest_runs.START_DATE<br /> )</p> <p>SELECT pdb_name, NVL(SUM(broken),0), NVL(SUM(failed),0)<br /> FROM (SELECT pdb_name,<br /> DECODE(broken, 'N', 0, 1) broken,<br /> DECODE(NVL(failures,0), 0, 0, 1) failed<br /> FROM cdb_jobs j, v$containers c<br /> WHERE j.con_id = TO_NUMBER(c.con_id)<br /> UNION ALL<br /> SELECT pdb_name,<br /> DECODE(failed_details.STATE, 'BROKEN', 1, 0) broken,<br /> DECODE(failed_details.STATUS , 'FAILED', DECODE(failed_details.STATE,'BROKEN',0,'DISABLED',0,1), 0) failed<br /> FROM v$containers c,<br /> (SELECT all_jobs.CON_ID,<br /> all_jobs.OWNER,<br /> all_jobs.JOB_NAME,<br /> latest_run.STATUS,<br /> all_jobs.STATE<br /> FROM CDB_SCHEDULER_JOBS all_jobs,latest_run<br /> WHERE latest_run.CON_ID=all_jobs.CON_ID<br /> AND latest_run.OWNER=all_jobs.OWNER<br /> AND latest_run.JOB_NAME=all_jobs.JOB_NAME<br /> ) failed_details<br /> WHERE failed_details.con_id = TO_NUMBER(c.con_id)<br /> )<br /> GROUP BY pdb_name</p> <p></p> <p></p> <p></p> <p>backup as compressed backupset keep until time 'sysdate+1' format '+data1/cdb/backup/%U' tag 'my_bkup' (database ROOT) (pluggable database 'pdb$seed', pdb);</p> <p>expdp system/oracle@pdb full=Y dumpfile=pdb.dmp directory=dmp transportable=always logfile=<LOGFILE></p> <p>EXEC DVSYS.DBMS_MACADM.AUTHORIZE_DATAPUMP_USER('SYSTEM');"}
{"url": "https://blog.csdn.net/hnjzsyjyj/article/details/134920069", "article_id": 134920069, "username": "hnjzsyjyj", "title": "AcWing 3425：小白鼠排队 ← 北京大学考研机试题", "body": "<p><span style=\"color:#0d0016;\"><strong>【题目来源】</strong></span><br /><a data-link-desc=\"高质量的算法题库\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release2.3.6/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=N7T8\" data-link-title=\"https://www.acwing.com/problem/content/3428/\" href=\"https://www.acwing.com/problem/content/3428/\" title=\"https://www.acwing.com/problem/content/3428/\">https://www.acwing.com/problem/content/3428/</a><br /><br /><span style=\"color:#0d0016;\"><strong>【题目描述】</strong><br />\nN 只小白鼠，每只鼠头上戴着一顶有颜色的帽子。<br />\n现在称出每只白鼠的重量，要求按照白鼠重量从大到小的顺序输出它们头上帽子的颜色。<br />\n帽子的颜色用 red，blue 等字符串来表示。<br />\n不同的小白鼠可以戴相同颜色的帽子。<br />\n白鼠的重量用整数表示。<br /><br /><strong>【输入格式】</strong><br />\n第一行为一个整数 N，表示小白鼠的数目。<br />\n下面有 N 行，每行是一只白鼠的信息。第一个为不大于 100 的正整数，表示白鼠的重量；第二个为字符串，表示白鼠的帽子颜色，字符串长度不超过 10 个字符。<br />\n注意：白鼠的重量各不相同。<br /><br /><strong>【输出格式】</strong><br />\n按照白鼠的重量</span><span style=\"color:#fe2c24;\">从大到小</span><span style=\"color:#0d0016;\">的顺序输出白鼠的帽子颜色。<br /><br /><strong>【数据范围】</strong><br />\n1≤N≤100<br /><br /><strong>【输入样例】</strong><br />\n3<br />\n30 red<br />\n50 blue<br />\n40 green<br /><br /><strong>【输出样例】</strong><br />\nblue<br />\ngreen<br />\nred<br /><br /><strong>【算法分析】</strong><br />\n一、本题的一种实现方法需要按</span><span style=\"color:#fe2c24;\">结构体</span><span style=\"color:#0d0016;\">某一字段对结构体数组进行</span><span style=\"color:#fe2c24;\">排序</span><span style=\"color:#0d0016;\">，详见：</span><br /><a data-link-desc=\"文章浏览阅读856次。【问题描述】在具体应用中，有时需要按某一字段对结构体数组各元素进行排序输出。如何解决？例如，现有一结构体Person，它由name，age，height等三个字段构成。目前已经构建了结构体数组，现在要求按字段height升序排序（或降序排序）的顺序输出结构体数组各元素。若某些元素的字段height相等，则需对这些元素的字段name升序排序（或降序排序），但不能影响这些元素在整体输出中的相对位置。【解决方法】需要自定义函数up()、down()并调用。详细内容如下：自定义的结构体Person的内_结构体数组排序\" data-link-icon=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" data-link-title=\"https://blog.csdn.net/hnjzsyjyj/article/details/120184972\" href=\"https://blog.csdn.net/hnjzsyjyj/article/details/120184972\" title=\"https://blog.csdn.net/hnjzsyjyj/article/details/120184972\">https://blog.csdn.net/hnjzsyjyj/article/details/120184972</a><br /><span style=\"color:#0d0016;\">例如，若自定义的结构体 Person 的内容如下：</span></p>\n\n<pre>\n<code class=\"language-cpp\">struct Person {\nstring name;\nint age;\nfloat height;\n};</code></pre>\n\n<p><span style=\"color:#0d0016;\">则可自定义的递增函数 up()、递减函数 down() 的内容如下：</span></p>\n\n<pre>\n<code class=\"language-cpp\">int up(Person u,Person v) { //ascending by height\nif(u.height==v.height) return u.name&lt;v.name; //If equal,ascending by name\nreturn u.height&lt;v.height;\n}\n\nint down(Person u,Person v) { //descending by height\nif(u.height==v.height) return u.name&gt;v.name; //If equal,descending by name\nreturn u.height&gt;v.height;\n}</code></pre>\n\n<p><span style=\"color:#0d0016;\">若 p 为结构体数组，则在主函数中调用递增函数 up()、递减函数 down() 的代码如下：</span></p>\n\n<pre>\n<code class=\"language-cpp\">sort(p,p+n,up); //Sort the structured array p by ascending field height\n\nsort(p,p+n,down); //Sort the structured array p by descending field height</code></pre>\n\n<p><span style=\"color:#0d0016;\">二、本题的另一种实现方法是利用STL pair，然后调用 sort() 函数对 STL pair 进行排序。需要注意的是，</span><span style=\"color:#fe2c24;\">sort() 函数默认是按照 pair 的 first 域进行升序排序</span><span style=\"color:#0d0016;\">。如果 first 域相同，则按照 second 域进行升序排序。<br />\n若 p 为 pair 数组，则对其 first 域默认进行升序排序的代码如下：</span></p>\n\n<pre>\n<code class=\"language-cpp\">sort(p,p+n); //By default, ascending by the first field of array p\n</code></pre>\n\n<p><br /><span style=\"color:#0d0016;\"><strong>【算法代码一：结构体排序】</strong></span></p>\n\n<pre>\n<code class=\"language-cpp\">#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int maxn=105;\n\nstruct node {\nint w;\nstring color;\n} a[maxn];\n\nbool down(node a,node b){\nreturn a.w&gt;b.w; //descending by weight\n}\n\nint main(){\nint n;\ncin&gt;&gt;n;\nfor(int i=1;i&lt;=n;i++){\ncin&gt;&gt;a[i].w&gt;&gt;a[i].color;\n}\n\nsort(a+1,a+1+n,down);\nfor(int i=1;i&lt;=n;i++){\ncout&lt;&lt;a[i].color&lt;&lt;endl;\n}\n}\n\n/*\nin:\n3\n30 red\n50 blue\n40 green\n\nout:\nblue\ngreen\nred\n*/\n</code></pre>\n\n<p><br /><span style=\"color:#0d0016;\"><strong>【算法代码二：STL pair】</strong></span></p>\n\n<pre>\n<code class=\"language-cpp\">#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int maxn=105;\npair&lt;int,string&gt; q[maxn];\n\nint main() {\nint n;\ncin&gt;&gt;n;\nfor(int i=0; i&lt;n; i++) {\ncin&gt;&gt;q[i].first&gt;&gt;q[i].second;\n}\n\nsort(q,q+n); //By default, ascending by the first field\nfor(int i=n-1; i&gt;=0; i--) {\ncout&lt;&lt;q[i].second&lt;&lt;endl;\n}\n\nreturn 0;\n}\n\n/*\nin:\n3\n30 red\n50 blue\n40 green\n\nout:\nblue\ngreen\nred\n*/</code></pre>\n\n<p><br /><br /><br /><br /><span style=\"color:#0d0016;\"><strong>【参考文献】</strong></span><br /><a data-link-desc=\"文章浏览阅读856次。【问题描述】在具体应用中，有时需要按某一字段对结构体数组各元素进行排序输出。如何解决？例如，现有一结构体Person，它由name，age，height等三个字段构成。目前已经构建了结构体数组，现在要求按字段height升序排序（或降序排序）的顺序输出结构体数组各元素。若某些元素的字段height相等，则需对这些元素的字段name升序排序（或降序排序），但不能影响这些元素在整体输出中的相对位置。【解决方法】需要自定义函数up()、down()并调用。详细内容如下：自定义的结构体Person的内_结构体数组排序\" data-link-icon=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" data-link-title=\"https://blog.csdn.net/hnjzsyjyj/article/details/120184972\" href=\"https://blog.csdn.net/hnjzsyjyj/article/details/120184972\" title=\"https://blog.csdn.net/hnjzsyjyj/article/details/120184972\">https://blog.csdn.net/hnjzsyjyj/article/details/120184972</a><br /><a data-link-desc=\"文章浏览阅读3k次，点赞4次，收藏20次。vector pair sort_vector&gt;排序\" data-link-icon=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" data-link-title=\"https://blog.csdn.net/qq_27538633/article/details/126441458\" href=\"https://blog.csdn.net/qq_27538633/article/details/126441458\" title=\"https://blog.csdn.net/qq_27538633/article/details/126441458\">https://blog.csdn.net/qq_27538633/article/details/126441458</a><br /><br /><br /><br /><br /><br />\n </p>\n", "status": 1, "cleanedContent": "<p><span style=\"color:#0d0016;\"><strong>【题目来源】</strong></span><br /><a data-link-desc=\"高质量的算法题库\" data-link-icon=\"\" data-link-title=\"\" href=\"\" title=\"\"></a><br /><br /><span style=\"color:#0d0016;\"><strong>【题目描述】</strong><br /> N 只小白鼠，每只鼠头上戴着一顶有颜色的帽子。<br /> 现在称出每只白鼠的重量，要求按照白鼠重量从大到小的顺序输出它们头上帽子的颜色。<br /> 帽子的颜色用 red，blue 等字符串来表示。<br /> 不同的小白鼠可以戴相同颜色的帽子。<br /> 白鼠的重量用整数表示。<br /><br /><strong>【输入格式】</strong><br /> 第一行为一个整数 N，表示小白鼠的数目。<br /> 下面有 N 行，每行是一只白鼠的信息。第一个为不大于 100 的正整数，表示白鼠的重量；第二个为字符串，表示白鼠的帽子颜色，字符串长度不超过 10 个字符。<br /> 注意：白鼠的重量各不相同。<br /><br /><strong>【输出格式】</strong><br /> 按照白鼠的重量</span><span style=\"color:#fe2c24;\">从大到小</span><span style=\"color:#0d0016;\">的顺序输出白鼠的帽子颜色。<br /><br /><strong>【数据范围】</strong><br /> 1≤N≤100<br /><br /><strong>【输入样例】</strong><br /> 3<br /> 30 red<br /> 50 blue<br /> 40 green<br /><br /><strong>【输出样例】</strong><br /> blue<br /> green<br /> red<br /><br /><strong>【算法分析】</strong><br /> 一、本题的一种实现方法需要按</span><span style=\"color:#fe2c24;\">结构体</span><span style=\"color:#0d0016;\">某一字段对结构体数组进行</span><span style=\"color:#fe2c24;\">排序</span><span style=\"color:#0d0016;\">，详见：</span><br /><a data-link-desc=\"文章浏览阅读856次。【问题描述】在具体应用中，有时需要按某一字段对结构体数组各元素进行排序输出。如何解决？例如，现有一结构体Person，它由name，age，height等三个字段构成。目前已经构建了结构体数组，现在要求按字段height升序排序（或降序排序）的顺序输出结构体数组各元素。若某些元素的字段height相等，则需对这些元素的字段name升序排序（或降序排序），但不能影响这些元素在整体输出中的相对位置。【解决方法】需要自定义函数up()、down()并调用。详细内容如下：自定义的结构体Person的内_结构体数组排序\" data-link-icon=\"\" data-link-title=\"\" href=\"\" title=\"\"></a><br /><span style=\"color:#0d0016;\">例如，若自定义的结构体 Person 的内容如下：</span></p> <pre> <code class=\"language-cpp\">struct Person { string name; int age; float height; };</code></pre> <p><span style=\"color:#0d0016;\">则可自定义的递增函数 up()、递减函数 down() 的内容如下：</span></p> <pre> <code class=\"language-cpp\">int up(Person u,Person v) { //ascending by height if(u.height==v.height) return <v.name; //If equal,ascending by name return u.height<v.height; } int down(Person u,Person v) { //descending by height if(u.height==v.height) return >v.name; //If equal,descending by name return u.height>v.height; }</code></pre> <p><span style=\"color:#0d0016;\">若 p 为结构体数组，则在主函数中调用递增函数 up()、递减函数 down() 的代码如下：</span></p> <pre> <code class=\"language-cpp\">sort(p,p+n,up); //Sort the structured array p by ascending field height sort(p,p+n,down); //Sort the structured array p by descending field height</code></pre> <p><span style=\"color:#0d0016;\">二、本题的另一种实现方法是利用STL pair，然后调用 sort() 函数对 STL pair 进行排序。需要注意的是，</span><span style=\"color:#fe2c24;\">sort() 函数默认是按照 pair 的 first 域进行升序排序</span><span style=\"color:#0d0016;\">。如果 first 域相同，则按照 second 域进行升序排序。<br /> 若 p 为 pair 数组，则对其 first 域默认进行升序排序的代码如下：</span></p> <pre> <code class=\"language-cpp\">sort(p,p+n); //By default, ascending by the first field of array p </code></pre> <p><br /><span style=\"color:#0d0016;\"><strong>【算法代码一：结构体排序】</strong></span></p> <pre> <code class=\"language-cpp\">#include <bits/stdc++.h> using namespace std; const int maxn=105; struct node { int w; string color; } a[maxn]; bool down(node a,node b){ return a.w>b.w; //descending by weight } int main(){ int n; cin>>n; for(int i=1;i<=n;i++){ cin>>a[i].w>>a[i].color; } sort(a+1,a+1+n,down); for(int i=1;i<=n;i++){ cout<<a[i].color<<endl; } } /* in: 3 30 red 50 blue 40 green out: blue green red */ </code></pre> <p><br /><span style=\"color:#0d0016;\"><strong>【算法代码二：STL pair】</strong></span></p> <pre> <code class=\"language-cpp\">#include <bits/stdc++.h> using namespace std; const int maxn=105; pair<int,string> q[maxn]; int main() { int n; cin>>n; for(int i=0; i<n; i++) { cin>>q[i].first>>q[i].second; } sort(q,q+n); //By default, ascending by the first field for(int i=n-1; i>=0; i--) { cout<<q[i].second<<endl; } return 0; } /* in: 3 30 red 50 blue 40 green out: blue green red */</code></pre> <p><br /><br /><br /><br /><span style=\"color:#0d0016;\"><strong>【参考文献】</strong></span><br /><a data-link-desc=\"文章浏览阅读856次。【问题描述】在具体应用中，有时需要按某一字段对结构体数组各元素进行排序输出。如何解决？例如，现有一结构体Person，它由name，age，height等三个字段构成。目前已经构建了结构体数组，现在要求按字段height升序排序（或降序排序）的顺序输出结构体数组各元素。若某些元素的字段height相等，则需对这些元素的字段name升序排序（或降序排序），但不能影响这些元素在整体输出中的相对位置。【解决方法】需要自定义函数up()、down()并调用。详细内容如下：自定义的结构体Person的内_结构体数组排序\" data-link-icon=\"\" data-link-title=\"\" href=\"\" title=\"\"></a><br /><a data-link-desc=\"文章浏览阅读3k次，点赞4次，收藏20次。"}
{"url": "https://blog.csdn.net/2301_81793510/article/details/134917487", "article_id": 134917487, "username": "2301_81793510", "title": "Lipowerline4.xx，机载雷达点云，三维树障分析软件以及航线规划。", "body": "<p>(1)数据导入，<img src=\"https://img-blog.csdnimg.cn/89fd65e7bf0241888cf2bd83a6740363.jpg\" alt=\"89fd65e7bf0241888cf2bd83a6740363.jpg\" />在Lipowerline4.xx软件中点击左上角的“添加数据”，选择大疆智图生成的.las文件后点击“打开”，设置投影坐标系，点云数据将添加到工程。</p>\n\n<p>(2)电力线模块参数设置数据导入后，将自动弹出电力线模块参数设置窗口，用户可针对工作目录、点云坐标系、类别和监测采纳数、检测线路电压等级进行设置。在类别和检测参数界面，可查看各个地物对应的类别，以及净空检测和交叉跨越分析的参数，检测参数可调整。</p>\n\n<p style=\"text-align:center;\"><img src=\"https://img-blog.csdnimg.cn/7a76739f47d447f5805232f0cdf7af14.png\" alt=\"7a76739f47d447f5805232f0cdf7af14.png\" /></p>\n\n<p>(3）点云分类操作首先进行杆塔位置标记，可通过人工标记或导入杆塔文件标记。标记完杆塔后，需要进行点云切档分类处理。LiPowerline支持点云自动分类，分离电力线、地线、上交跨线、下交跨线、绝缘子、引流线、建筑物、地面点和噪点。用户也可通过手动分类的形式进行点云分类调整和修改。</p>\n\n<p>(4) 树障分析每个档规划完成后可以点击检测出树障及交跨报告。</p>\n\n<p style=\"text-align:center;\"><img src=\"https://img-blog.csdnimg.cn/b5170a427c5a4c7189afb96d7e1ac8bc.png\" alt=\"b5170a427c5a4c7189afb96d7e1ac8bc.png\" /></p>\n\n<p> </p>\n\n<p> </p>\n\n<p> </p>\n\n<p> </p>\n", "status": 1, "cleanedContent": "<p>(1)数据导入，<img src=\"\" alt=\"89fd65e7bf0cf2bd83a.jpg\" />在Lipowerline4.xx软件中点击左上角的“添加数据”，选择大疆智图生成的.las文件后点击“打开”，设置投影坐标系，点云数据将添加到工程。</p> <p>(2)电力线模块参数设置数据导入后，将自动弹出电力线模块参数设置窗口，用户可针对工作目录、点云坐标系、类别和监测采纳数、检测线路电压等级进行设置。在类别和检测参数界面，可查看各个地物对应的类别，以及净空检测和交叉跨越分析的参数，检测参数可调整。</p> <p style=\"text-align:center;\"><img src=\"\" alt=\"7af47d447ff0cdf7af14.png\" /></p> <p>(3）点云分类操作首先进行杆塔位置标记，可通过人工标记或导入杆塔文件标记。标记完杆塔后，需要进行点云切档分类处理。LiPowerline支持点云自动分类，分离电力线、地线、上交跨线、下交跨线、绝缘子、引流线、建筑物、地面点和噪点。用户也可通过手动分类的形式进行点云分类调整和修改。</p> <p>(4) 树障分析每个档规划完成后可以点击检测出树障及交跨报告。</p> <p style=\"text-align:center;\"><img src=\"\" alt=\"b5170a427c5a4c7189afb96d7e1ac8bc."}
{"url": "https://blog.csdn.net/xhl1666/article/details/134918867", "article_id": 134918867, "username": "xhl1666", "title": "作业", "body": "<p>/*#include&lt;iostream&gt;<br />\nusing namespace std<br />\nint main(){<br />\nint A[8]={3,41,52,26,38,57,9,49};<br />\nfor(int j=1;j&lt;8;j++){<br />\n    int key=A[j];<br />\n    int i=j-1;<br />\n    while((i&gt;=0)&amp;&amp;(A[i]&gt;key)){<br />\n        A[i+1]=A[i];<br />\n        i--;<br />\n        }<br />\n    A[i+1]=key;<br />\n    }<br />\nfor(int i=0;i&lt;8;i++){<br />\n    cout&lt;&lt;A[i]&lt;&lt;\" \";    <br />\n    }<br />\n    cout&lt;&lt;endl;<br />\n    system(\"pause\");<br />\n}*/<br />\n//#pragma once   <br />\n#include &lt;iostream&gt;<br />\n//#include\"test\\test.h\" <br />\nusing namespace std;<br />\n#include &lt;time.h&gt;<br />\n#include&lt;assert.h&gt;<br />\n#include&lt;stack&gt;<br />\n#define M 1000 /* 执行次数 */<br />\n#define N 500 /* 数组大小 */<br />\n <br />\nvoid Menu();//菜单函数<br />\nvoid BubbleSort(int *a, size_t n);//1，冒泡排序<br />\nvoid InsertSort(int *a, size_t n);//2,插入排序<br />\nvoid SheelSort(int *a, size_t n);//3,希尔排序<br />\nvoid SelectSort(int *a, size_t n);//4,选择排序<br />\nvoid QuickSort(int *a, size_t left, size_t right);//5，快速排序算法<br />\nvoid HeapSort(int *a, size_t n);//6，堆排序<br />\nvoid MergeSort(int* a, size_t n);//7,归并排序<br />\n/*void CountSort(int *a, size_t n);//8,计数排序<br />\nvoid LSDSort(int *a, size_t n);//9，基数排序*/<br />\n <br />\n <br />\nvoid Menu()<br />\n{<br />\n    cout &lt;&lt; \"**********************************************\\n\";<br />\n    cout &lt;&lt; \"*****************1，冒泡排序******************\\n\";<br />\n    cout &lt;&lt; \"*****************2，插入排序******************\\n\";<br />\n    cout &lt;&lt; \"*****************3，希尔排序******************\\n\";<br />\n    cout &lt;&lt; \"*****************4，选择排序******************\\n\";<br />\n    cout &lt;&lt; \"***************5，快速排序算法****************\\n\";<br />\n    cout &lt;&lt; \"*****************6，堆排序********************\\n\";<br />\n    cout &lt;&lt; \"*****************7，归并排序******************\\n\";<br />\n    cout &lt;&lt; \"*****************8，计数排序******************\\n\";<br />\n    cout &lt;&lt; \"*****************9，基数排序******************\\n\";<br />\n    cout &lt;&lt; \"*******************0，退出********************\\n\";<br />\n    cout &lt;&lt; \"**********************************************\\n\";<br />\n    cout &lt;&lt; \"请选择一种排序的算法： \" &lt;&lt; endl;<br />\n}<br />\n//1，冒泡排序<br />\nvoid BubbleSort(int *a, size_t n)<br />\n{<br />\n    int i, j;<br />\n    int tmp;<br />\n    for (i = 1; i &lt; n; i++)<br />\n    {<br />\n        for (j = n-1; j &gt;= i; j--)<br />\n        {<br />\n            if (a[j + 1] &lt; a[j])<br />\n            {<br />\n                tmp = a[j + 1];<br />\n                a[j + 1] = a[j];<br />\n                a[j] = tmp;<br />\n            }<br />\n        }<br />\n    }<br />\n}<br />\n <br />\n//2,插入排序<br />\nvoid InsertSort(int *a, size_t n)<br />\n{<br />\n    int i;<br />\n    int j;<br />\n    for (i = 2; i &lt;= n; i++)<br />\n    {<br />\n        a[0] = a[i];<br />\n        j = i - 1;<br />\n        while (a[0] &lt; a[j])<br />\n        {<br />\n            a[j + 1] = a[j];<br />\n            j--;<br />\n        }<br />\n        a[j + 1] = a[0];<br />\n    }<br />\n}<br />\n <br />\n//3,希尔排序<br />\nvoid SheelSort(int *a, size_t n)<br />\n{<br />\n    assert(a);<br />\n    int gub = n / 2;//先定义增量为n/2<br />\n    while (gub &gt; 0)<br />\n    {<br />\n        for (size_t i = gub; i &lt; n; ++i)//从第gub个数据处开始进行交换<br />\n        {<br />\n            int tmp = a[i];<br />\n            int end = i - gub;<br />\n            while (end &gt;= 0 &amp;&amp; tmp &lt; a[end])<br />\n            {<br />\n                a[end + gub] = a[end];<br />\n                end = end - gub;<br />\n            }<br />\n            a[end + gub] = tmp;<br />\n        }<br />\n        gub /= 2;<br />\n    }<br />\n}<br />\n <br />\n//4,选择排序<br />\nvoid SelectSort(int *a, size_t n)<br />\n{<br />\n    assert(a);<br />\n    int left = 0;<br />\n    int right = n - 1;<br />\n    while (left &lt; right)<br />\n    {<br />\n        size_t MinIndex = left;<br />\n        size_t MaxIndex = right;<br />\n        for (size_t i = left; i &lt;= right; ++i)<br />\n        {<br />\n            if (a[i] &lt; a[MinIndex])<br />\n            {<br />\n                MinIndex = i;<br />\n            }<br />\n            if (a[i] &gt; a[MaxIndex])<br />\n            {<br />\n                MaxIndex = i;<br />\n            }<br />\n <br />\n        }<br />\n        swap(a[left], a[MinIndex]);<br />\n        if (MaxIndex == left)<br />\n        {<br />\n            MaxIndex = MinIndex;<br />\n        }<br />\n        swap(a[right], a[MaxIndex]);<br />\n        ++left;<br />\n        --right;<br />\n    }<br />\n}<br />\n <br />\n//5，快速排序算法<br />\nint PartSort(int *a, size_t left, size_t right)<br />\n <br />\n{<br />\n    int i, j;<br />\n    static int w = 0;<br />\n    int temp;<br />\n    i = left;<br />\n    j = right;<br />\n    temp = a[i];<br />\n    do<br />\n    {<br />\n        while ((a[j]&gt;temp) &amp;&amp; (i&lt;j))<br />\n        {<br />\n            j--;<br />\n            w++;<br />\n        }<br />\n        if (i&lt;j)<br />\n        {<br />\n            a[i] = a[j];<br />\n            i++;<br />\n            w++;<br />\n        }<br />\n        while ((a[i]&lt;= temp) &amp;&amp; (i&lt;j))<br />\n        {<br />\n            i++;<br />\n            w++;<br />\n        }<br />\n        if (i&lt;j)<br />\n        {<br />\n            a[j] = a[i];<br />\n            j--;<br />\n            w++;<br />\n        }<br />\n    } while (i != j);<br />\n    a[i] = temp;<br />\n    return i;<br />\n}<br />\n <br />\nvoid QuickSort(int *a, size_t left, size_t right)<br />\n{<br />\n    assert(a);<br />\n    if (left &gt;= right)<br />\n    {<br />\n        return;<br />\n    }<br />\n    int div = PartSort(a, left, right);<br />\n    QuickSort(a, left, div - 1);<br />\n    QuickSort(a, div + 1, right);<br />\n}<br />\n <br />\n//6，堆排序<br />\nvoid AdjustDown(int *a, size_t n, int root)<br />\n{<br />\n    size_t parent = root;<br />\n    size_t child = parent * 2 + 1;<br />\n    while (child &lt; n)<br />\n    {<br />\n        if (child + 1 &lt; n &amp;&amp; a[child + 1] &gt; a[child])<br />\n        {<br />\n            ++child;<br />\n        }<br />\n        if (a[child] &gt; a[parent])<br />\n        {<br />\n            swap(a[child], a[parent]);<br />\n            parent = child;;<br />\n            child = parent * 2 + 1;<br />\n        }<br />\n        else<br />\n        {<br />\n            break;<br />\n        }<br />\n    }<br />\n}<br />\nvoid HeapSort(int *a, size_t n)<br />\n{<br />\n    assert(a);<br />\n    int parent = (n - 2) &gt;&gt; 1;<br />\n    //建堆<br />\n    for (; parent &gt;= 0; --parent)<br />\n    {<br />\n        AdjustDown(a, n, parent);<br />\n    }<br />\n    for (int i = n - 1; i &gt;= 0; --i)<br />\n    {<br />\n        swap(a[0], a[i]);<br />\n        AdjustDown(a, i, 0);<br />\n    }<br />\n}<br />\n <br />\n//7，归并排序<br />\nvoid _MergeSort(int* src, int* dst, int left, int right)<br />\n{<br />\n    if (left &gt;= right)<br />\n        return;<br />\n    int mid = left + (right - left) / 2;<br />\n    //[left,mid],[mid+1,right]<br />\n    _MergeSort(src, dst, left, mid);<br />\n    _MergeSort(src, dst, mid + 1, right);<br />\n <br />\n    int begin1 = left; int begin2 = mid + 1;<br />\n    int index = 0;<br />\n <br />\n    while (begin1 &lt;= mid &amp;&amp; begin2 &lt;= right)<br />\n    {<br />\n        if (src[begin1] &lt; src[begin2])<br />\n            dst[index++] = src[begin1++];<br />\n        else<br />\n            dst[index++] = src[begin2++];<br />\n    }<br />\n <br />\n    while (begin1 &lt;= mid)<br />\n        dst[index++] = src[begin1++];<br />\n    while (begin2 &lt; right)<br />\n        dst[index++] = src[begin2++];<br />\n <br />\n    int i = 0; int j = left;<br />\n    while (i &lt; index)<br />\n        src[j++] = dst[i++];<br />\n}<br />\nvoid MergeSort(int* arr, size_t len)<br />\n{<br />\n    assert(arr);<br />\n    assert(len &gt; 0);<br />\n    int *tmp = new int[len];<br />\n    _MergeSort(arr, tmp, 0, len - 1);<br />\n}<br />\n <br />\n/*//8,计数排序<br />\nvoid CountSort(int *a, size_t n)<br />\n{<br />\n    int i, j, k;<br />\n    int C[N + 1] = { 0 };  /*用于计数的C数组的所有元素初值为0*/<br />\n    /*for (i = 0; i&lt;n; i++)<br />\n        C[a[i]]++;    /*例如，R[i].key为6时，C[6]++，C[R[i].key]是R[i].key出现的次数*/<br />\n/*    k = 0;<br />\n    for (j = 0; j &lt;= N; j++)    /*考察每一个j*/<br />\n/*    for (i = 1; i &lt;= C[j]; i++)   /*j=R[j].key出现过C[j]个，此即是排序的结果*/<br />\n/*        a[k++] = j;<br />\n}<br />\n */<br />\n/*//9，基数排序<br />\nsize_t GetMaxDigit(int *a, size_t n)<br />\n{<br />\n    size_t digit = 1;<br />\n    size_t base = 10;<br />\n    for (size_t i = 0; i &lt; n; i++)<br />\n    {<br />\n        while (a[i] &gt;= base)<br />\n        {<br />\n            base *= 10;<br />\n            digit++;<br />\n        }<br />\n    }<br />\n    return digit;<br />\n}*/<br />\n/*void LSDSort(int *a, size_t n)<br />\n{<br />\n    size_t maxDigit = GetMaxDigit(a, n);<br />\n    size_t base = 1;<br />\n <br />\n    size_t *bucket = new size_t[n];<br />\n    while ((maxDigit--) &gt; 0)<br />\n    {<br />\n        size_t counts[10] = { 0 };<br />\n        size_t start[10] = { 0 };<br />\n        start[0] = 0;<br />\n <br />\n        for (size_t i = 0; i &lt; n; i++)<br />\n        {<br />\n            size_t num = (a[i] / base) % 10;<br />\n            counts[num]++;<br />\n        }<br />\n        for (size_t i = 1; i &lt; 10; i++)<br />\n        {<br />\n            start[i] = start[i - 1] + counts[i - 1];<br />\n        }<br />\n <br />\n        for (size_t i = 0; i &lt; n; i++)<br />\n        {<br />\n            size_t num = (a[i] / base) % 10;<br />\n            bucket[start[num]++] = a[i];<br />\n        }<br />\n        memcpy(a, bucket, sizeof(size_t)*n);<br />\n        base *= 10;<br />\n    }<br />\n}*/<br />\n//#include\"test.h\"<br />\nint main() <br />\n{<br />\n    int a[N], i, j, p;<br />\n    Menu();<br />\n    do{<br />\n        cin &gt;&gt; p;<br />\n        double start, finish; /* 定义开始的时间和结束的时间 */<br />\n        start = (double)clock(); <br />\n        for (j = 0; j&lt;M; j++) <br />\n        { /* 执行M次 */<br />\n            for (i = 0; i&lt;N; *(a + i++) = rand() % 10); /* 每次对数组进行重新赋值 */<br />\n            switch (p)<br />\n            {<br />\n            case 1:BubbleSort(a, N); <br />\n                break;<br />\n            case 2:InsertSort(a, N);<br />\n                break;<br />\n            case 3:SheelSort(a, N);<br />\n                    break;<br />\n            case 4:SelectSort(a, N);<br />\n                    break;<br />\n            case 5:QuickSort(a, 0, N - 1);<br />\n                    break;<br />\n            case 6:HeapSort(a, N);<br />\n                    break;<br />\n            case 7:MergeSort(a, N);<br />\n                break;<br />\n        /*    case 8:CountSort(a, N);<br />\n                    break;<br />\n            case 9:LSDSort(a, N);*/<br />\n            case 0:break;<br />\n            default:break;<br />\n            }<br />\n        }<br />\n        finish = (double)clock();<br />\n        printf(\"%.4fms\\n\", (finish - start));<br />\n    } while (p != 0);<br />\n    return 0; <br />\n}<br />\n </p>\n", "status": 2, "cleanedContent": "<p>/*#include<iostream><br /> using namespace std<br /> int main(){<br /> int A[8]={3,41,52,26,38,57,9,49};<br /> for(int j=1;j<8;j++){<br /> int key=A[j];<br /> int i=j-1;<br /> while((i>=0)&&(A[i]>key)){<br /> A[i+1]=A[i];<br /> i--;<br /> }<br /> A[i+1]=key;<br /> }<br /> for(int i=0;i<8;i++){<br /> cout<<A[i]<<\" \"; <br /> }<br /> cout<<endl;<br /> system(\"pause\");<br /> }*/<br /> //#pragma once <br /> #include <iostream><br /> //#include\"test\\test.h\" <br /> using namespace std;<br /> #include <time.h><br /> #include<assert.h><br /> #include<stack><br /> #define M 1000 /* 执行次数 */<br /> #define N 500 /* 数组大小 */<br /> <br /> void Menu();//菜单函数<br /> void BubbleSort(int *a, size_t n);//1，冒泡排序<br /> void InsertSort(int *a, size_t n);//2,插入排序<br /> void SheelSort(int *a, size_t n);//3,希尔排序<br /> void SelectSort(int *a, size_t n);//4,选择排序<br /> void QuickSort(int *a, size_t left, size_t right);//5，快速排序算法<br /> void HeapSort(int *a, size_t n);//6，堆排序<br /> void MergeSort(int* a, size_t n);//7,归并排序<br /> /*void CountSort(int *a, size_t n);//8,计数排序<br /> void LSDSort(int *a, size_t n);//9，基数排序*/<br /> <br /> <br /> void Menu()<br /> {<br /> cout << \"**********************************************\\n\";<br /> cout << \"*****************1，冒泡排序******************\\n\";<br /> cout << \"*****************2，插入排序******************\\n\";<br /> cout << \"*****************3，希尔排序******************\\n\";<br /> cout << \"*****************4，选择排序******************\\n\";<br /> cout << \"***************5，快速排序算法****************\\n\";<br /> cout << \"*****************6，堆排序********************\\n\";<br /> cout << \"*****************7，归并排序******************\\n\";<br /> cout << \"*****************8，计数排序******************\\n\";<br /> cout << \"*****************9，基数排序******************\\n\";<br /> cout << \"*******************0，退出********************\\n\";<br /> cout << \"**********************************************\\n\";<br /> cout << \"请选择一种排序的算法： \" << endl;<br /> }<br /> //1，冒泡排序<br /> void BubbleSort(int *a, size_t n)<br /> {<br /> int i, j;<br /> int tmp;<br /> for (i = 1; i < n; i++)<br /> {<br /> for (j = n-1; j >= i; j--)<br /> {<br /> if (a[j + 1] < a[j])<br /> {<br /> tmp = a[j + 1];<br /> a[j + 1] = a[j];<br /> a[j] = tmp;<br /> }<br /> }<br /> }<br /> }<br /> <br /> //2,插入排序<br /> void InsertSort(int *a, size_t n)<br /> {<br /> int i;<br /> int j;<br /> for (i = 2; i <= n; i++)<br /> {<br /> a[0] = a[i];<br /> j = i - 1;<br /> while (a[0] < a[j])<br /> {<br /> a[j + 1] = a[j];<br /> j--;<br /> }<br /> a[j + 1] = a[0];<br /> }<br /> }<br /> <br /> //3,希尔排序<br /> void SheelSort(int *a, size_t n)<br /> {<br /> assert(a);<br /> int gub = n / 2;//先定义增量为n/2<br /> while (gub > 0)<br /> {<br /> for (size_t i = gub; i < n; ++i)//从第gub个数据处开始进行交换<br /> {<br /> int tmp = a[i];<br /> int end = i - gub;<br /> while (end >= 0 && tmp < a[end])<br /> {<br /> a[end + gub] = a[end];<br /> end = end - gub;<br /> }<br /> a[end + gub] = tmp;<br /> }<br /> gub /= 2;<br /> }<br /> }<br /> <br /> //4,选择排序<br /> void SelectSort(int *a, size_t n)<br /> {<br /> assert(a);<br /> int left = 0;<br /> int right = n - 1;<br /> while (left < right)<br /> {<br /> size_t MinIndex = left;<br /> size_t MaxIndex = right;<br /> for (size_t i = left; i <= right; ++i)<br /> {<br /> if (a[i] < a[MinIndex])<br /> {<br /> MinIndex = i;<br /> }<br /> if (a[i] > a[MaxIndex])<br /> {<br /> MaxIndex = i;<br /> }<br /> <br /> }<br /> swap(a[left], a[MinIndex]);<br /> if (MaxIndex == left)<br /> {<br /> MaxIndex = MinIndex;<br /> }<br /> swap(a[right], a[MaxIndex]);<br /> ++left;<br /> --right;<br /> }<br /> }<br /> <br /> //5，快速排序算法<br /> int PartSort(int *a, size_t left, size_t right)<br /> <br /> {<br /> int i, j;<br /> static int w = 0;<br /> int temp;<br /> i = left;<br /> j = right;<br /> temp = a[i];<br /> do<br /> {<br /> while ((a[j]>temp) && (i<j))<br /> {<br /> j--;<br /> w++;<br /> }<br /> if (i<j)<br /> {<br /> a[i] = a[j];<br /> i++;<br /> w++;<br /> }<br /> while ((a[i]<= temp) && (i<j))<br /> {<br /> i++;<br /> w++;<br /> }<br /> if (i<j)<br /> {<br /> a[j] = a[i];<br /> j--;<br /> w++;<br /> }<br /> } while (i != j);<br /> a[i] = temp;<br /> return i;<br /> }<br /> <br /> void QuickSort(int *a, size_t left, size_t right)<br /> {<br /> assert(a);<br /> if (left >= right)<br /> {<br /> return;<br /> }<br /> int div = PartSort(a, left, right);<br /> QuickSort(a, left, div - 1);<br /> QuickSort(a, div + 1, right);<br /> }<br /> <br /> //6，堆排序<br /> void AdjustDown(int *a, size_t n, int root)<br /> {<br /> size_t parent = root;<br /> size_t child = parent * 2 + 1;<br /> while (child < n)<br /> {<br /> if (child + 1 < n && a[child + 1] > a[child])<br /> {<br /> ++child;<br /> }<br /> if (a[child] > a[parent])<br /> {<br /> swap(a[child], a[parent]);<br /> parent = child;;<br /> child = parent * 2 + 1;<br /> }<br /> else<br /> {<br /> break;<br /> }<br /> }<br /> }<br /> void HeapSort(int *a, size_t n)<br /> {<br /> assert(a);<br /> int parent = (n - 2) >> 1;<br /> //建堆<br /> for (; parent >= 0; --parent)<br /> {<br /> AdjustDown(a, n, parent);<br /> }<br /> for (int i = n - 1; i >= 0; --i)<br /> {<br /> swap(a[0], a[i]);<br /> AdjustDown(a, i, 0);<br /> }<br /> }<br /> <br /> //7，归并排序<br /> void _MergeSort(int* src, int* dst, int left, int right)<br /> {<br /> if (left >= right)<br /> return;<br /> int mid = left + (right - left) / 2;<br /> //[left,mid],[mid+1,right]<br /> _MergeSort(src, dst, left, mid);<br /> _MergeSort(src, dst, mid + 1, right);<br /> <br /> int begin1 = left; int begin2 = mid + 1;<br /> int index = 0;<br /> <br /> while (begin1 <= mid && begin2 <= right)<br /> {<br /> if (src[begin1] < src[begin2])<br /> dst[index++] = src[begin1++];<br /> else<br /> dst[index++] = src[begin2++];<br /> }<br /> <br /> while (begin1 <= mid)<br /> dst[index++] = src[begin1++];<br /> while (begin2 < right)<br /> dst[index++] = src[begin2++];<br /> <br /> int i = 0; int j = left;<br /> while (i < index)<br /> src[j++] = dst[i++];<br /> }<br /> void MergeSort(int* arr, size_t len)<br /> {<br /> assert(arr);<br /> assert(len > 0);<br /> int *tmp = new int[len];<br /> _MergeSort(arr, tmp, 0, len - 1);<br /> }<br /> <br /> /*//8,计数排序<br /> void CountSort(int *a, size_t n)<br /> {<br /> int i, j, k;<br /> int C[N + 1] = { 0 }; /*用于计数的C数组的所有元素初值为0*/<br /> /*for (i = 0; i<n; i++)<br /> C[a[i]]++; /*例如，R[i].key为6时，C[6]++，C[R[i].key]是R[i].key出现的次数*/<br /> /* k = 0;<br /> for (j = 0; j <= N; j++) /*考察每一个j*/<br /> /* for (i = 1; i <= C[j]; i++) /*j=R[j].key出现过C[j]个，此即是排序的结果*/<br /> /* a[k++] = j;<br /> }<br /> */<br /> /*//9，基数排序<br /> size_t GetMaxDigit(int *a, size_t n)<br /> {<br /> size_t digit = 1;<br /> size_t base = 10;<br /> for (size_t i = 0; i < n; i++)<br /> {<br /> while (a[i] >= base)<br /> {<br /> base *= 10;<br /> digit++;<br /> }<br /> }<br /> return digit;<br /> }*/<br /> /*void LSDSort(int *a, size_t n)<br /> {<br /> size_t maxDigit = GetMaxDigit(a, n);<br /> size_t base = 1;<br /> <br /> size_t *bucket = new size_t[n];<br /> while ((maxDigit--) > 0)<br /> {<br /> size_t counts[10] = { 0 };<br /> size_t start[10] = { 0 };<br /> start[0] = 0;<br /> <br /> for (size_t i = 0; i < n; i++)<br /> {<br /> size_t num = (a[i] / base) % 10;<br /> counts[num]++;<br /> }<br /> for (size_t i = 1; i < 10; i++)<br /> {<br /> start[i] = start[i - 1] + counts[i - 1];<br /> }<br /> <br /> for (size_t i = 0; i < n; i++)<br /> {<br /> size_t num = (a[i] / base) % 10;<br /> bucket[start[num]++] = a[i];<br /> }<br /> memcpy(a, bucket, sizeof(size_t)*n);<br /> base *= 10;<br /> }<br /> }*/<br /> //#include\"test.h\"<br /> int main() <br /> {<br /> int a[N], i, j, p;<br /> Menu();<br /> do{<br /> cin >> p;<br /> double start, finish; /* 定义开始的时间和结束的时间 */<br /> start = (double)clock(); <br /> for (j = 0; j<M; j++) <br /> { /* 执行M次 */<br /> for (i = 0; i<N; *(a + i++) = rand() % 10); /* 每次对数组进行重新赋值 */<br /> switch (p)<br /> {<br /> case 1:BubbleSort(a, N); <br /> break;<br /> case 2:InsertSort(a, N);<br /> break;<br /> case 3:SheelSort(a, N);<br /> break;<br /> case 4:SelectSort(a, N);<br /> break;<br /> case 5:QuickSort(a, 0, N - 1);<br /> break;<br /> case 6:HeapSort(a, N);<br /> break;<br /> case 7:MergeSort(a, N);<br /> break;<br /> /* case 8:CountSort(a, N);<br /> break;<br /> case 9:LSDSort(a, N);*/<br /> case 0:break;<br /> default:break;<br /> }<br /> }<br /> finish = (double)clock();<br /> printf(\"%.4fms\\n\", (finish - start));<br /> } while (p != 0);<br /> return 0;"}
{"url": "https://blog.csdn.net/qq_44645845/article/details/134919316", "article_id": 134919316, "username": "qq_44645845", "title": "尝试解决联想拯救者 Dolby Access 升级后需要重新付费的 bug", "body": "<p>问题：Dolby Access 在 Microsoft Store 里面升级后，打开后提示未购买</p>\n\n<p>环境：Windows 10 22h2 拯救者 R7000P 2020H</p>\n\n<p>前提：曾经<strong>购买过</strong>，或者<strong>电脑自带</strong></p>\n\n<p>尝试解决方案：</p>\n\n<p>在 Windows 左下角搜索框中（或点击“开始”图标）搜索“<strong>服务</strong>”，“打开”，或“以管理员身份运行”</p>\n\n<blockquote>\n<p><img alt=\"\" height=\"690\" src=\"https://img-blog.csdnimg.cn/direct/aa72a1c82d9f44419ddd6267609918d1.png\" width=\"519\" /></p>\n</blockquote>\n\n<p>找到 <strong><span style=\"color:#0d0016;\">Dolby DAX API Service</span></strong>，双击查看属性，如果“<span style=\"color:#0d0016;\"><strong>启动类型</strong></span>”是“<span><strong>禁用</strong></span>”则将之更改为“<span><strong>自动</strong></span>”，并将之“启动”，之后重新打开 Dolby Access <span style=\"color:#0d0016;\">即可，该方法<strong>仅供参考</strong>，不一定适用所有情况</span></p>\n\n<blockquote>\n<p><img alt=\"\" height=\"247\" src=\"https://img-blog.csdnimg.cn/direct/5f4c2dc4e037456fa7442cdf530543e9.png\" width=\"627\" /></p>\n\n<p><img alt=\"\" height=\"584\" src=\"https://img-blog.csdnimg.cn/direct/c8b8f38778c441b884c24be5b4668e71.png\" width=\"465\" /></p>\n</blockquote>\n\n<p></p>\n\n<p></p>\n\n<p></p>\n", "status": 1, "cleanedContent": "<p>问题：Dolby Access 在 Microsoft Store 里面升级后，打开后提示未购买</p> <p>环境：Windows 10 22h2 拯救者 R7000P 2020H</p> <p>前提：曾经<strong>购买过</strong>，或者<strong>电脑自带</strong></p> <p>尝试解决方案：</p> <p>在 Windows 左下角搜索框中（或点击“开始”图标）搜索“<strong>服务</strong>”，“打开”，或“以管理员身份运行”</p> <blockquote> <p><img alt=\"\" height=\"690\" src=\"\" width=\"519\" /></p> </blockquote> <p>找到 <strong><span style=\"color:#0d0016;\">Dolby DAX API Service</span></strong>，双击查看属性，如果“<span style=\"color:#0d0016;\"><strong>启动类型</strong></span>”是“<span><strong>禁用</strong></span>”则将之更改为“<span><strong>自动</strong></span>”，并将之“启动”，之后重新打开 Dolby Access <span style=\"color:#0d0016;\""}
{"url": "https://blog.csdn.net/qq_36230375/article/details/134919532", "article_id": 134919532, "username": "qq_36230375", "title": "CCF-GESP计算机学会等级考试2023年12月五级C++T2烹饪问题", "body": "<p><img alt=\"\" height=\"1200\" src=\"https://img-blog.csdnimg.cn/direct/645e4f7f34ec494abfd0f72fb9070ec4.jpeg\" width=\"784\" /></p>\n\n<p>解析：</p>\n\n<p>直接枚举任意两种食材的契合度，求最大值，时间复杂度O(N^2）可以解决40%的数据。</p>\n\n<p>详见代码：</p>\n\n<pre>\n<code class=\"language-cpp\">#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint a[1000005];//食材的美味度\nint n;\nint ans = 0;\nint main() {\nios::sync_with_stdio(false);\ncin &gt;&gt; n;\nfor (int i = 1; i &lt;= n; i++) {\ncin &gt;&gt; a[i];\n}\nfor(int i = 1; i &lt;= n; i++) {\nfor(int j = i + 1; j &lt;= n; j++) {\nans = max(ans, a[i] &amp; a[j]);\n}\n}\ncout &lt;&lt; ans;\nreturn 0;\n}\n</code></pre>\n\n<p>正解：</p>\n\n<p> 从最高位开始枚举，时间复杂度O（31N），感谢之江学院石老师提供的思路。</p>\n\n<p>详见代码：</p>\n\n<pre>\n<code class=\"language-cpp\">#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint n;\nint a[1000005];//美味度\nint b[35];//b[i]表示2的i次方，即第i+1位为1，其他位为0\nint ans=0;\nint main() {\nios::sync_with_stdio(false);\ncin &gt;&gt; n;\nb[0]=1;//预处理b数组\nfor(int i=1;i&lt;=30;i++){\nb[i]=b[i-1]*2;\n}\nfor (int i = 1; i &lt;= n; i++) {\ncin&gt;&gt;a[i];\n}\n//从最高位开始枚举\nfor(int i=30;i&gt;=0;i--){\nans+=b[i];//加上当前位为1\nint cnt=0;//统计数量\nfor(int j=1;j&lt;=n;j++){//遍历所有数\nif ((ans&amp;a[j])==ans){\ncnt++;\n}\n}\nif (cnt&lt;2){//两个以下\nans-=b[i];//这一位为0\n}\n}\ncout&lt;&lt;ans;\nreturn 0;\n}\n</code></pre>\n\n<p></p>\n", "status": 1, "cleanedContent": "<p><img alt=\"\" height=\"1200\" src=\"\" width=\"784\" /></p> <p>解析：</p> <p>直接枚举任意两种食材的契合度，求最大值，时间复杂度O(N^2）可以解决40%的数据。</p> <p>详见代码：</p> <pre> <code class=\"language-cpp\">#include <bits/stdc++.h> using namespace std; int a[];//食材的美味度 int n; int ans = 0; int main() { ios::sync_with_stdio(false); cin >> n; for (int i = 1; i <= n; i++) { cin >> a[i]; } for(int i = 1; i <= n; i++) { for(int j = i + 1; j <= n; j++) { ans = max(ans, a[i] & a[j]); } } cout << ans; return 0; } </code></pre> <p>正解：</p> <p> 从最高位开始枚举，时间复杂度O（31N），感谢之江学院石老师提供的思路。</p> <p>详见代码：</p> <pre> <code class=\"language-cpp\">#include <bits/stdc++.h> using namespace std; int n; int a[];//美味度 int b[35];//b[i]表示2的i次方，即第i+1位为1，其他位为0 int ans=0; int main() { ios::sync_with_stdio(false); cin >> n; b[0]=1;//预处理b数组 for(int i=1;i<=30;i++){ b[i]=b[i-1]*2; } for (int i = 1; i <= n; i++) { cin>>a[i]; } //从最高位开始枚举 for(int i=30;i>=0;i--){ ans+=b[i];//加上当前位为1 int cnt=0;//统计数量 for(int j=1;j<=n;j++){//遍历所有数 if ((ans&a[j])==ans){ cnt++; } } if (cnt<2){//两个以下 ans-=b[i];//这一位为0 } } cout<<ans; return 0;"}
{"url": "https://blog.csdn.net/lft_happiness/article/details/134920150", "article_id": 134920150, "username": "lft_happiness", "title": "pandas 使用方法(1)", "body": "<p id=\"main-toc\"><strong>目录</strong></p>\n\n<p id=\"1.%20excel%20%E8%A1%A8%E6%A0%BC%E5%A4%84%E7%90%86-toc\" style=\"margin-left:0px;\"><a href=\"#1.%20excel%20%E8%A1%A8%E6%A0%BC%E5%A4%84%E7%90%86\">1. excel 表格处理</a></p>\n\n<p id=\"(1)%20%E8%AF%BB%E5%8F%96excel%20%E8%A1%A8%E6%A0%BC-toc\" style=\"margin-left:40px;\"><a href=\"#(1)%20%E8%AF%BB%E5%8F%96excel%20%E8%A1%A8%E6%A0%BC\">(1) 读取excel 表格</a></p>\n\n<p id=\"(2)%20%E6%8A%BD%E5%8F%96excel%E8%A1%A8%E9%83%A8%E5%88%86%E5%88%97%E6%95%B0%E6%8D%AE-toc\" style=\"margin-left:40px;\"><a href=\"#(2)%20%E6%8A%BD%E5%8F%96excel%E8%A1%A8%E9%83%A8%E5%88%86%E5%88%97%E6%95%B0%E6%8D%AE\">(2) 抽取excel表部分列数据</a></p>\n\n<p id=\"(3)%20%E4%BF%9D%E5%AD%98%E6%95%B0%E6%8D%AE%E5%88%B0excel%E8%A1%A8%E6%A0%BC-toc\" style=\"margin-left:40px;\"><a href=\"#(3)%20%E4%BF%9D%E5%AD%98%E6%95%B0%E6%8D%AE%E5%88%B0excel%E8%A1%A8%E6%A0%BC\">(3) 保存数据到excel表格</a></p>\n\n<p id=\"(4)%20%E4%BF%9D%E5%AD%98%E5%88%B0%20excel%20%E8%A1%A8%E4%B8%AD%E7%9A%84%E4%B8%8D%E5%90%8Csheet-toc\" style=\"margin-left:40px;\"><a href=\"#(4)%20%E4%BF%9D%E5%AD%98%E5%88%B0%20excel%20%E8%A1%A8%E4%B8%AD%E7%9A%84%E4%B8%8D%E5%90%8Csheet\">(4) 保存到 excel 表中的不同sheet</a></p>\n\n<p id=\"2.%20%E5%88%A4%E6%96%AD%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%90%E4%B8%AA%E6%95%B0%E5%80%BC%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A9%BA-toc\" style=\"margin-left:0px;\"><a href=\"#2.%20%E5%88%A4%E6%96%AD%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%90%E4%B8%AA%E6%95%B0%E5%80%BC%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A9%BA\">2. 判断二维数组中的某个数值是否为空</a></p>\n\n<p id=\"3.%20%E5%88%A0%E9%99%A4%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%A9%BA%E8%A1%8C-toc\" style=\"margin-left:0px;\"><a href=\"#3.%20%E5%88%A0%E9%99%A4%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%A9%BA%E8%A1%8C\">3. 删除二维数组中的空行</a></p>\n\n<p id=\"4.%20%E5%9C%A8%E5%88%97%E8%A1%A8%E4%B8%AD%E6%B7%BB%E5%8A%A0%E6%9F%90%E5%88%97%E5%B1%9E%E6%80%A7-toc\" style=\"margin-left:0px;\"><a href=\"#4.%20%E5%9C%A8%E5%88%97%E8%A1%A8%E4%B8%AD%E6%B7%BB%E5%8A%A0%E6%9F%90%E5%88%97%E5%B1%9E%E6%80%A7\">4. 在列表中添加某列属性</a></p>\n\n<hr id=\"hr-toc\" /><p>本文是将使用pandas过程中遇到的问题进行了整理，希望可以帮到大家~</p>\n\n<h1 id=\"1.%20excel%20%E8%A1%A8%E6%A0%BC%E5%A4%84%E7%90%86\">1. excel 表格处理</h1>\n\n<h2 id=\"(1)%20%E8%AF%BB%E5%8F%96excel%20%E8%A1%A8%E6%A0%BC\">(1) 读取excel 表格</h2>\n\n<pre>\n<code class=\"language-python\">df = pd.read_excel(\"PDO.xlsx\")</code></pre>\n\n<h2 id=\"(2)%20%E6%8A%BD%E5%8F%96excel%E8%A1%A8%E9%83%A8%E5%88%86%E5%88%97%E6%95%B0%E6%8D%AE\">(2) 抽取excel表部分列数据</h2>\n\n<pre>\n<code class=\"language-python\">data = df.loc[:, [\"钢种\", \"目标厚度\", \"卷箱模式\", \"卷取结束时间\"]].values</code></pre>\n\n<h2 id=\"(3)%20%E4%BF%9D%E5%AD%98%E6%95%B0%E6%8D%AE%E5%88%B0excel%E8%A1%A8%E6%A0%BC\">(3) 保存数据到excel表格</h2>\n\n<pre>\n<code class=\"language-python\">group1.to_excel(\"output_rollbox.xlsx\")</code></pre>\n\n<p><img alt=\"\" height=\"336\" src=\"https://img-blog.csdnimg.cn/direct/7e24b6e2c62942598f98aef0f6e6a23f.png\" width=\"1200\" /></p>\n\n<p><img alt=\"\" height=\"1126\" src=\"https://img-blog.csdnimg.cn/direct/c8681dd2e5d149f78c539bc3fb45ddb3.png\" width=\"1200\" /></p>\n\n<h2 id=\"(4)%20%E4%BF%9D%E5%AD%98%E5%88%B0%20excel%20%E8%A1%A8%E4%B8%AD%E7%9A%84%E4%B8%8D%E5%90%8Csheet\">(4) 保存到 excel 表中的不同sheet</h2>\n\n<pre>\n<code class=\"language-python\">\nxlsx_file1 = pd.read_excel(\"output_rollbox.xlsx\")\nxlsx_file2 = pd.read_excel(\"output_norollbox.xlsx\")\n\nwith pd.ExcelWriter(r'轧制节奏.xlsx') as writer:\nsheet1_data.to_excel(writer, sheet_name=\"卷箱模式\")\nsheet2_data.to_excel(writer, sheet_name=\"非卷箱模式\")</code></pre>\n\n<p><img alt=\"\" height=\"1116\" src=\"https://img-blog.csdnimg.cn/direct/232a6532d3d74a9b8fe2583b23574f92.png\" width=\"1200\" /></p>\n\n<h1 id=\"2.%20%E5%88%A4%E6%96%AD%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%90%E4%B8%AA%E6%95%B0%E5%80%BC%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A9%BA\">2. 判断二维数组中的某个数值是否为空</h1>\n\n<pre>\n<code class=\"language-python\">pd.isnull(data[i][0])</code></pre>\n\n<h1 id=\"3.%20%E5%88%A0%E9%99%A4%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%A9%BA%E8%A1%8C\">3. 删除二维数组中的空行</h1>\n\n<pre>\n<code class=\"language-python\">np.delete(data, null_id, 0)</code></pre>\n\n<p> 注：</p>\n\n<p>这里的data是从excel读取的数据；null_id是所有的空行行号，是一个列表；0代表行 </p>\n\n<p><img alt=\"\" height=\"259\" src=\"https://img-blog.csdnimg.cn/direct/c5a25c8cf64d4a77920603e2ff1c86db.png\" width=\"1144\" /></p>\n\n<h1 id=\"4.%20%E5%9C%A8%E5%88%97%E8%A1%A8%E4%B8%AD%E6%B7%BB%E5%8A%A0%E6%9F%90%E5%88%97%E5%B1%9E%E6%80%A7\">4. 在列表中添加某列属性</h1>\n\n<pre>\n<code class=\"language-python\">data = np.c_[data[1:], remain_col_time]</code></pre>\n\n<p>注： </p>\n\n<p>data[1:] 是一个列表，嵌套的小列表中有三个属性值； remain_col_time 是一个列表；上述的代码是在原先的列表中又添加了一列数据</p>\n\n<p></p>\n\n<p>感谢大家的关注和支持~</p>\n", "status": 1, "cleanedContent": "<p id=\"main-toc\"><strong>目录</strong></p> <p id=\"1.%20excel%20%E8%A1%A8%E6%A0%BC%E5%A4%84%E7%90%86-toc\" style=\"margin-left:0px;\"><a href=\"#1.%20excel%20%E8%A1%A8%E6%A0%BC%E5%A4%84%E7%90%86\">1. excel 表格处理</a></p> <p id=\"(1)%20%E8%AF%BB%E5%8F%96excel%20%E8%A1%A8%E6%A0%BC-toc\" style=\"margin-left:40px;\"><a href=\"#(1)%20%E8%AF%BB%E5%8F%96excel%20%E8%A1%A8%E6%A0%BC\">(1) 读取excel 表格</a></p> <p id=\"(2)%20%E6%8A%BD%E5%8F%96excel%E8%A1%A8%E9%83%A8%E5%88%86%E5%88%97%E6%95%B0%E6%8D%AE-toc\" style=\"margin-left:40px;\"><a href=\"#(2)%20%E6%8A%BD%E5%8F%96excel%E8%A1%A8%E9%83%A8%E5%88%86%E5%88%97%E6%95%B0%E6%8D%AE\">(2) 抽取excel表部分列数据</a></p> <p id=\"(3)%20%E4%BF%9D%E5%AD%98%E6%95%B0%E6%8D%AE%E5%88%B0excel%E8%A1%A8%E6%A0%BC-toc\" style=\"margin-left:40px;\"><a href=\"#(3)%20%E4%BF%9D%E5%AD%98%E6%95%B0%E6%8D%AE%E5%88%B0excel%E8%A1%A8%E6%A0%BC\">(3) 保存数据到excel表格</a></p> <p id=\"(4)%20%E4%BF%9D%E5%AD%98%E5%88%B0%20excel%20%E8%A1%A8%E4%B8%AD%E7%9A%84%E4%B8%8D%E5%90%8Csheet-toc\" style=\"margin-left:40px;\"><a href=\"#(4)%20%E4%BF%9D%E5%AD%98%E5%88%B0%20excel%20%E8%A1%A8%E4%B8%AD%E7%9A%84%E4%B8%8D%E5%90%8Csheet\">(4) 保存到 excel 表中的不同sheet</a></p> <p id=\"2.%20%E5%88%A4%E6%96%AD%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%90%E4%B8%AA%E6%95%B0%E5%80%BC%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A9%BA-toc\" style=\"margin-left:0px;\"><a href=\"#2.%20%E5%88%A4%E6%96%AD%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%90%E4%B8%AA%E6%95%B0%E5%80%BC%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A9%BA\">2. 判断二维数组中的某个数值是否为空</a></p> <p id=\"3.%20%E5%88%A0%E9%99%A4%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%A9%BA%E8%A1%8C-toc\" style=\"margin-left:0px;\"><a href=\"#3.%20%E5%88%A0%E9%99%A4%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%A9%BA%E8%A1%8C\">3. 删除二维数组中的空行</a></p> <p id=\"4.%20%E5%9C%A8%E5%88%97%E8%A1%A8%E4%B8%AD%E6%B7%BB%E5%8A%A0%E6%9F%90%E5%88%97%E5%B1%9E%E6%80%A7-toc\" style=\"margin-left:0px;\"><a href=\"#4.%20%E5%9C%A8%E5%88%97%E8%A1%A8%E4%B8%AD%E6%B7%BB%E5%8A%A0%E6%9F%90%E5%88%97%E5%B1%9E%E6%80%A7\">4. 在列表中添加某列属性</a></p> <hr id=\"hr-toc\" /><p>本文是将使用pandas过程中遇到的问题进行了整理，希望可以帮到大家~</p> <h1 id=\"1.%20excel%20%E8%A1%A8%E6%A0%BC%E5%A4%84%E7%90%86\">1. excel 表格处理</h1> <h2 id=\"(1)%20%E8%AF%BB%E5%8F%96excel%20%E8%A1%A8%E6%A0%BC\">(1) 读取excel 表格</h2> <pre> <code class=\"language-python\">df = pd.read_excel(\"PDO.xlsx\")</code></pre> <h2 id=\"(2)%20%E6%8A%BD%E5%8F%96excel%E8%A1%A8%E9%83%A8%E5%88%86%E5%88%97%E6%95%B0%E6%8D%AE\">(2) 抽取excel表部分列数据</h2> <pre> <code class=\"language-python\">data = df.loc[:, [\"钢种\", \"目标厚度\", \"卷箱模式\", \"卷取结束时间\"]].values</code></pre> <h2 id=\"(3)%20%E4%BF%9D%E5%AD%98%E6%95%B0%E6%8D%AE%E5%88%B0excel%E8%A1%A8%E6%A0%BC\">(3) 保存数据到excel表格</h2> <pre> <code class=\"language-python\">group1.to_excel(\"output_rollbox.xlsx\")</code></pre> <p><img alt=\"\" height=\"336\" src=\"\" width=\"1200\" /></p> <p><img alt=\"\" height=\"1126\" src=\"\" width=\"1200\" /></p> <h2 id=\"(4)%20%E4%BF%9D%E5%AD%98%E5%88%B0%20excel%20%E8%A1%A8%E4%B8%AD%E7%9A%84%E4%B8%8D%E5%90%8Csheet\">(4) 保存到 excel 表中的不同sheet</h2> <pre> <code class=\"language-python\"> xlsx_file1 = pd.read_excel(\"output_rollbox.xlsx\") xlsx_file2 = pd.read_excel(\"output_norollbox.xlsx\") with pd.ExcelWriter(r'轧制节奏.xlsx') as writer: sheet1_data.to_excel(writer, sheet_name=\"卷箱模式\") sheet2_data.to_excel(writer, sheet_name=\"非卷箱模式\")</code></pre> <p><img alt=\"\" height=\"1116\" src=\"\" width=\"1200\" /></p> <h1 id=\"2.%20%E5%88%A4%E6%96%AD%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%90%E4%B8%AA%E6%95%B0%E5%80%BC%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A9%BA\">2. 判断二维数组中的某个数值是否为空</h1> <pre> <code class=\"language-python\">pd.isnull(data[i][0])</code></pre> <h1 id=\"3.%20%E5%88%A0%E9%99%A4%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%A9%BA%E8%A1%8C\">3. 删除二维数组中的空行</h1> <pre> <code class=\"language-python\">np.delete(data, null_id, 0)</code></pre> <p> 注：</p> <p>这里的data是从excel读取的数据；null_id是所有的空行行号，是一个列表；0代表行 </p> <p><img alt=\"\" height=\"259\" src=\"\" width=\"1144\" /></p> <h1 id=\"4.%20%E5%9C%A8%E5%88%97%E8%A1%A8%E4%B8%AD%E6%B7%BB%E5%8A%A0%E6%9F%90%E5%88%97%E5%B1%9E%E6%80%A7\">4. 在列表中添加某列属性</h1> <pre> <code class=\"language-python\">data = np.c_[data[1:], remain_col_time]</code></pre> <p>注： </p> <p>data[1:] 是一个列表，嵌套的小列表中有三个属性值； remain_col_time 是一个列表；"}
{"url": "https://blog.csdn.net/goudahai/article/details/134920189", "article_id": 134920189, "username": "goudahai", "title": "文件遍历代码（C, C++）", "body": "<pre>\n<code class=\"language-cpp\">//#include &lt;io.h&gt;\nvoid TraverseAllFiles()\n{\n_finddata_t fileInfo; \nstring fileDir(\"G:\\\\data\\\\\"); // 要遍历的文件夹\nstring fileExt(\"*.csv\"); // 要遍历的文件扩展名 \nstring fileFind = fileDir;\nfileFind.append(fileExt);\nlong handle = _findfirst(fileFind.data(), &amp;fileInfo); // 找第一个文件 \n\nif (handle == -1L) \n{ \nreturn; // 没找到文件\n} \n\nint fileNumber = 0; // 记数找到多少个文件\nvector&lt;string&gt; files; // 文件名存起来\ndo\n{ \nfiles.push_back(fileInfo.name);\ncout &lt;&lt; \"fileNumber = \"&lt;&lt; fileNumber &lt;&lt; \" \" &lt;&lt; files[fileNumber].data() &lt;&lt; endl;\nfileNumber++;\n}while (_findnext(handle, &amp;fileInfo) == 0);\nfiles.clear();\n}</code></pre>\n\n<p></p>\n", "status": 1, "cleanedContent": "<pre> <code class=\"language-cpp\">//#include <io.h> void TraverseAllFiles() { _finddata_t fileInfo; string fileDir(\"G:\\\\data\\\\\"); // 要遍历的文件夹 string fileExt(\"*.csv\"); // 要遍历的文件扩展名 string fileFind = fileDir; fileFind.append(fileExt); long handle = _findfirst(fileFind.data(), &fileInfo); // 找第一个文件 if (handle == -1L) { return; // 没找到文件 } int fileNumber = 0; // 记数找到多少个文件 vector<string> files; // 文件名存起来 do { files.push_back(); cout << \"fileNumber = \"<< fileNumber << \" \" << files[fileNumber].data() << endl; fileNumber++; }while (_findnext(handle, &fileInfo) == 0); files.clear();"}
{"url": "https://blog.csdn.net/m0_61571842/article/details/134920409", "article_id": 134920409, "username": "m0_61571842", "title": "所有行业的最终归宿-明理信息科技打造知识付费平台 12", "body": "<p>      <img alt=\"\" height=\"352\" src=\"https://img-blog.csdnimg.cn/direct/647870142fca4920a3d41db6516f2622.png\" width=\"760\" /> </p>\n\n<p>明理信息科技知识付费平台</p>\n\n<p>随着科技的不断进步和全球化的加速发展，我们生活在一个信息爆炸的时代。各行各业都在努力适应这一变化，寻找新的商业模式和增长机会。在这个过程中，一个趋势逐渐凸显出来，那就是知识付费。可以说，知识付费正在成为所有行业的最终归宿。</p>\n\n<p>       明理信息科技知识服务saas平台，快速帮您搭建属于自己或企业的知识服务平台。</p>\n\n<p>       首先，让我们思考一下，为什么知识付费会成为如此重要的趋势。在数字化时代，信息获取变得异常便捷，但也带来了一个问题：信息过载。人们面临着海量的信息，很难筛选出真正有价值的内容。此时，知识付费便应运而生。通过付费获取知识，用户能够筛选出高质量、专业的内容，提升自己的技能和竞争力。</p>\n\n<p>       对于企业和个人而言，知识付费也是一种创新的盈利方式。在传统的产品销售或服务收费模式下，竞争日趋激烈，利润空间受到挤压。而知识付费则为他们提供了一个新的增长点。企业和个人可以将自己的专业知识和经验整理成课程、咨询服务等形式，通过知识付费平台提供给用户。这样不仅能够实现知识变现，还能降低运营成本，拓宽客户群体。</p>\n\n<p>       从行业角度来看，知识付费正在渗透到各个领域。在教育领域，线上课程、辅导服务等付费知识产品广受欢迎；在金融领域，专业投资课程、财务规划咨询等知识付费服务也逐渐兴起；在医疗领域，远程医疗咨询、健康管理课程等知识付费产品也在蓬勃发展。可以说，几乎没有一个行业能够避开知识付费的趋势。</p>\n\n<p>       当然，知识付费并不是一个简单的概念，它需要建立起完善的知识体系和服务体系。首先，知识提供者需要具备专业知识和技能，能够提供真正有价值的内容。其次，知识付费平台需要建立起良好的用户体验和服务质量，能够吸引和留住用户。最后，整个社会需要形成对知识付费的认同和尊重，让知识付费成为一种可持续的商业模式。</p>\n\n<p>       总的来说，知识付费正在成为所有行业的最终归宿。它不仅能够满足用户对高质量知识的需求，还能为企业和个人提供新的盈利方式。随着科技的不断进步和全球化的加速发展，我们有理由相信，知识付费将在未来发挥更加重要的作用。让我们拭目以待这个充满无限可能的时代！<br />\n </p>\n", "status": 2, "cleanedContent": "<p> <img alt=\"\" height=\"352\" src=\"\" width=\"760\" /> </p> <p>明理信息科技知识付费平台</p> <p>随着科技的不断进步和全球化的加速发展，我们生活在一个信息爆炸的时代。各行各业都在努力适应这一变化，寻找新的商业模式和增长机会。在这个过程中，一个趋势逐渐凸显出来，那就是知识付费。可以说，知识付费正在成为所有行业的最终归宿。</p> <p> 明理信息科技知识服务saas平台，快速帮您搭建属于自己或企业的知识服务平台。</p> <p> 首先，让我们思考一下，为什么知识付费会成为如此重要的趋势。在数字化时代，信息获取变得异常便捷，但也带来了一个问题：信息过载。人们面临着海量的信息，很难筛选出真正有价值的内容。此时，知识付费便应运而生。通过付费获取知识，用户能够筛选出高质量、专业的内容，提升自己的技能和竞争力。</p> <p> 对于企业和个人而言，知识付费也是一种创新的盈利方式。在传统的产品销售或服务收费模式下，竞争日趋激烈，利润空间受到挤压。而知识付费则为他们提供了一个新的增长点。企业和个人可以将自己的专业知识和经验整理成课程、咨询服务等形式，通过知识付费平台提供给用户。这样不仅能够实现知识变现，还能降低运营成本，拓宽客户群体。</p> <p> 从行业角度来看，知识付费正在渗透到各个领域。在教育领域，线上课程、辅导服务等付费知识产品广受欢迎；在金融领域，专业投资课程、财务规划咨询等知识付费服务也逐渐兴起；在医疗领域，远程医疗咨询、健康管理课程等知识付费产品也在蓬勃发展。可以说，几乎没有一个行业能够避开知识付费的趋势。</p> <p> 当然，知识付费并不是一个简单的概念，它需要建立起完善的知识体系和服务体系。首先，知识提供者需要具备专业知识和技能，能够提供真正有价值的内容。其次，知识付费平台需要建立起良好的用户体验和服务质量，能够吸引和留住用户。最后，整个社会需要形成对知识付费的认同和尊重，让知识付费成为一种可持续的商业模式。</p> <p> 总的来说，知识付费正在成为所有行业的最终归宿。它不仅能够满足用户对高质量知识的需求，还能为企业和个人提供新的盈利方式。随着科技的不断进步和全球化的加速发展，我们有理由相信，知识付费将在未来发挥更加重要的作用。让我们拭目以待这个充满无限可能的时代！"}
{"url": "https://blog.csdn.net/weixin_47560716/article/details/134920434", "article_id": 134920434, "username": "weixin_47560716", "title": "博客摘录「 Java如何进行优雅的判空——Optional类的灵活应用」2023年12月11日", "body": "<p>public User createUser(){ User user = new User(); user.setName(\"zhangsan\"); return user;}</p>\n", "status": 2, "cleanedContent": "<p>public User createUser(){ User user = new User(); user.setName(\"zhangsan\"); return user;"}
{"url": "https://blog.csdn.net/m0_61500149/article/details/134920501", "article_id": 134920501, "username": "m0_61500149", "title": "PowerShell --查询指定目录下指定文件的的MD5 值", "body": "<p></p>\n\n<p># 定义要遍历的目录路径<br />\n$rootPath = \"C:\\XXX\\XXX\\XXX\\XXX\\XXX\\\" </p>\n\n<p># 遍历目录并计算所有XML和properties文件的MD5<br />\nGet-ChildItem -Path $rootPath -Recurse | <br />\nWhere-Object { $_.Name -match \"(\\.xml|\\.properties)\" } | <br />\nForEach-Object {<br />\n    $filePath = $_.FullName<br />\n    $fileHash = (Get-FileHash -Path $filePath -Algorithm MD5).Hash<br />\n    # 打印文件路径和MD5哈希值<br />\n    \"{0} : {1}\" -f $filePath, $fileHash<br />\n}<br />\n </p>\n", "status": 1, "cleanedContent": "<p></p> <p># 定义要遍历的目录路径<br /> $rootPath = \"C:\\XXX\\XXX\\XXX\\XXX\\XXX\\\" </p> <p># 遍历目录并计算所有XML和properties文件的MD5<br /> Get-ChildItem -Path $rootPath -Recurse | <br /> Where-Object { $_.Name -match \"(\\.xml|\\.properties)\" } | <br /> ForEach-Object {<br /> $filePath = $_.FullName<br /> $fileHash = (Get-FileHash -Path $filePath -Algorithm MD5)."}
{"url": "https://blog.csdn.net/weixin_45620943/article/details/134920898", "article_id": 134920898, "username": "weixin_45620943", "title": "【ECMAScript】原型链及原型链继承总结", "body": "<p id=\"main-toc\"><strong>目录</strong></p>\n\n<p id=\"1.%20%E5%89%8D%E8%A8%80-toc\" style=\"margin-left:160px;\"><a href=\"#1.%20%E5%89%8D%E8%A8%80\">1. 前言</a></p>\n\n<p id=\"2.%20%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%8E%9F%E5%9E%8B%E9%93%BE-toc\" style=\"margin-left:160px;\"><a href=\"#2.%20%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%8E%9F%E5%9E%8B%E9%93%BE\">2. 原型链</a></p>\n\n<p id=\"3.%20%E7%BB%A7%E6%89%BF%E6%96%B9%E5%BC%8F-toc\" style=\"margin-left:160px;\"><a href=\"#3.%20%E7%BB%A7%E6%89%BF%E6%96%B9%E5%BC%8F\">3. 继承方式</a></p>\n\n<p id=\"a.%20%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%BB%A7%E6%89%BF-toc\" style=\"margin-left:200px;\"><a href=\"#a.%20%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%BB%A7%E6%89%BF\">a. 原型链继承</a></p>\n\n<p id=\"b.%20%E7%9B%97%E7%94%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%EF%BC%88%E7%BB%8F%E5%85%B8%E7%BB%A7%E6%89%BF%EF%BC%89-toc\" style=\"margin-left:200px;\"><a href=\"#b.%20%E7%9B%97%E7%94%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%EF%BC%88%E7%BB%8F%E5%85%B8%E7%BB%A7%E6%89%BF%EF%BC%89\">b. 盗用构造函数（经典继承）</a></p>\n\n<p id=\"c.%20%E7%BB%84%E5%90%88%E7%BB%A7%E6%89%BF%EF%BC%88%E4%BC%AA%E7%BB%8F%E5%85%B8%E7%BB%A7%E6%89%BF%EF%BC%89-toc\" style=\"margin-left:200px;\"><a href=\"#c.%20%E7%BB%84%E5%90%88%E7%BB%A7%E6%89%BF%EF%BC%88%E4%BC%AA%E7%BB%8F%E5%85%B8%E7%BB%A7%E6%89%BF%EF%BC%89\">c. 组合继承（伪经典继承）</a></p>\n\n<p id=\"d.%20%E5%8E%9F%E5%9E%8B%E5%BC%8F%E7%BB%A7%E6%89%BF-toc\" style=\"margin-left:200px;\"><a href=\"#d.%20%E5%8E%9F%E5%9E%8B%E5%BC%8F%E7%BB%A7%E6%89%BF\">d. 原型式继承</a></p>\n\n<p id=\"e.%20%E5%AF%84%E7%94%9F%E5%BC%8F%E7%BB%A7%E6%89%BF-toc\" style=\"margin-left:200px;\"><a href=\"#e.%20%E5%AF%84%E7%94%9F%E5%BC%8F%E7%BB%A7%E6%89%BF\">e. 寄生式继承</a></p>\n\n<p id=\"f.%20%E5%AF%84%E7%94%9F%E5%BC%8F%E7%BB%84%E5%90%88%E7%BB%A7%E6%89%BF-toc\" style=\"margin-left:200px;\"><a href=\"#f.%20%E5%AF%84%E7%94%9F%E5%BC%8F%E7%BB%84%E5%90%88%E7%BB%A7%E6%89%BF\">f. 寄生式组合继承</a></p>\n\n<hr id=\"hr-toc\" /><p></p>\n\n<h5 id=\"1.%20%E5%89%8D%E8%A8%80\" style=\"text-align:justify;\">1. 前言</h5>\n\n<p style=\"text-align:justify;\">        JavaScript的面向对象世界里，是基于原型链继承的，比如调用对象instance的print方法。</p>\n\n<ul><li style=\"text-align:justify;\">首先，在对象instance中找；</li>\n<li style=\"text-align:justify;\">如果找不到，接着往下一个节点对象instance.__proto__中找（即Person.prototype）；</li>\n<li style=\"text-align:justify;\">如果还是找不到，继续在下一个节点对象instance.__proto__.__proto__中找（即Object.prototype）；</li>\n<li style=\"text-align:justify;\">直到找到null，最后一个节点对象指向null。</li>\n</ul><p style=\"text-align:justify;\">如果了解数据结构的同学，立马知道这是一个单向链表结构。本文梳理一下原型链、构造函数、原型链继承知识点。</p>\n\n<h5 id=\"2.%20%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%8E%9F%E5%9E%8B%E9%93%BE\" style=\"text-align:justify;\">2. 原型链</h5>\n\n<p style=\"text-align:justify;\">        示例代码定义了构造函数Person（是一个函数对象），并使用new操作符示例化Person，得到示例对象instance。</p>\n\n<pre>\n<code class=\"language-javascript\">function Person(name) {\nthis.name = name;\n}\n\nconst instance = new Person('xiao ming');</code></pre>\n\n<p style=\"text-align:justify;\">原型链和构造函数的指向关系，如图所示：</p>\n\n<p style=\"text-align:justify;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/direct/73e4023f37d24e9193c1677cbe9b9ef9.png\" /></p>\n\n<p style=\"text-align:justify;\">对于实例化对象instance、函数对象Person、函数对象Function、函数对象Object，原型链的结构（指向关系）为：</p>\n\n<ul><li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">instance</span></strong> -&gt; Person.prototype -&gt; Object.prototype -&gt; null</li>\n<li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Person</span></strong> -&gt; Function.prototype -&gt; Object.prototype -&gt; null</li>\n<li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Function</span></strong> -&gt; Function.prototype -&gt; Object.prototype -&gt; null</li>\n<li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Object</span></strong> -&gt; Function.prototype -&gt; Object.prototype -&gt; null</li>\n</ul><p style=\"text-align:justify;\">实例化对象instance、函数对象Person、函数对象Function、函数对象Object，此四个对象均有<strong>一个指向构造函数的原型对象的隐式属性__proto__</strong>（PS：此处构造函数是指，实例化instance、Person、Function、Object这4个对象的各个构造函数）</p>\n\n<ul><li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">instance</span></strong>.__proto__===  Person.prototype</li>\n<li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Person</span></strong>.__proto__ === Function.prototype</li>\n<li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Function</span></strong>.__proto__ === Function.prototype</li>\n<li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Object</span></strong>.__proto__ === Function.prototype</li>\n</ul><p style=\"text-align:justify;\">和<strong>一个指向构造函数的属性constructor</strong></p>\n\n<ul><li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">instance</span></strong>.constructor ===  Person</li>\n<li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Person</span></strong>.constructor === Function</li>\n<li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Function</span></strong>.constructor === Function</li>\n<li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Object</span></strong>.constructor === Function</li>\n</ul><p style=\"text-align:justify;\">        函数对象Person、Function、Object同时也是作为构造函数的函数对象（简称构造函数对象）<strong>，会比<span style=\"color:#fe2c24;\">非</span>构造函数对象多出一个属性：原型对象prototype</strong>，并且<strong>原型对象prototype的constructor属性指回构造函数对象</strong>。</p>\n\n<ul><li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Person</span></strong>.prototype.constructor === Person</li>\n<li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Function</span></strong>.prototype.constructor === Function</li>\n<li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Object</span></strong>.prototype.constructor === Object</li>\n</ul><h5 id=\"3.%20%E7%BB%A7%E6%89%BF%E6%96%B9%E5%BC%8F\">3. 继承方式</h5>\n\n<h6 id=\"a.%20%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%BB%A7%E6%89%BF\">a. 原型链继承</h6>\n\n<p>        通过修改构造函数的原型对象，将父构造函数的实例化对象赋值给prototype</p>\n\n<pre>\n<code class=\"language-javascript\">function Animal() {\nthis.animalName = 'animal';\n}\n\nAnimal.prototype.getAnimalName = function() {\nreturn this.animalName;\n}\n\nfunction Cat() {\nthis.catName = 'mimi';\n}\n\n// 通过修改构造函数对象Cat的原型对象prototype（设置为Animal的一个示例对象），实现原型链继承\nCat.prototype = new Animal();\n\nCat.prototype.constructor = Cat;\n\n// 并在原型对象prototype新增加一个方法getCatName方法\nCat.prototype.getCatName = function() {\nreturn this.catName;\n}\n\nlet cat = new Cat();\n\nconsole.log(cat.getAnimalName());</code></pre>\n\n<p>构成的原型链：cat -&gt; Cat.prototype（Animal的实例化对象） -&gt; Animal.prototype -&gt; Object.prototype -&gt; null</p>\n\n<p>如果一个实例对象的原型链中出现过相应的构造函数，使用instanceof运算符，会返回true。</p>\n\n<ul><li>cat instanceof Cat === true</li>\n<li>cat instanceof Animal === true</li>\n<li>cat instanceof Object === true</li>\n</ul><p><strong>存在两个问题</strong>：</p>\n\n<ul><li>this.animalName被所有Cat的实例化对象共享了</li>\n<li>无法传参给父构造函数Animal</li>\n</ul><h6 id=\"b.%20%E7%9B%97%E7%94%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%EF%BC%88%E7%BB%8F%E5%85%B8%E7%BB%A7%E6%89%BF%EF%BC%89\">b. 盗用构造函数（经典继承）</h6>\n\n<p>        将父构造函数当成普通函数执行，仅修改父构造函数this指向</p>\n\n<pre>\n<code class=\"language-javascript\">function Animal() {\nthis.animalName = 'animal';\n}\n\nAnimal.prototype.getAnimalName = function() {\nreturn this.animalName;\n}\n\nfunction Cat() {\n// 盗用构造函数：父构造函数属性不会被子构造函数实例化对象共享了，并且可以传参给父构造函数\nAnimal.call(this, arg1, arg2, ...);\nthis.catName = 'mimi';\n}\n\n\n// 并在原型对象prototype新增加一个方法getCatName方法\nCat.prototype.getCatName = function() {\nreturn this.catName;\n}\n\nlet cat = new Cat();\n\nconsole.log(cat.getAnimalName());</code></pre>\n\n<p>构成的原型链：cat -&gt; Cat.prototype -&gt; Object.prototype -&gt; null</p>\n\n<p> <strong>存在问题</strong>：</p>\n\n<ul><li>无法继承父构造函数的原型对象上的方法/属性，破坏了原型链继承</li>\n</ul><h6 id=\"c.%20%E7%BB%84%E5%90%88%E7%BB%A7%E6%89%BF%EF%BC%88%E4%BC%AA%E7%BB%8F%E5%85%B8%E7%BB%A7%E6%89%BF%EF%BC%89\">c. 组合继承（伪经典继承）</h6>\n\n<p>        组合原型链继承和盗用构造函数（经典继承）。</p>\n\n<pre>\n<code class=\"language-javascript\">function Animal() {\nthis.animalName = 'animal';\n}\n\nAnimal.prototype.getAnimalName = function() {\nreturn this.animalName;\n}\n\nfunction Cat() {\n// 盗用构造函数：父构造函数属性不会被子构造函数实例化对象共享了，并且可以传参给父构造函数\n// 继承属性，第二次调用\nAnimal.call(this, arg1, arg2, ...);\nthis.catName = 'mimi';\n}\n\n// 通过修改构造函数对象Cat的原型对象prototype（设置为Animal的一个示例对象），实现原型链继承\n// 继承方法，第一次调用\nCat.prototype = new Animal();\n\n// 更改构造函数指向\nCat.prototype.constructor = Cat;\n\n// 并在原型对象prototype新增加一个方法getCatName方法\nCat.prototype.getCatName = function() {\nreturn this.catName;\n}\n\nlet cat = new Cat();\n\nconsole.log(cat.getAnimalName());</code></pre>\n\n<p>构成的原型链：cat（拥有了Animal的属性） -&gt; Cat.prototype（Animal的实例化对象） -&gt; Animal.prototype -&gt; Object.prototype -&gt; null</p>\n\n<p><strong>存在问题：</strong></p>\n\n<ul><li>调用了两次父构造函数</li>\n<li>子构造函数的原型对象，多出了父构造函数中的属性</li>\n</ul><h6 id=\"d.%20%E5%8E%9F%E5%9E%8B%E5%BC%8F%E7%BB%A7%E6%89%BF\">d. 原型式继承</h6>\n\n<pre>\n<code class=\"language-javascript\">function object(o) {\nfunction F() {}\nF.prototype = o;\nreturn new F(); \n}\n\n\nlet person = {\nname: \"Nicholas\",\nfriends: [\"Shelby\", \"Court\", \"Van\"]\n};\n\nlet anotherPerson = object(person);\nanotherPerson.name = \"Greg\";\nanotherPerson.friends.push(\"Rob\");\n\nlet yetAnotherPerson = object(person);\nyetAnotherPerson.name = \"Linda\";\nyetAnotherPerson.friends.push(\"Barbie\");\nconsole.log(person.friends); // \"Shelby,Court,Van,Rob,Barbie\"</code></pre>\n\n<p>构成的原型链：</p>\n\n<p>anotherPerson -&gt; peson（F.prototype） -&gt; Object.prototype -&gt; null</p>\n\n<p>yetAnotherPerson -&gt; peson（F.prototype） -&gt; Object.prototype -&gt; null</p>\n\n<p>object生成的对象共享传入的对象的属性/方法</p>\n\n<p>Object.create(o, {name: { value: 'gg' }})不传第二项参数时，就是原型式继承。</p>\n\n<p>适用场景：不需要创建构造函数，但需要对象之间需要共享数据和方法</p>\n\n<h6 id=\"e.%20%E5%AF%84%E7%94%9F%E5%BC%8F%E7%BB%A7%E6%89%BF\">e. 寄生式继承</h6>\n\n<pre>\n<code class=\"language-javascript\">function object(o) {\nfunction F() {}\nF.prototype = o;\nreturn new F(); \n}\n\nfunction create(original) {\nlet clone = object(original);\n// 比原型式继承多了给实例对象新增方法\nclone.say = function() {\nconsole.log('hello');\n};\nreturn clone;\n}\n\n\nlet person = {\nname: \"Nicholas\",\nfriends: [\"Shelby\", \"Court\", \"Van\"]\n};\n\nlet anotherPerson = create(person);\nanotherPerson.name = \"Greg\";\nanotherPerson.friends.push(\"Rob\");\nanotherPerson.say();\n</code></pre>\n\n<p>比原型式继承多了给实例对象新增方法。</p>\n\n<h6 id=\"f.%20%E5%AF%84%E7%94%9F%E5%BC%8F%E7%BB%84%E5%90%88%E7%BB%A7%E6%89%BF\">f. 寄生式组合继承</h6>\n\n<p>       “盗用构造函数”无法继承父构造函数的原型对象上的方法/属性，”组合式继承“为解决“盗用构造函数”的问题，调用了两次父构造函数，子构造函数的原型对象多出了父构造函数的属性。</p>\n\n<p>        “寄生组合式继承”避免使用父构造函数实例化一个对象作为子构造函数的原型，而是设置一个空的构造函数F，将父构造函数的原型对象赋值给空的构造函数F，并返回new F()实例化对象作为子构造函数的原型。</p>\n\n<pre>\n<code class=\"language-javascript\">function object(o) {\nfunction F() {}\nF.prototype = o;\nreturn new F();\n}\n\nfunction inheritProtype(Cat, Animal) {\nCat.prototype = object(Animal.prototype);\n// 构造函数的原型对象的contructor属性，需要指回构造函数本身\nCat.prototype.constructor = Cat;\n}\n\nfunction Animal() {\nthis.animalName = 'animal';\n}\n\nAnimal.prototype.getAnimalName = function() {\nreturn this.animalName;\n}\n\nfunction Cat() {\n// 盗用构造函数：父构造函数属性不会被子构造函数实例化对象共享了，并且可以传参给父构造函数\n// 继承属性，第二次调用\nAnimal.call(this, arg1, arg2, ...);\nthis.catName = 'mimi';\n}\n\ninheritProtype(Cat, Animal);\n\n\n// 并在原型对象prototype新增加一个方法getCatName方法\nCat.prototype.getCatName = function() {\nreturn this.catName;\n}\n\nlet cat = new Cat();\n\nconsole.log(cat.getAnimalName());</code></pre>\n\n<p> 原型链结构：cat -&gt; Cat.prototype -&gt; F.prototype（Animal.prototype） -&gt; Object.prototype -&gt; null</p>\n\n<p>注：以上，如有不合理之处，还请帮忙指出，大家一起交流学习~</p>\n", "status": 1, "cleanedContent": "<p id=\"main-toc\"><strong>目录</strong></p> <p id=\"1.%20%E5%89%8D%E8%A8%80-toc\" style=\"margin-left:160px;\"><a href=\"#1.%20%E5%89%8D%E8%A8%80\">1. 前言</a></p> <p id=\"2.%20%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%8E%9F%E5%9E%8B%E9%93%BE-toc\" style=\"margin-left:160px;\"><a href=\"#2.%20%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%8E%9F%E5%9E%8B%E9%93%BE\">2. 原型链</a></p> <p id=\"3.%20%E7%BB%A7%E6%89%BF%E6%96%B9%E5%BC%8F-toc\" style=\"margin-left:160px;\"><a href=\"#3.%20%E7%BB%A7%E6%89%BF%E6%96%B9%E5%BC%8F\">3. 继承方式</a></p> <p id=\"a.%20%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%BB%A7%E6%89%BF-toc\" style=\"margin-left:200px;\"><a href=\"#a.%20%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%BB%A7%E6%89%BF\">a. 原型链继承</a></p> <p id=\"b.%20%E7%9B%97%E7%94%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%EF%BC%88%E7%BB%8F%E5%85%B8%E7%BB%A7%E6%89%BF%EF%BC%89-toc\" style=\"margin-left:200px;\"><a href=\"#b.%20%E7%9B%97%E7%94%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%EF%BC%88%E7%BB%8F%E5%85%B8%E7%BB%A7%E6%89%BF%EF%BC%89\">b. 盗用构造函数（经典继承）</a></p> <p id=\"c.%20%E7%BB%84%E5%90%88%E7%BB%A7%E6%89%BF%EF%BC%88%E4%BC%AA%E7%BB%8F%E5%85%B8%E7%BB%A7%E6%89%BF%EF%BC%89-toc\" style=\"margin-left:200px;\"><a href=\"#c.%20%E7%BB%84%E5%90%88%E7%BB%A7%E6%89%BF%EF%BC%88%E4%BC%AA%E7%BB%8F%E5%85%B8%E7%BB%A7%E6%89%BF%EF%BC%89\">c. 组合继承（伪经典继承）</a></p> <p id=\"d.%20%E5%8E%9F%E5%9E%8B%E5%BC%8F%E7%BB%A7%E6%89%BF-toc\" style=\"margin-left:200px;\"><a href=\"#d.%20%E5%8E%9F%E5%9E%8B%E5%BC%8F%E7%BB%A7%E6%89%BF\">d. 原型式继承</a></p> <p id=\"e.%20%E5%AF%84%E7%94%9F%E5%BC%8F%E7%BB%A7%E6%89%BF-toc\" style=\"margin-left:200px;\"><a href=\"#e.%20%E5%AF%84%E7%94%9F%E5%BC%8F%E7%BB%A7%E6%89%BF\">e. 寄生式继承</a></p> <p id=\"f.%20%E5%AF%84%E7%94%9F%E5%BC%8F%E7%BB%84%E5%90%88%E7%BB%A7%E6%89%BF-toc\" style=\"margin-left:200px;\"><a href=\"#f.%20%E5%AF%84%E7%94%9F%E5%BC%8F%E7%BB%84%E5%90%88%E7%BB%A7%E6%89%BF\">f. 寄生式组合继承</a></p> <hr id=\"hr-toc\" /><p></p> <h5 id=\"1.%20%E5%89%8D%E8%A8%80\" style=\"text-align:justify;\">1. 前言</h5> <p style=\"text-align:justify;\"> JavaScript的面向对象世界里，是基于原型链继承的，比如调用对象instance的print方法。</p> <ul><li style=\"text-align:justify;\">首先，在对象instance中找；</li> <li style=\"text-align:justify;\">如果找不到，接着往下一个节点对象instance.__proto__中找（即Person.prototype）；</li> <li style=\"text-align:justify;\">如果还是找不到，继续在下一个节点对象instance.__proto__.__proto__中找（即Object.prototype）；</li> <li style=\"text-align:justify;\">直到找到null，最后一个节点对象指向null。</li> </ul><p style=\"text-align:justify;\">如果了解数据结构的同学，立马知道这是一个单向链表结构。本文梳理一下原型链、构造函数、原型链继承知识点。</p> <h5 id=\"2.%20%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%8E%9F%E5%9E%8B%E9%93%BE\" style=\"text-align:justify;\">2. 原型链</h5> <p style=\"text-align:justify;\"> 示例代码定义了构造函数Person（是一个函数对象），并使用new操作符示例化Person，得到示例对象instance。</p> <pre> <code class=\"language-javascript\">function Person(name) { = name; } const instance = new Person('xiao ming');</code></pre> <p style=\"text-align:justify;\">原型链和构造函数的指向关系，如图所示：</p> <p style=\"text-align:justify;\"><img alt=\"\" src=\"\" /></p> <p style=\"text-align:justify;\">对于实例化对象instance、函数对象Person、函数对象Function、函数对象Object，原型链的结构（指向关系）为：</p> <ul><li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">instance</span></strong> -> Person.prototype -> Object.prototype -> null</li> <li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Person</span></strong> -> Function.prototype -> Object.prototype -> null</li> <li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Function</span></strong> -> Function.prototype -> Object.prototype -> null</li> <li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Object</span></strong> -> Function.prototype -> Object.prototype -> null</li> </ul><p style=\"text-align:justify;\">实例化对象instance、函数对象Person、函数对象Function、函数对象Object，此四个对象均有<strong>一个指向构造函数的原型对象的隐式属性__proto__</strong>（PS：此处构造函数是指，实例化instance、Person、Function、Object这4个对象的各个构造函数）</p> <ul><li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">instance</span></strong>.__proto__=== Person.prototype</li> <li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Person</span></strong>.__proto__ === Function.prototype</li> <li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Function</span></strong>.__proto__ === Function.prototype</li> <li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Object</span></strong>.__proto__ === Function.prototype</li> </ul><p style=\"text-align:justify;\">和<strong>一个指向构造函数的属性constructor</strong></p> <ul><li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">instance</span></strong>.constructor === Person</li> <li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Person</span></strong>.constructor === Function</li> <li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Function</span></strong>.constructor === Function</li> <li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Object</span></strong>.constructor === Function</li> </ul><p style=\"text-align:justify;\"> 函数对象Person、Function、Object同时也是作为构造函数的函数对象（简称构造函数对象）<strong>，会比<span style=\"color:#fe2c24;\">非</span>构造函数对象多出一个属性：原型对象prototype</strong>，并且<strong>原型对象prototype的constructor属性指回构造函数对象</strong>。</p> <ul><li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Person</span></strong>.prototype.constructor === Person</li> <li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Function</span></strong>.prototype.constructor === Function</li> <li style=\"text-align:justify;\"><strong><span style=\"color:#fe2c24;\">Object</span></strong>.prototype.constructor === Object</li> </ul><h5 id=\"3.%20%E7%BB%A7%E6%89%BF%E6%96%B9%E5%BC%8F\">3. 继承方式</h5> <h6 id=\"a.%20%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%BB%A7%E6%89%BF\">a. 原型链继承</h6> <p> 通过修改构造函数的原型对象，将父构造函数的实例化对象赋值给prototype</p> <pre> <code class=\"language-javascript\">function Animal() { this.animalName = 'animal'; } Animal.prototype.getAnimalName = function() { return this.animalName; } function Cat() { this.catName = 'mimi'; } // 通过修改构造函数对象Cat的原型对象prototype（设置为Animal的一个示例对象），实现原型链继承 Cat.prototype = new Animal(); Cat.prototype.constructor = Cat; // 并在原型对象prototype新增加一个方法getCatName方法 Cat.prototype.getCatName = function() { return this.catName; } let cat = new Cat(); console.log(cat.getAnimalName());</code></pre> <p>构成的原型链：cat -> Cat.prototype（Animal的实例化对象） -> Animal.prototype -> Object.prototype -> null</p> <p>如果一个实例对象的原型链中出现过相应的构造函数，使用instanceof运算符，会返回true。</p> <ul><li>cat instanceof Cat === true</li> <li>cat instanceof Animal === true</li> <li>cat instanceof Object === true</li> </ul><p><strong>存在两个问题</strong>：</p> <ul><li>this.animalName被所有Cat的实例化对象共享了</li> <li>无法传参给父构造函数Animal</li> </ul><h6 id=\"b.%20%E7%9B%97%E7%94%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%EF%BC%88%E7%BB%8F%E5%85%B8%E7%BB%A7%E6%89%BF%EF%BC%89\">b. 盗用构造函数（经典继承）</h6> <p> 将父构造函数当成普通函数执行，仅修改父构造函数this指向</p> <pre> <code class=\"language-javascript\">function Animal() { this.animalName = 'animal'; } Animal.prototype.getAnimalName = function() { return this.animalName; } function Cat() { // 盗用构造函数：父构造函数属性不会被子构造函数实例化对象共享了，并且可以传参给父构造函数 Animal.call(this, arg1, arg2, ...); this.catName = 'mimi'; } // 并在原型对象prototype新增加一个方法getCatName方法 Cat.prototype.getCatName = function() { return this.catName; } let cat = new Cat(); console.log(cat.getAnimalName());</code></pre> <p>构成的原型链：cat -> Cat.prototype -> Object.prototype -> null</p> <p> <strong>存在问题</strong>：</p> <ul><li>无法继承父构造函数的原型对象上的方法/属性，破坏了原型链继承</li> </ul><h6 id=\"c.%20%E7%BB%84%E5%90%88%E7%BB%A7%E6%89%BF%EF%BC%88%E4%BC%AA%E7%BB%8F%E5%85%B8%E7%BB%A7%E6%89%BF%EF%BC%89\">c. 组合继承（伪经典继承）</h6> <p> 组合原型链继承和盗用构造函数（经典继承）。</p> <pre> <code class=\"language-javascript\">function Animal() { this.animalName = 'animal'; } Animal.prototype.getAnimalName = function() { return this.animalName; } function Cat() { // 盗用构造函数：父构造函数属性不会被子构造函数实例化对象共享了，并且可以传参给父构造函数 // 继承属性，第二次调用 Animal.call(this, arg1, arg2, ...); this.catName = 'mimi'; } // 通过修改构造函数对象Cat的原型对象prototype（设置为Animal的一个示例对象），实现原型链继承 // 继承方法，第一次调用 Cat.prototype = new Animal(); // 更改构造函数指向 Cat.prototype.constructor = Cat; // 并在原型对象prototype新增加一个方法getCatName方法 Cat.prototype.getCatName = function() { return this.catName; } let cat = new Cat(); console.log(cat.getAnimalName());</code></pre> <p>构成的原型链：cat（拥有了Animal的属性） -> Cat.prototype（Animal的实例化对象） -> Animal.prototype -> Object.prototype -> null</p> <p><strong>存在问题：</strong></p> <ul><li>调用了两次父构造函数</li> <li>子构造函数的原型对象，多出了父构造函数中的属性</li> </ul><h6 id=\"d.%20%E5%8E%9F%E5%9E%8B%E5%BC%8F%E7%BB%A7%E6%89%BF\">d. 原型式继承</h6> <pre> <code class=\"language-javascript\">function object(o) { function F() {} F.prototype = o; return new F(); } let person = { name: \"Nicholas\", friends: [\"Shelby\", \"Court\", \"Van\"] }; let anotherPerson = object(person); = \"Greg\"; anotherPerson.friends.push(\"Rob\"); let yetAnotherPerson = object(person); = \"Linda\"; yetAnotherPerson.friends.push(\"Barbie\"); console.log(person.friends); // \"Shelby,Court,Van,Rob,Barbie\"</code></pre> <p>构成的原型链：</p> <p>anotherPerson -> peson（F.prototype） -> Object.prototype -> null</p> <p>yetAnotherPerson -> peson（F.prototype） -> Object.prototype -> null</p> <p>object生成的对象共享传入的对象的属性/方法</p> <p>Object.create(o, {name: { value: 'gg' }})不传第二项参数时，就是原型式继承。</p> <p>适用场景：不需要创建构造函数，但需要对象之间需要共享数据和方法</p> <h6 id=\"e.%20%E5%AF%84%E7%94%9F%E5%BC%8F%E7%BB%A7%E6%89%BF\">e. 寄生式继承</h6> <pre> <code class=\"language-javascript\">function object(o) { function F() {} F.prototype = o; return new F(); } function create(original) { let clone = object(original); // 比原型式继承多了给实例对象新增方法 clone.say = function() { console.log('hello'); }; return clone; } let person = { name: \"Nicholas\", friends: [\"Shelby\", \"Court\", \"Van\"] }; let anotherPerson = create(person); = \"Greg\"; anotherPerson.friends.push(\"Rob\"); anotherPerson.say(); </code></pre> <p>比原型式继承多了给实例对象新增方法。</p> <h6 id=\"f.%20%E5%AF%84%E7%94%9F%E5%BC%8F%E7%BB%84%E5%90%88%E7%BB%A7%E6%89%BF\">f. 寄生式组合继承</h6> <p> “盗用构造函数”无法继承父构造函数的原型对象上的方法/属性，”组合式继承“为解决“盗用构造函数”的问题，调用了两次父构造函数，子构造函数的原型对象多出了父构造函数的属性。</p> <p> “寄生组合式继承”避免使用父构造函数实例化一个对象作为子构造函数的原型，而是设置一个空的构造函数F，将父构造函数的原型对象赋值给空的构造函数F，并返回new F()实例化对象作为子构造函数的原型。</p> <pre> <code class=\"language-javascript\">function object(o) { function F() {} F.prototype = o; return new F(); } function inheritProtype(Cat, Animal) { Cat.prototype = object(Animal.prototype); // 构造函数的原型对象的contructor属性，需要指回构造函数本身 Cat.prototype.constructor = Cat; } function Animal() { this.animalName = 'animal'; } Animal.prototype.getAnimalName = function() { return this.animalName; } function Cat() { // 盗用构造函数：父构造函数属性不会被子构造函数实例化对象共享了，并且可以传参给父构造函数 // 继承属性，第二次调用 Animal.call(this, arg1, arg2, ...); this.catName = 'mimi'; } inheritProtype(Cat, Animal); // 并在原型对象prototype新增加一个方法getCatName方法 Cat.prototype.getCatName = function() { return this.catName; } let cat = new Cat(); console.log(cat.getAnimalName());</code></pre> <p> 原型链结构：cat -> Cat.prototype -> F.prototype（Animal.prototype） -> Object."}
{"url": "https://blog.csdn.net/m0_72465967/article/details/134921183", "article_id": 134921183, "username": "m0_72465967", "title": "基于SSM+MySQL+LayUI的车辆保险理赔系统", "body": "<h3><a id=\"_0\"></a>演示视频</h3>\n<p></p><div class=\"csdn-data-video\" data-mediaembed=\"bilibili\" data-video-id=\"aFsTvg97-1702262396094\" data-video-url=\"https://player.bilibili.com/player.html?aid=214779581\" data-video-cover=\"https://img-blog.csdnimg.cn/img_convert/6afd8207401726d8d299991898926a97.jpeg\" data-video-title=\"基于SSM+MySQL+LayUI的车辆保险理赔系统\">\n<img src=\"https://img-blog.csdnimg.cn/img_convert/6afd8207401726d8d299991898926a97.jpeg\">\n<p>基于SSM+MySQL+LayUI的车辆保险理赔系统</p>\n</div><p></p>\n<h3><a id=\"_6\"></a>技术描述</h3>\n<p>开发工具： Idea/Eclipse<br>\n数据库： mysql<br>\nJar包仓库： Maven<br>\n前段框架：jquery/Jsp<br>\n后端框架： Spring+SpringMVC+Mybatis</p>\n<h3><a id=\"_13\"></a>文字描述</h3>\n<p>基于SSM+MySQL+LayUI的车辆保险理赔系统,包含普通用户，勘察员，管理员三个角色。整体功能包含现场勘察，勘察记录，已调查记录，待调查表单，我的保险，我的理赔，用户管理，审核表单等。</p>\n<h3><a id=\"_17\"></a>部分截图内容</h3>\n<p><img src=\"https://img-blog.csdnimg.cn/direct/6bb4751333dd4bc196e21c7f74ef7e09.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/c1ad9c724e5c4a3cb97e127ea89f92bf.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/287ee091eba1466695f72996994c71d6.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/1393337cf6fb4604bacf0888e9d5e948.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/f3424c7c1c914ea192319026476236e6.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/a9d29b05cea54b97906c2bad1f2652d9.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/3e076984bae34ad4a4c823aa5727dfe8.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/848365f71cbe467ab920691a279ceaf0.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/ef6f444880a445e387fe9d09b7424439.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/e35b383a8b8b42449545a6ad96c06788.jpeg\" alt=\"请添加图片描述\"></p>\n\n", "status": 1, "cleanedContent": "<h3><a id=\"_0\"></a>演示视频</h3> <p></p><div class=\"csdn-data-video\" data-mediaembed=\"bilibili\" data-video-id=\"aFsTvg97-\" data-video-url=\"\" data-video-cover=\"\" data-video-title=\"基于SSM+MySQL+LayUI的车辆保险理赔系统\"> <img src=\"\"> <p>基于SSM+MySQL+LayUI的车辆保险理赔系统</p> </div><p></p> <h3><a id=\"_6\"></a>技术描述</h3> <p>开发工具： Idea/Eclipse<br> 数据库： mysql<br> Jar包仓库： Maven<br> 前段框架：jquery/Jsp<br> 后端框架： Spring+SpringMVC+Mybatis</p> <h3><a id=\"_13\"></a>文字描述</h3> <p>基于SSM+MySQL+LayUI的车辆保险理赔系统,包含普通用户，勘察员，管理员三个角色。整体功能包含现场勘察，勘察记录，已调查记录，待调查表单，我的保险，我的理赔，用户管理，审核表单等。"}
{"url": "https://blog.csdn.net/m0_68967611/article/details/134921321", "article_id": 134921321, "username": "m0_68967611", "title": "FreeRTOS", "body": "<h1>一、从零到一写FreeRTOS</h1>\n\n<h2>1.新建工程</h2>\n\n<p>步骤：</p>\n\n<p><img alt=\"\" height=\"447\" src=\"https://img-blog.csdnimg.cn/direct/c7b7db8d519748afa95aa369843c5d15.png\" width=\"569\" /></p>\n\n<p><span style=\"background-color:#ffd900;\">注：最好使用低版本的keil，之前用的最新版本(5.39)，这个版本不预先安装complier version5，会导致编译失败，出错。安装完成后也可能会因为版本不匹配编译不过。后续都改用野火提供的5.26版本。</span></p>\n\n<p>1.任意位置新建工程，和也野火的裸机开发类似，新建文件夹，在文件夹里新建如下文件夹</p>\n\n<p><img alt=\"\" height=\"424\" src=\"https://img-blog.csdnimg.cn/direct/8a54d174724a4f3baacd5f5897d4cfb9.png\" width=\"710\" /></p>\n\n<p>下面在文件夹里 添加文件</p>\n\n<p>Doc添加readme文档，爱写啥写啥，也可以不写</p>\n\n<p><img alt=\"\" height=\"464\" src=\"https://img-blog.csdnimg.cn/direct/abb8d1a572584a768e227c2021d386ad.png\" width=\"1135\" /></p>\n\n<p>freertos添加如下文件夹</p>\n\n<p><img alt=\"\" height=\"397\" src=\"https://img-blog.csdnimg.cn/direct/d887d12fe9e74b58a13c81012f353840.png\" width=\"1122\" /></p>\n\n<p>porta里，RVDS也是空的，和keil相关，到时候建工程的之后就会有了</p>\n\n<p><img alt=\"\" height=\"316\" src=\"https://img-blog.csdnimg.cn/direct/ef83791f5c3b4cbbabde305bde669657.png\" width=\"1134\" /></p>\n\n<p>2.打开keil，新建工程，保存到刚才新建的文件夹的project里，名字随便起，选完以后选内核</p>\n\n<p><img alt=\"\" height=\"274\" src=\"https://img-blog.csdnimg.cn/direct/016a3dbf89ea40d4889af2b595f08bdb.png\" width=\"369\" /></p>\n\n<p>之后配置</p>\n\n<p>注意device，不要选C.Startup</p>\n\n<p><img alt=\"\" height=\"965\" src=\"https://img-blog.csdnimg.cn/direct/aa0a045b188c44b798e33234ea80187a.png\" width=\"1200\" /></p>\n\n<p>选择下面这个，</p>\n\n<p><img alt=\"\" height=\"335\" src=\"https://img-blog.csdnimg.cn/direct/54115d13e45b486680fb6cb4c2fced95.png\" width=\"963\" /> 不然编译会报错<img alt=\"\" height=\"387\" src=\"https://img-blog.csdnimg.cn/direct/5ca34ae06920441f951ca6181bcb5bbd.png\" width=\"1200\" /></p>\n\n<p>  解决方法链接：<a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release2.3.6/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=N7T8\" data-link-title=\"http://t.csdnimg.cn/yzQvR\" href=\"http://t.csdnimg.cn/yzQvR\" title=\"http://t.csdnimg.cn/yzQvR\">http://t.csdnimg.cn/yzQvR</a>    只能解决报错，不能解决警告</p>\n\n<p>3.文件分组</p>\n\n<p><img alt=\"\" height=\"649\" src=\"https://img-blog.csdnimg.cn/direct/bc90644a386548a6891696914bac44e4.png\" width=\"817\" /></p>\n\n<p>4.添加文件</p>\n\n<p>mian.c(User里)</p>\n\n<p>文件夹里添加完了，双击keil里的user文件夹添加进来，添加成如下这样</p>\n\n<p><img alt=\"\" height=\"491\" src=\"https://img-blog.csdnimg.cn/direct/f7d5e66f84fd4c2ab49d1ce1f52e281a.png\" width=\"307\" /></p>\n\n<p>配置，配套资料里有，回头写</p>\n\n<p>工程模板就建好了，编译，没报错</p>\n\n<p><img alt=\"\" height=\"139\" src=\"https://img-blog.csdnimg.cn/direct/4fedc44fe1074db2b0b8649fc7501a68.png\" width=\"681\" /></p>\n\n<h2>2.列表项</h2>\n\n<p>在 FreeRTOS 中存在着大量的基础数据结构列表和列表项的操作，要想读懂 FreeRTOS的源码或者从 0 到 1 开始实现 FreeRTOS，就必须弄懂列表和列表项的操作。</p>\n\n<h3>2.1FreeRTOS 中链表的实现</h3>\n\n<p>复制之前配置好的工程，重命名，新建文件并添加到FreeRTOS/Source里</p>\n\n<p>从例程文件里拷贝以下文件到freertos/include文件夹里，并添加到工程里</p>\n\n<p><img alt=\"\" height=\"509\" src=\"https://img-blog.csdnimg.cn/direct/cad83c040b3449d390044ff6fccb8714.png\" width=\"316\" /></p>\n\n<p>这块需要c语言和数据结构链表的知识，之前的文章里有，这里不再赘述，去主页找</p>\n\n<p>FreeRTOS中的链表有根节点和普通节点，普通节点用来存放数据，根节点又称头节点，是链表的标识，其中记录了链表数据节点的个数和用来遍历链表的指针，还包含了尾节点，因为是双向链表，头即是尾，尾即是头，根节点不存放数据。</p>\n\n<p>一个普通节点(ListItem_t)结构体里有如下内容</p>\n\n<p><img alt=\"\" height=\"252\" src=\"https://img-blog.csdnimg.cn/direct/b006005caf2344abb4490ee88e2ceb49.png\" width=\"479\" /></p>\n\n<p>由此在list.h文件加入列表项结构体代码</p>\n\n<pre>\n<code class=\"language-cpp\">#include \"FreeRTOS.h\"\n//定义列表项结构体\n\n/*\n************************************************************************\n* 结构体定义\n************************************************************************\n*/\n/* 节点结构体定义 */\nstruct xLIST_ITEM\n{\nTickType_t xItemValue; /* 辅助值，用于帮助节点做顺序排列 */ \nstruct xLIST_ITEM * pxNext; /* 指向链表下一个节点 */ \nstruct xLIST_ITEM * pxPrevious; /* 指向链表前一个节点 */ \nvoid * pvOwner; /* 指向拥有该节点的内核对象，通常是TCB */\nvoid * pvContainer; /* 指向该节点所在的链表 */\n};\ntypedef struct xLIST_ITEM ListItem_t; /* 节点数据类型重定义 */</code></pre>\n\n<p>初始化节点</p>\n\n<p>    pvContainer：不指向任意一个链表</p>\n\n<pre>\n<code class=\"language-cpp\">void vListInitialiseItem( ListItem_t * const pxItem )\n{\n/* 初始化该节点所在的链表为空，表示节点还没有插入任何链表 */\npxItem-&gt;pvContainer = NULL;\n}</code></pre>\n\n<p>根节点(头节点)</p>\n\n<p><img alt=\"\" height=\"322\" src=\"https://img-blog.csdnimg.cn/direct/dfd8e1647ee34412995161c9c921fbc9.png\" width=\"535\" /></p>\n\n<p>创建根节点结构体</p>\n\n<pre>\n<code class=\"language-cpp\">//根节点里有尾节点，所以先建立尾节点结构体\nstruct xMINI_LIST_ITEM\n{\nTickType_t xItemValue; /* 辅助值，用于帮助节点做升序排列 */\nstruct xLIST_ITEM * pxNext; /* 指向链表下一个节点 */\nstruct xLIST_ITEM * pxPrevious; /* 指向链表前一个节点 */\n};\ntypedef struct xMINI_LIST_ITEM MiniListItem_t; /* 最小节点数据类型重定义 */\n\n\n/* 链表结构体定义 */\ntypedef struct xLIST\n{\nUBaseType_t uxNumberOfItems; /* 链表节点计数器 */\nListItem_t * pxIndex; /* 链表节点索引指针 */\nMiniListItem_t xListEnd; /* 链表最后一个节点 */\n} List_t;</code></pre>\n\n<p>初始化根节点</p>\n\n<p>注：</p>\n\n<p>        1.普通节点类型为<span style=\"background-color:#ffd900;\">ListItem_t</span></p>\n\n<p>        2.根节点里包含尾节点，建立根节点之前要先定义尾节点，其数据类型为<span style=\"background-color:#ffd900;\">MiniListItem_t</span></p>\n\n<p>        3. 尾节点内部指针类型为普通节点<span style=\"background-color:#ffd900;\">ListItem_t</span>，因为要指向普通节点，须保持数据类型一致</p>\n\n<p>        4.根节点内<span style=\"background-color:#ffd900;\">pxIndex</span>为<span style=\"background-color:#ffd900;\">ListItem_t *</span>类型，指向内部尾节点时需强转<span style=\"background-color:#ffd900;\">( ListItem_t * ) &amp;(</span>                 <span style=\"background-color:#ffd900;\">pxList-&gt;xListEnd )</span></p>\n\n<p>        5.同理，尾节点内next指针和previous指针都需要强转</p>\n\n<p><img alt=\"\" height=\"276\" src=\"https://img-blog.csdnimg.cn/direct/01f40f84c22f40a7b95e8a9622c0e5da.png\" width=\"766\" /></p>\n\n<pre>\n<code class=\"language-cpp\">void vListInitialise( List_t * const pxList )\n{\n/* 将链表索引指针指向最后一个节点 */\npxList-&gt;pxIndex = ( ListItem_t * ) &amp;( pxList-&gt;xListEnd );\n\n/* 将链表最后一个节点的辅助排序的值设置为最大，确保该节点就是链表的最后节点 */\npxList-&gt;xListEnd.xItemValue = portMAX_DELAY;\n\n/* 将最后一个节点的 pxNext 和 pxPrevious 指针均指向节点自身，表示链表为空 */\npxList-&gt;xListEnd.pxNext = ( ListItem_t * ) &amp;( pxList-&gt;xListEnd );\npxList-&gt;xListEnd.pxPrevious = ( ListItem_t * ) &amp;( pxList-&gt;xListEnd );\n\n/* 初始化链表节点计数器的值为 0，表示链表为空 */\npxList-&gt;uxNumberOfItems = ( UBaseType_t ) 0U;\n}</code></pre>\n\n<h3>2.2 插入节点</h3>\n\n<h4>2.2.1将节点插入到链表的尾部</h4>\n\n<p>将节点插入到链表的尾部（可以理解为头部） 就是将一个新的节点插入到一个空的链<br />\n表<br />\n        思路：</p>\n\n<p><img alt=\"\" height=\"294\" src=\"https://img-blog.csdnimg.cn/direct/c3ae5d91e6744c5dab3f6fb190a8c651.png\" width=\"449\" /></p>\n\n<p>①新节点的next指向根节点内部尾节点：pxNewListItem-&gt;pxNext = xListEnd;</p>\n\n<p>②新节点的previous指针指向根节点内部尾节点的previous：</p>\n\n<p>                pxNewListItem-&gt;pxPrevious = xListEnd-&gt;pxPrevious;</p>\n\n<p>③根节点内部尾节点next指向新节点：pxIndex-&gt;pxPrevious-&gt;pxNext = pxNewListItem;</p>\n\n<p>④根节点内部尾节点previous指向新节点：pxIndex-&gt;pxPrevious = pxNewListItem;<br />\n⑤新节点指针指向根节点所在链表：pxNewListItem-&gt;pvContainer = ( void * ) pxList;</p>\n\n<p>⑥计数值++：( pxList-&gt;uxNumberOfItems )++;<br />\n⑦⑧⑨⑩<br />\n </p>\n\n<pre>\n<code class=\"language-cpp\">/* 将节点插入到链表的尾部 */\nvoid vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )\n{\nListItem_t * const pxIndex = pxList-&gt;pxIndex;//引入一个指针指向不可以更改的普通节点类型的指针，作为标识\n\npxNewListItem-&gt;pxNext = pxIndex;\npxNewListItem-&gt;pxPrevious = pxIndex-&gt;pxPrevious;\npxIndex-&gt;pxPrevious-&gt;pxNext = pxNewListItem;\npxIndex-&gt;pxPrevious = pxNewListItem;\n\n/* 记住该节点所在的链表 */\npxNewListItem-&gt;pvContainer = ( void * ) pxList;\n\n/* 链表节点计数器++ */\n( pxList-&gt;uxNumberOfItems )++;\n}</code></pre>\n\n<h4>2.2.2将节点按照升序排列插入到链表（按位置插入）<br /><img alt=\"\" height=\"240\" src=\"https://img-blog.csdnimg.cn/direct/108c055d203a44a298d9504be3b49f49.png\" width=\"680\" /></h4>\n\n<p>思路：</p>\n\n<p>①新节点的next指向根节点内部尾节点：pxNewListItem-&gt;pxNext = pxIndex;</p>\n\n<p>②新节点的previous指针指向根节点内部尾节点：</p>\n\n<p>                pxNewListItem-&gt;pxPrevious = pxIndex-&gt;pxPrevious;</p>\n\n<p>③根节点内部尾节点next指向新节点：pxIndex-&gt;pxPrevious-&gt;pxNext = pxNewListItem;</p>\n\n<p>④根节点内部尾节点previous指向新节点：pxIndex-&gt;pxPrevious = pxNewListItem;<br />\n⑤新节点指针指向根节点所在链表：pxNewListItem-&gt;pvContainer = ( void * ) pxList;</p>\n\n<p>⑥计数值++：( pxList-&gt;uxNumberOfItems )++;</p>\n\n<p>源代码可以不理解，知道函数是干什么的就行</p>\n\n<p>仿真结果，仿真记得一步一步运行代码，不然代码在初始位置，没结果</p>\n\n<p>2.2.3删除</p>\n\n<p></p>\n\n<p>2.2.4</p>\n\n<p><img alt=\"\" height=\"32\" src=\"https://img-blog.csdnimg.cn/direct/a82f4e3b5d40482f901c5672633a6bdd.png\" width=\"249\" /></p>\n\n<p><img alt=\"\" height=\"690\" src=\"https://img-blog.csdnimg.cn/direct/335b5e38dd0b445c8c6c1070d8d9242a.png\" width=\"830\" /></p>\n\n<h2>3.任务的定义与任务切换的实现</h2>\n\n<h3>3.1什么是任务</h3>\n\n<p><img alt=\"\" height=\"237\" src=\"https://img-blog.csdnimg.cn/direct/57ee9820bdf140469e67b6072af4d295.png\" width=\"577\" /></p>\n\n<p>在多任务系统中，两个任务不断切换的效果图如下图所示，即两个变量的波形是完全一样的，就好像 CPU 在同时干两件事一样，这才是多任务的意义。虽然两者的波形图一样，但是，代码的实现方式是完全不一样的，由原来的顺序执行变成了任务的主动切换，这是根本区别。<br />\n <img alt=\"\" height=\"145\" src=\"https://img-blog.csdnimg.cn/direct/95fafcb84bc04b2bb467ecefa512c625.png\" width=\"482\" /></p>\n\n<h3>3.2创建任务</h3>\n\n<p>1.定义任务栈</p>\n\n<p>        栈是单片机 <span style=\"background-color:#ffd900;\">RAM</span> 里面<span style=\"background-color:#ffd900;\">一段连续的内存空间</span>，栈的<span style=\"background-color:#ffd900;\">大小</span>一般在<span style=\"background-color:#ffd900;\">启动文件或者链接脚本</span>里面指定， 最后由 <span style=\"background-color:#ffd900;\">C 库函数_main </span>进行<span style=\"background-color:#ffd900;\">初始化</span>。</p>\n\n<p>        在多任务系统中，每个任务都是独立的，互不干扰的，所以要为每个任务都分配独立的栈空间，<span style=\"background-color:#ffd900;\">有多少个任务就需要定义多少个任务栈</span>，这个栈空间通常是一个预先定义好的全局数组， 也可以是动态分配的一段内存空间，但它们都存在于 RAM 中。</p>\n\n<p><img alt=\"\" height=\"97\" src=\"https://img-blog.csdnimg.cn/direct/00dee0ff8c9f4a4baf5013070803e1a6.png\" width=\"580\" /></p>\n\n<p>代码清单 7-3 (1)： <span style=\"background-color:#ed7976;\">任务栈</span>其实就是一个预先定义好的全局数组，数据类型为<span style=\"background-color:#ed7976;\">StackType_t</span>，大小由 TASK1_STACK_SIZE 这个宏来定义， 默认为 128，单位为字，即 512字节，这也是 FreeRTOS 推荐的最小的任务栈。在 FreeRTOS 中，凡是涉及到数据类型的地方， FreeRTOS 都会将标准的 C 数据类型用 typedef 重新取一个类型名。这些经过重定义的数据类型放在 portmacro.h中，见下图。<br /><img alt=\"\" height=\"324\" src=\"https://img-blog.csdnimg.cn/direct/fcb9c18c1063461da98973e225c2bed4.png\" width=\"414\" /></p>\n\n<p>2.定义任务函数</p>\n\n<p>任务是一个独立的函数，函数主体无限循环且不能返回。</p>\n\n<pre>\n<code class=\"language-cpp\">/* 软件延时 */\nvoid delay (uint32_t count)\n{\nfor(; count!=0; count--);\n}\n/* 任务1 */\nvoid Task1_Entry( void *p_arg )\n{\nfor( ;; )\n{\nflag1 = 1;\ndelay( 100 ); \nflag1 = 0;\ndelay( 100 );\n\n}\n}\n\n/* 任务2 */\nvoid Task2_Entry( void *p_arg )\n{\nfor( ;; )\n{\nflag2 = 1;\ndelay( 100 ); \nflag2 = 0;\ndelay( 100 );\n\n}\n}\n</code></pre>\n\n<p>3.定义任务控制块</p>\n\n<p>在多任务系统中， 任务的执行是由系统调度的。系统为了顺利的调度任务，为每个任务都额外定义了一个任务控制块，这个<span style=\"background-color:#ed7976;\">任务控制块</span>就相当于任务的身份证，里面存有<span style=\"background-color:#ed7976;\">任务的所有信息</span>，比如任务的栈指针，任务名称， 任务的形参等。有了这个任务控制块之后，以后系统对任务的全部操作都可以通过这个任务控制块来实现。 定义一个任务控制块需要一个新的数据类型， 该数据类型在<br />\ntask.c 这 C 头文件中声明（为了 tskTCB 这个数据类型能在其它地方使用，讲解的时候我把这个任务控制块的声明放在了 FreeRTOS.h 这个头文件） ，具体的声明代码如下，使用它可以为每个任务都定义一个任务控制块实体。</p>\n\n<pre>\n<code class=\"language-cpp\">typedef struct tskTaskControlBlock\n{\nvolatile StackType_t *pxTopOfStack; /* 栈顶 */\n\nListItem_t xStateListItem; /* 任务节点 */\n\nStackType_t *pxStack; /* 任务栈起始地址 */\n/* 任务名称，字符串形式 */\nchar pcTaskName[ configMAX_TASK_NAME_LEN ]; \n} tskTCB;\ntypedef tskTCB TCB_t;</code></pre>\n\n<p>main里</p>\n\n<p> <img alt=\"\" height=\"82\" src=\"https://img-blog.csdnimg.cn/direct/091c5c475ece468884ea1713680850ab.png\" width=\"241\" /></p>\n\n<p>4.任务创建函数xTaskCreateStatic()</p>\n\n<p>任务创建函数 xTaskCreateStatic()把任务的栈， 任务的函数实体， 任务的控制块联系起来，进而使系统能统一调度。</p>\n\n<p>任务：可独立执行的代码单元，可以是函数和方法</p>\n\n<p>任务控制块：用于描述和管理任务的数据结构，包含了任务的状态、优先级、堆栈等信息。</p>\n\n<p>任务栈：任务的空间用于保存任务的局部变量，函数调用信息以及任务的上下文</p>\n\n<p><strong> ​​​​​</strong>任务句柄(Task_Handle):是一个指向任务控制块的指针<img alt=\"\" height=\"597\" src=\"https://img-blog.csdnimg.cn/direct/14f0c3765fa645f189dccb4f816857f8.png\" width=\"1200\" /></p>\n\n<p>创建任务函数的返回值就是Task_Handle，可以通过这个指针操作任务相关内容</p>\n\n<pre>\n<code class=\"language-cpp\">#if( configSUPPORT_STATIC_ALLOCATION == 1 )\n//静态创建任务\nTaskHandle_t xTaskCreateStatic( TaskFunction_t pxTaskCode, /* 任务入口 */ //函数指针，指向任务函数本身\nconst char * const pcName, /* 任务名称，字符串形式 */\nconst uint32_t ulStackDepth, /* 任务栈大小，单位为字 */ //任务栈的大小\nvoid * const pvParameters, /* 任务形参 */ //任务函数本身的参数\nStackType_t * const puxStackBuffer, /* 任务栈起始地址 */\nTCB_t * const pxTaskBuffer ) /* 任务控制块指针 */\n{\nTCB_t *pxNewTCB; //1.定义新任务控制块指针\nTaskHandle_t xReturn; //2.返回值，后面用\n\nif( ( pxTaskBuffer != NULL ) &amp;&amp; ( puxStackBuffer != NULL ) ) //3.参数中的任务控制块指针栈指针不为空\n{ \npxNewTCB = ( TCB_t * ) pxTaskBuffer; //4.将参数中指定的任务控制块指针赋给1中新建的块\npxNewTCB-&gt;pxStack = ( StackType_t * ) puxStackBuffer; //5.将参数中指定的任务栈指针赋给任务控制块中的任务栈起始地址\n\n/* 创建新的任务 */ //6.初始化任务 跳转到line87\nprvInitialiseNewTask( pxTaskCode, /* 任务入口 */\npcName, /* 任务名称，字符串形式 */\nulStackDepth, /* 任务栈大小，单位为字 */ \npvParameters, /* 任务形参 */\n&amp;xReturn, /* 任务句柄 */ //指向任务控制块，用于回调\npxNewTCB); /* 任务控制块指针 */ //63行\n\n}\nelse\n{\nxReturn = NULL;\n}\n\n/* 返回任务句柄，如果任务创建成功，此时xReturn应该指向任务控制块 */\nreturn xReturn;\n}\n\n#endif /* configSUPPORT_STATIC_ALLOCATION */\n\n//初始化任务\nstatic void prvInitialiseNewTask( TaskFunction_t pxTaskCode, /* 任务入口 */\nconst char * const pcName, /* 任务名称，字符串形式 */\nconst uint32_t ulStackDepth, /* 任务栈大小，单位为字 */\nvoid * const pvParameters, /* 任务形参 */\nTaskHandle_t * const pxCreatedTask, /* 任务句柄 */ //指向任务控制块\nTCB_t *pxNewTCB ) /* 任务控制块指针 */\n\n{\nStackType_t *pxTopOfStack;\nUBaseType_t x; \n\n/* 获取栈顶地址 */ //把传过来的栈顶做八字节对齐\npxTopOfStack = pxNewTCB-&gt;pxStack + ( ulStackDepth - ( uint32_t ) 1 );\n//pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) &amp; ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) );\n/* 向下做8字节对齐 */\npxTopOfStack = ( StackType_t * ) ( ( ( uint32_t ) pxTopOfStack ) &amp; ( ~( ( uint32_t ) 0x0007 ) ) ); \n\n/* 将任务的名字存储在TCB中 */\nfor( x = ( UBaseType_t ) 0; x &lt; ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )\n{\npxNewTCB-&gt;pcTaskName[ x ] = pcName[ x ];\n\nif( pcName[ x ] == 0x00 )\n{\nbreak;\n}\n}\n/* 任务名字的长度不能超过configMAX_TASK_NAME_LEN */\npxNewTCB-&gt;pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\\0';\n\n/* 初始化TCB中的xStateListItem节点 */\nvListInitialiseItem( &amp;( pxNewTCB-&gt;xStateListItem ) );\n/* 设置xStateListItem节点的拥有者 */\nlistSET_LIST_ITEM_OWNER( &amp;( pxNewTCB-&gt;xStateListItem ), pxNewTCB );\n\n\n/* 初始化任务栈 */ //将空闲栈返回过来赋值给pxNewTCB块里的栈顶pxTopOfStack\npxNewTCB-&gt;pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters ); //初始化寄存器 跳转到line135\n\n\n/* 让任务句柄指向任务控制块 */\nif( ( void * ) pxCreatedTask != NULL )\n{ \n*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;\n}\n}//回到line67\n\n/* 初始化任务相关的列表 */\nvoid prvInitialiseTaskLists( void )\n{\nUBaseType_t uxPriority;\n\n\nfor( uxPriority = ( UBaseType_t ) 0U; uxPriority &lt; ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )\n{\nvListInitialise( &amp;( pxReadyTasksLists[ uxPriority ] ) );\n}</code></pre>\n\n<p> prvInitialiseTaskLists()函数做的事如下，将栈顶pxTopOfStack返回​​​​​​​给<img alt=\"\" height=\"569\" src=\"https://img-blog.csdnimg.cn/direct/05adb350df764d428610e2e449aaf94f.png\" width=\"1037\" /></p>\n\n<p>也就是说 xTaskCreateStatic()之后，任务的栈顶找到了，任务节点初始化完成，任务栈起始地址找到，任务名是任务函数名，最终<span style=\"background-color:#ed7976;\">xTaskCreateStatic返回值指向任务控制块</span>。</p>\n\n<p></p>\n\n<h3 style=\"background-color:transparent;\">3.3实现就绪队列</h3>\n\n<p>1.定义就绪列表<br />\n任务创建好之后，我们需要把任务添加到就绪列表里面， 表示任务已经就绪，系统随时可以调度,就绪列表在 task.c 中定义。</p>\n\n<p><img alt=\"\" height=\"421\" src=\"https://img-blog.csdnimg.cn/direct/79670fa1304c420ba950c32b5c69aa24.png\" width=\"422\" /></p>\n\n<p>（1）</p>\n", "status": 2, "cleanedContent": "<h1>一、从零到一写FreeRTOS</h1> <h2>1.新建工程</h2> <p>步骤：</p> <p><img alt=\"\" height=\"447\" src=\"\" width=\"569\" /></p> <p><span style=\"background-color:#ffd900;\">注：最好使用低版本的keil，之前用的最新版本(5.39)，这个版本不预先安装complier version5，会导致编译失败，出错。安装完成后也可能会因为版本不匹配编译不过。后续都改用野火提供的5.26版本。</span></p> <p>1.任意位置新建工程，和也野火的裸机开发类似，新建文件夹，在文件夹里新建如下文件夹</p> <p><img alt=\"\" height=\"424\" src=\"\" width=\"710\" /></p> <p>下面在文件夹里 添加文件</p> <p>Doc添加readme文档，爱写啥写啥，也可以不写</p> <p><img alt=\"\" height=\"464\" src=\"\" width=\"1135\" /></p> <p>freertos添加如下文件夹</p> <p><img alt=\"\" height=\"397\" src=\"\" width=\"1122\" /></p> <p>porta里，RVDS也是空的，和keil相关，到时候建工程的之后就会有了</p> <p><img alt=\"\" height=\"316\" src=\"\" width=\"1134\" /></p> <p>2.打开keil，新建工程，保存到刚才新建的文件夹的project里，名字随便起，选完以后选内核</p> <p><img alt=\"\" height=\"274\" src=\"\" width=\"369\" /></p> <p>之后配置</p> <p>注意device，不要选C.Startup</p> <p><img alt=\"\" height=\"965\" src=\"\" width=\"1200\" /></p> <p>选择下面这个，</p> <p><img alt=\"\" height=\"335\" src=\"\" width=\"963\" /> 不然编译会报错<img alt=\"\" height=\"387\" src=\"\" width=\"1200\" /></p> <p> 解决方法链接：<a data-link-icon=\"\" data-link-title=\"\" href=\"\" title=\"\"></a> 只能解决报错，不能解决警告</p> <p>3.文件分组</p> <p><img alt=\"\" height=\"649\" src=\"\" width=\"817\" /></p> <p>4.添加文件</p> <p>mian.c(User里)</p> <p>文件夹里添加完了，双击keil里的user文件夹添加进来，添加成如下这样</p> <p><img alt=\"\" height=\"491\" src=\"\" width=\"307\" /></p> <p>配置，配套资料里有，回头写</p> <p>工程模板就建好了，编译，没报错</p> <p><img alt=\"\" height=\"139\" src=\"\" width=\"681\" /></p> <h2>2.列表项</h2> <p>在 FreeRTOS 中存在着大量的基础数据结构列表和列表项的操作，要想读懂 FreeRTOS的源码或者从 0 到 1 开始实现 FreeRTOS，就必须弄懂列表和列表项的操作。</p> <h3>2.1FreeRTOS 中链表的实现</h3> <p>复制之前配置好的工程，重命名，新建文件并添加到FreeRTOS/Source里</p> <p>从例程文件里拷贝以下文件到freertos/include文件夹里，并添加到工程里</p> <p><img alt=\"\" height=\"509\" src=\"\" width=\"316\" /></p> <p>这块需要c语言和数据结构链表的知识，之前的文章里有，这里不再赘述，去主页找</p> <p>FreeRTOS中的链表有根节点和普通节点，普通节点用来存放数据，根节点又称头节点，是链表的标识，其中记录了链表数据节点的个数和用来遍历链表的指针，还包含了尾节点，因为是双向链表，头即是尾，尾即是头，根节点不存放数据。</p> <p>一个普通节点(ListItem_t)结构体里有如下内容</p> <p><img alt=\"\" height=\"252\" src=\"\" width=\"479\" /></p> <p>由此在list.h文件加入列表项结构体代码</p> <pre> <code class=\"language-cpp\">#include \"FreeRTOS.h\" //定义列表项结构体 /* ************************************************************************ * 结构体定义 ************************************************************************ */ /* 节点结构体定义 */ struct xLIST_ITEM { TickType_t xItemValue; /* 辅助值，用于帮助节点做顺序排列 */ struct xLIST_ITEM * pxNext; /* 指向链表下一个节点 */ struct xLIST_ITEM * pxPrevious; /* 指向链表前一个节点 */ void * pvOwner; /* 指向拥有该节点的内核对象，通常是TCB */ void * pvContainer; /* 指向该节点所在的链表 */ }; typedef struct xLIST_ITEM ListItem_t; /* 节点数据类型重定义 */</code></pre> <p>初始化节点</p> <p> pvContainer：不指向任意一个链表</p> <pre> <code class=\"language-cpp\">void vListInitialiseItem( ListItem_t * const pxItem ) { /* 初始化该节点所在的链表为空，表示节点还没有插入任何链表 */ pxItem->pvContainer = NULL; }</code></pre> <p>根节点(头节点)</p> <p><img alt=\"\" height=\"322\" src=\"\" width=\"535\" /></p> <p>创建根节点结构体</p> <pre> <code class=\"language-cpp\">//根节点里有尾节点，所以先建立尾节点结构体 struct xMINI_LIST_ITEM { TickType_t xItemValue; /* 辅助值，用于帮助节点做升序排列 */ struct xLIST_ITEM * pxNext; /* 指向链表下一个节点 */ struct xLIST_ITEM * pxPrevious; /* 指向链表前一个节点 */ }; typedef struct xMINI_LIST_ITEM MiniListItem_t; /* 最小节点数据类型重定义 */ /* 链表结构体定义 */ typedef struct xLIST { UBaseType_t uxNumberOfItems; /* 链表节点计数器 */ ListItem_t * pxIndex; /* 链表节点索引指针 */ MiniListItem_t xListEnd; /* 链表最后一个节点 */ } List_t;</code></pre> <p>初始化根节点</p> <p>注：</p> <p> 1.普通节点类型为<span style=\"background-color:#ffd900;\">ListItem_t</span></p> <p> 2.根节点里包含尾节点，建立根节点之前要先定义尾节点，其数据类型为<span style=\"background-color:#ffd900;\">MiniListItem_t</span></p> <p> 3. 尾节点内部指针类型为普通节点<span style=\"background-color:#ffd900;\">ListItem_t</span>，因为要指向普通节点，须保持数据类型一致</p> <p> 4.根节点内<span style=\"background-color:#ffd900;\">pxIndex</span>为<span style=\"background-color:#ffd900;\">ListItem_t *</span>类型，指向内部尾节点时需强转<span style=\"background-color:#ffd900;\">( ListItem_t * ) &(</span> <span style=\"background-color:#ffd900;\">pxList->xListEnd )</span></p> <p> 5.同理，尾节点内next指针和previous指针都需要强转</p> <p><img alt=\"\" height=\"276\" src=\"\" width=\"766\" /></p> <pre> <code class=\"language-cpp\">void vListInitialise( List_t * const pxList ) { /* 将链表索引指针指向最后一个节点 */ pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /* 将链表最后一个节点的辅助排序的值设置为最大，确保该节点就是链表的最后节点 */ pxList->xListEnd.xItemValue = portMAX_DELAY; /* 将最后一个节点的 pxNext 和 pxPrevious 指针均指向节点自身，表示链表为空 */ pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd ); pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd ); /* 初始化链表节点计数器的值为 0，表示链表为空 */ pxList->uxNumberOfItems = ( UBaseType_t ) 0U; }</code></pre> <h3>2.2 插入节点</h3> <h4>2.2.1将节点插入到链表的尾部</h4> <p>将节点插入到链表的尾部（可以理解为头部） 就是将一个新的节点插入到一个空的链<br /> 表<br /> 思路：</p> <p><img alt=\"\" height=\"294\" src=\"\" width=\"449\" /></p> <p>①新节点的next指向根节点内部尾节点：pxNewListItem->pxNext = xListEnd;</p> <p>②新节点的previous指针指向根节点内部尾节点的previous：</p> <p> pxNewListItem->pxPrevious = xListEnd->pxPrevious;</p> <p>③根节点内部尾节点next指向新节点：pxIndex->pxPrevious->pxNext = pxNewListItem;</p> <p>④根节点内部尾节点previous指向新节点：pxIndex->pxPrevious = pxNewListItem;<br /> ⑤新节点指针指向根节点所在链表：pxNewListItem->pvContainer = ( void * ) pxList;</p> <p>⑥计数值++：( pxList->uxNumberOfItems )++;<br /> ⑦⑧⑨⑩<br /> </p> <pre> <code class=\"language-cpp\">/* 将节点插入到链表的尾部 */ void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem ) { ListItem_t * const pxIndex = pxList->pxIndex;//引入一个指针指向不可以更改的普通节点类型的指针，作为标识 pxNewListItem->pxNext = pxIndex; pxNewListItem->pxPrevious = pxIndex->pxPrevious; pxIndex->pxPrevious->pxNext = pxNewListItem; pxIndex->pxPrevious = pxNewListItem; /* 记住该节点所在的链表 */ pxNewListItem->pvContainer = ( void * ) pxList; /* 链表节点计数器++ */ ( pxList->uxNumberOfItems )++; }</code></pre> <h4>2.2.2将节点按照升序排列插入到链表（按位置插入）<br /><img alt=\"\" height=\"240\" src=\"\" width=\"680\" /></h4> <p>思路：</p> <p>①新节点的next指向根节点内部尾节点：pxNewListItem->pxNext = pxIndex;</p> <p>②新节点的previous指针指向根节点内部尾节点：</p> <p> pxNewListItem->pxPrevious = pxIndex->pxPrevious;</p> <p>③根节点内部尾节点next指向新节点：pxIndex->pxPrevious->pxNext = pxNewListItem;</p> <p>④根节点内部尾节点previous指向新节点：pxIndex->pxPrevious = pxNewListItem;<br /> ⑤新节点指针指向根节点所在链表：pxNewListItem->pvContainer = ( void * ) pxList;</p> <p>⑥计数值++：( pxList->uxNumberOfItems )++;</p> <p>源代码可以不理解，知道函数是干什么的就行</p> <p>仿真结果，仿真记得一步一步运行代码，不然代码在初始位置，没结果</p> <p>2.2.3删除</p> <p></p> <p>2.2.4</p> <p><img alt=\"\" height=\"32\" src=\"\" width=\"249\" /></p> <p><img alt=\"\" height=\"690\" src=\"\" width=\"830\" /></p> <h2>3.任务的定义与任务切换的实现</h2> <h3>3.1什么是任务</h3> <p><img alt=\"\" height=\"237\" src=\"\" width=\"577\" /></p> <p>在多任务系统中，两个任务不断切换的效果图如下图所示，即两个变量的波形是完全一样的，就好像 CPU 在同时干两件事一样，这才是多任务的意义。虽然两者的波形图一样，但是，代码的实现方式是完全不一样的，由原来的顺序执行变成了任务的主动切换，这是根本区别。<br /> <img alt=\"\" height=\"145\" src=\"\" width=\"482\" /></p> <h3>3.2创建任务</h3> <p>1.定义任务栈</p> <p> 栈是单片机 <span style=\"background-color:#ffd900;\">RAM</span> 里面<span style=\"background-color:#ffd900;\">一段连续的内存空间</span>，栈的<span style=\"background-color:#ffd900;\">大小</span>一般在<span style=\"background-color:#ffd900;\">启动文件或者链接脚本</span>里面指定， 最后由 <span style=\"background-color:#ffd900;\">C 库函数_main </span>进行<span style=\"background-color:#ffd900;\">初始化</span>。</p> <p> 在多任务系统中，每个任务都是独立的，互不干扰的，所以要为每个任务都分配独立的栈空间，<span style=\"background-color:#ffd900;\">有多少个任务就需要定义多少个任务栈</span>，这个栈空间通常是一个预先定义好的全局数组， 也可以是动态分配的一段内存空间，但它们都存在于 RAM 中。</p> <p><img alt=\"\" height=\"97\" src=\"\" width=\"580\" /></p> <p>代码清单 7-3 (1)： <span style=\"background-color:#ed7976;\">任务栈</span>其实就是一个预先定义好的全局数组，数据类型为<span style=\"background-color:#ed7976;\">StackType_t</span>，大小由 TASK1_STACK_SIZE 这个宏来定义， 默认为 128，单位为字，即 512字节，这也是 FreeRTOS 推荐的最小的任务栈。在 FreeRTOS 中，凡是涉及到数据类型的地方， FreeRTOS 都会将标准的 C 数据类型用 typedef 重新取一个类型名。这些经过重定义的数据类型放在 portmacro.h中，见下图。<br /><img alt=\"\" height=\"324\" src=\"\" width=\"414\" /></p> <p>2.定义任务函数</p> <p>任务是一个独立的函数，函数主体无限循环且不能返回。</p> <pre> <code class=\"language-cpp\">/* 软件延时 */ void delay (uint32_t count) { for(; count!=0; count--); } /* 任务1 */ void Task1_Entry( void *p_arg ) { for( ;; ) { flag1 = 1; delay( 100 ); flag1 = 0; delay( 100 ); } } /* 任务2 */ void Task2_Entry( void *p_arg ) { for( ;; ) { flag2 = 1; delay( 100 ); flag2 = 0; delay( 100 ); } } </code></pre> <p>3.定义任务控制块</p> <p>在多任务系统中， 任务的执行是由系统调度的。系统为了顺利的调度任务，为每个任务都额外定义了一个任务控制块，这个<span style=\"background-color:#ed7976;\">任务控制块</span>就相当于任务的身份证，里面存有<span style=\"background-color:#ed7976;\">任务的所有信息</span>，比如任务的栈指针，任务名称， 任务的形参等。有了这个任务控制块之后，以后系统对任务的全部操作都可以通过这个任务控制块来实现。 定义一个任务控制块需要一个新的数据类型， 该数据类型在<br /> task.c 这 C 头文件中声明（为了 tskTCB 这个数据类型能在其它地方使用，讲解的时候我把这个任务控制块的声明放在了 FreeRTOS.h 这个头文件） ，具体的声明代码如下，使用它可以为每个任务都定义一个任务控制块实体。</p> <pre> <code class=\"language-cpp\">typedef struct tskTaskControlBlock { volatile StackType_t *pxTopOfStack; /* 栈顶 */ ListItem_t xStateListItem; /* 任务节点 */ StackType_t *pxStack; /* 任务栈起始地址 */ /* 任务名称，字符串形式 */ char pcTaskName[ configMAX_TASK_NAME_LEN ]; } tskTCB; typedef tskTCB TCB_t;</code></pre> <p>main里</p> <p> <img alt=\"\" height=\"82\" src=\"\" width=\"241\" /></p> <p>4.任务创建函数xTaskCreateStatic()</p> <p>任务创建函数 xTaskCreateStatic()把任务的栈， 任务的函数实体， 任务的控制块联系起来，进而使系统能统一调度。</p> <p>任务：可独立执行的代码单元，可以是函数和方法</p> <p>任务控制块：用于描述和管理任务的数据结构，包含了任务的状态、优先级、堆栈等信息。</p> <p>任务栈：任务的空间用于保存任务的局部变量，函数调用信息以及任务的上下文</p> <p><strong> </strong>任务句柄(Task_Handle):是一个指向任务控制块的指针<img alt=\"\" height=\"597\" src=\"\" width=\"1200\" /></p> <p>创建任务函数的返回值就是Task_Handle，可以通过这个指针操作任务相关内容</p> <pre> <code class=\"language-cpp\">#if( configSUPPORT_STATIC_ALLOCATION == 1 ) //静态创建任务 TaskHandle_t xTaskCreateStatic( TaskFunction_t pxTaskCode, /* 任务入口 */ //函数指针，指向任务函数本身 const char * const pcName, /* 任务名称，字符串形式 */ const uint32_t ulStackDepth, /* 任务栈大小，单位为字 */ //任务栈的大小 void * const pvParameters, /* 任务形参 */ //任务函数本身的参数 StackType_t * const puxStackBuffer, /* 任务栈起始地址 */ TCB_t * const pxTaskBuffer ) /* 任务控制块指针 */ { TCB_t *pxNewTCB; //1.定义新任务控制块指针 TaskHandle_t xReturn; //2.返回值，后面用 if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) ) //3.参数中的任务控制块指针栈指针不为空 { pxNewTCB = ( TCB_t * ) pxTaskBuffer; //4.将参数中指定的任务控制块指针赋给1中新建的块 pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer; //5.将参数中指定的任务栈指针赋给任务控制块中的任务栈起始地址 /* 创建新的任务 */ //6.初始化任务 跳转到line87 prvInitialiseNewTask( pxTaskCode, /* 任务入口 */ pcName, /* 任务名称，字符串形式 */ ulStackDepth, /* 任务栈大小，单位为字 */ pvParameters, /* 任务形参 */ &xReturn, /* 任务句柄 */ //指向任务控制块，用于回调 pxNewTCB); /* 任务控制块指针 */ //63行 } else { xReturn = NULL; } /* 返回任务句柄，如果任务创建成功，此时xReturn应该指向任务控制块 */ return xReturn; } #endif /* configSUPPORT_STATIC_ALLOCATION */ //初始化任务 static void prvInitialiseNewTask( TaskFunction_t pxTaskCode, /* 任务入口 */ const char * const pcName, /* 任务名称，字符串形式 */ const uint32_t ulStackDepth, /* 任务栈大小，单位为字 */ void * const pvParameters, /* 任务形参 */ TaskHandle_t * const pxCreatedTask, /* 任务句柄 */ //指向任务控制块 TCB_t *pxNewTCB ) /* 任务控制块指针 */ { StackType_t *pxTopOfStack; UBaseType_t x; /* 获取栈顶地址 */ //把传过来的栈顶做八字节对齐 pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 ); //pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /* 向下做8字节对齐 */ pxTopOfStack = ( StackType_t * ) ( ( ( uint32_t ) pxTopOfStack ) & ( ~( ( uint32_t ) 0x0007 ) ) ); /* 将任务的名字存储在TCB中 */ for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ ) { pxNewTCB->pcTaskName[ x ] = pcName[ x ]; if( pcName[ x ] == 0x00 ) { break; } } /* 任务名字的长度不能超过configMAX_TASK_NAME_LEN */ pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\\0'; /* 初始化TCB中的xStateListItem节点 */ vListInitialiseItem( &( pxNewTCB->xStateListItem ) ); /* 设置xStateListItem节点的拥有者 */ listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB ); /* 初始化任务栈 */ //将空闲栈返回过来赋值给pxNewTCB块里的栈顶pxTopOfStack pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters ); //初始化寄存器 跳转到line135 /* 让任务句柄指向任务控制块 */ if( ( void * ) pxCreatedTask != NULL ) { *pxCreatedTask = ( TaskHandle_t ) pxNewTCB; } }//回到line67 /* 初始化任务相关的列表 */ void prvInitialiseTaskLists( void ) { UBaseType_t uxPriority; for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ ) { vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) ); }</code></pre> <p> prvInitialiseTaskLists()函数做的事如下，将栈顶pxTopOfStack返回给<img alt=\"\" height=\"569\" src=\"\" width=\"1037\" /></p> <p>也就是说 xTaskCreateStatic()之后，任务的栈顶找到了，任务节点初始化完成，任务栈起始地址找到，任务名是任务函数名，最终<span style=\"background-color:#ed7976;\">xTaskCreateStatic返回值指向任务控制块</span>。</p> <p></p> <h3 style=\"background-color:transparent;\">3.3实现就绪队列</h3> <p>1.定义就绪列表<br /> 任务创建好之后，我们需要把任务添加到就绪列表里面， 表示任务已经就绪，系统随时可以调度,就绪列表在 task.c 中定义。"}
{"url": "https://blog.csdn.net/lingyun2761/article/details/134921334", "article_id": 134921334, "username": "lingyun2761", "title": "【无标题】", "body": "<p></p><div class=\"toc\"><h3>这里写自定义目录标题</h3><ul><li><a href=\"#Markdown_2\">欢迎使用Markdown编辑器</a></li><ul><li><a href=\"#_6\">新的改变</a></li><li><a href=\"#_19\">功能快捷键</a></li><li><a href=\"#_35\">合理的创建标题，有助于目录的生成</a></li><li><a href=\"#_41\">如何改变文本的样式</a></li><li><a href=\"#_57\">插入链接与图片</a></li><li><a href=\"#_71\">如何插入一段漂亮的代码片</a></li><li><a href=\"#_79\">生成一个适合你的列表</a></li><li><a href=\"#_92\">创建一个表格</a></li><ul><li><a href=\"#_100\">设定内容居中、居左、居右</a></li><li><a href=\"#SmartyPants_108\">SmartyPants</a></li></ul><li><a href=\"#_116\">创建一个自定义列表</a></li><li><a href=\"#_124\">如何创建一个注脚</a></li><li><a href=\"#_130\">注释也是必不可少的</a></li><li><a href=\"#KaTeX_136\">KaTeX数学公式</a></li><li><a href=\"#_149\">新的甘特图功能，丰富你的文章</a></li><li><a href=\"#UML__163\">UML 图表</a></li><li><a href=\"#FLowchart_191\">FLowchart流程图</a></li><li><a href=\"#_208\">导出与导入</a></li><ul><li><a href=\"#_210\">导出</a></li><li><a href=\"#_213\">导入</a></li></ul></ul></ul></div><p></p>\n<h1><a id=\"Markdown_2\"></a>欢迎使用Markdown编辑器</h1>\n<p>你好！ 这是你第一次使用 <strong>Markdown编辑器</strong> 所展示的欢迎页。如果你想学习如何使用Markdown编辑器, 可以仔细阅读这篇文章，了解一下Markdown的基本语法知识。</p>\n<h2><a id=\"_6\"></a>新的改变</h2>\n<p>我们对Markdown编辑器进行了一些功能拓展与语法支持，除了标准的Markdown编辑器功能，我们增加了如下几点新功能，帮助你用它写博客：</p>\n<ol>\n<li><strong>全新的界面设计</strong> ，将会带来全新的写作体验；</li>\n<li>在创作中心设置你喜爱的代码高亮样式，Markdown <strong>将代码片显示选择的高亮样式</strong> 进行展示；</li>\n<li>增加了 <strong>图片拖拽</strong> 功能，你可以将本地的图片直接拖拽到编辑区域直接展示；</li>\n<li>全新的 <strong>KaTeX数学公式</strong> 语法；</li>\n<li>增加了支持<strong>甘特图的mermaid语法<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">1</a></sup></strong> 功能；</li>\n<li>增加了 <strong>多屏幕编辑</strong> Markdown文章功能；</li>\n<li>增加了 <strong>焦点写作模式、预览模式、简洁写作模式、左右区域同步滚轮设置</strong> 等功能，功能按钮位于编辑区域与预览区域中间；</li>\n<li>增加了 <strong>检查列表</strong> 功能。</li>\n</ol>\n<h2><a id=\"_19\"></a>功能快捷键</h2>\n<p>撤销：<kbd>Ctrl/Command</kbd> + <kbd>Z</kbd><br>\n重做：<kbd>Ctrl/Command</kbd> + <kbd>Y</kbd><br>\n加粗：<kbd>Ctrl/Command</kbd> + <kbd>B</kbd><br>\n斜体：<kbd>Ctrl/Command</kbd> + <kbd>I</kbd><br>\n标题：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>H</kbd><br>\n无序列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>U</kbd><br>\n有序列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>O</kbd><br>\n检查列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>C</kbd><br>\n插入代码：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>K</kbd><br>\n插入链接：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>L</kbd><br>\n插入图片：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>G</kbd><br>\n查找：<kbd>Ctrl/Command</kbd> + <kbd>F</kbd><br>\n替换：<kbd>Ctrl/Command</kbd> + <kbd>G</kbd></p>\n<h2><a id=\"_35\"></a>合理的创建标题，有助于目录的生成</h2>\n<p>直接输入1次<kbd>#</kbd>，并按下<kbd>space</kbd>后，将生成1级标题。<br>\n输入2次<kbd>#</kbd>，并按下<kbd>space</kbd>后，将生成2级标题。<br>\n以此类推，我们支持6级标题。有助于使用<code>TOC</code>语法后生成一个完美的目录。</p>\n<h2><a id=\"_41\"></a>如何改变文本的样式</h2>\n<p><em>强调文本</em> <em>强调文本</em></p>\n<p><strong>加粗文本</strong> <strong>加粗文本</strong></p>\n<p><mark>标记文本</mark></p>\n<p><s>删除文本</s></p>\n<blockquote>\n<p>引用文本</p>\n</blockquote>\n<p>H<sub>2</sub>O is是液体。</p>\n<p>2<sup>10</sup> 运算结果是 1024.</p>\n<h2><a id=\"_57\"></a>插入链接与图片</h2>\n<p>链接: <a href=\"https://www.csdn.net/\">link</a>.</p>\n<p>图片: <img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw\" alt=\"Alt\"></p>\n<p>带尺寸的图片: <img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw\" alt=\"Alt\" width=\"30\" height=\"30\"></p>\n<p>居中的图片: <img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center\" alt=\"Alt\"></p>\n<p>居中并且带尺寸的图片: <img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center\" alt=\"Alt\" width=\"30\" height=\"30\"></p>\n<p>当然，我们为了让用户更加便捷，我们增加了图片拖拽功能。</p>\n<h2><a id=\"_71\"></a>如何插入一段漂亮的代码片</h2>\n<p>去<a href=\"https://mp.csdn.net/console/configBlog\">博客设置</a>页面，选择一款你喜欢的代码片高亮样式，下面展示同样高亮的 <code>代码片</code>.</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token comment\">// An highlighted block</span>\n<span class=\"token keyword\">var</span> foo <span class=\"token operator\">=</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"_79\"></a>生成一个适合你的列表</h2>\n<ul>\n<li>项目\n<ul>\n<li>项目\n<ul>\n<li>项目</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>项目1</li>\n<li>项目2</li>\n<li>项目3</li>\n</ol>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"\"> 计划任务</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" checked=\"true\" disabled=\"\"> 完成任务</li>\n</ul>\n<h2><a id=\"_92\"></a>创建一个表格</h2>\n<p>一个简单的表格是这么创建的：</p>\n\n<table>\n<thead>\n<tr>\n<th>项目</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>电脑</td>\n<td>$1600</td>\n</tr>\n<tr>\n<td>手机</td>\n<td>$12</td>\n</tr>\n<tr>\n<td>导管</td>\n<td>$1</td>\n</tr>\n</tbody>\n</table><h3><a id=\"_100\"></a>设定内容居中、居左、居右</h3>\n<p>使用<code>:---------:</code>居中<br>\n使用<code>:----------</code>居左<br>\n使用<code>----------:</code>居右</p>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">第一列</th>\n<th align=\"right\">第二列</th>\n<th align=\"left\">第三列</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">第一列文本居中</td>\n<td align=\"right\">第二列文本居右</td>\n<td align=\"left\">第三列文本居左</td>\n</tr>\n</tbody>\n</table><h3><a id=\"SmartyPants_108\"></a>SmartyPants</h3>\n<p>SmartyPants将ASCII标点字符转换为“智能”印刷标点HTML实体。例如：</p>\n\n<table>\n<thead>\n<tr>\n<th>TYPE</th>\n<th>ASCII</th>\n<th><abbr title=\"超文本标记语言\">HTML</abbr></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Single backticks</td>\n<td><code>'Isn't this fun?'</code></td>\n<td>‘Isn’t this fun?’</td>\n</tr>\n<tr>\n<td>Quotes</td>\n<td><code>\"Isn't this fun?\"</code></td>\n<td>“Isn’t this fun?”</td>\n</tr>\n<tr>\n<td>Dashes</td>\n<td><code>-- is en-dash, --- is em-dash</code></td>\n<td>– is en-dash, — is em-dash</td>\n</tr>\n</tbody>\n</table><h2><a id=\"_116\"></a>创建一个自定义列表</h2>\n<dl>\n<dt>Markdown</dt>\n<dd>Text-to-<abbr title=\"超文本标记语言\">HTML</abbr> conversion tool</dd>\n<dt>Authors</dt>\n<dd>John</dd>\n<dd>Luke</dd>\n</dl>\n<h2><a id=\"_124\"></a>如何创建一个注脚</h2>\n<p>一个具有注脚的文本。<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">2</a></sup></p>\n<h2><a id=\"_130\"></a>注释也是必不可少的</h2>\n<p>Markdown将文本转换为 <abbr title=\"超文本标记语言\">HTML</abbr>。</p>\n<h2><a id=\"KaTeX_136\"></a>KaTeX数学公式</h2>\n<p>您可以使用渲染LaTeX数学表达式 <a href=\"https://khan.github.io/KaTeX/\">KaTeX</a>:</p>\n<p>Gamma公式展示 <span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Γ</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">!</mo><mspace width=\"1em\"></mspace><mi mathvariant=\"normal\">∀</mi><mi>n</mi><mo>∈</mo><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\Gamma(n) = (n-1)!\\quad\\forall\nn\\in\\mathbb N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height: 1em; vertical-align: -0.25em;\"></span><span class=\"mord\">Γ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 1em; vertical-align: -0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 1em; vertical-align: -0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)!</span><span class=\"mspace\" style=\"margin-right: 1em;\"></span><span class=\"mord\">∀</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.6889em;\"></span><span class=\"mord mathbb\">N</span></span></span></span></span> 是通过欧拉积分</p>\n<p><span class=\"katex--display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"normal\">Γ</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∫</mo><mn>0</mn><mi mathvariant=\"normal\">∞</mi></msubsup><msup><mi>t</mi><mrow><mi>z</mi><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>e</mi><mrow><mo>−</mo><mi>t</mi></mrow></msup><mi>d</mi><mi>t</mi> <mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">\n\\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,.\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height: 1em; vertical-align: -0.25em;\"></span><span class=\"mord\">Γ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right: 0.044em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 2.3262em; vertical-align: -0.9119em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right: 0.4445em; position: relative; top: -0.0011em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.4143em;\"><span class=\"\" style=\"top: -1.7881em; margin-left: -0.4445em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span><span class=\"\" style=\"top: -3.8129em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">∞</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.9119em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.8641em;\"><span class=\"\" style=\"top: -3.113em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right: 0.044em;\">z</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.8436em;\"><span class=\"\" style=\"top: -3.113em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right: 0.1667em;\"></span><span class=\"mord\">.</span></span></span></span></span></span></p>\n<blockquote>\n<p>你可以找到更多关于的信息 <strong>LaTeX</strong> 数学表达式<a href=\"http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\">here</a>.</p>\n</blockquote>\n<h2><a id=\"_149\"></a>新的甘特图功能，丰富你的文章</h2>\n<div class=\"mermaid\"><svg id=\"mermaid-svg-s395Cp0b8m6w8a8q\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 196\" height=\"196\" style=\"max-width: 1200px;\" class=\"mermaid-svg\"><style>#mermaid-svg-s395Cp0b8m6w8a8q {font-family:\"trebuchet ms\",verdana,arial,sans-serif;font-size:16px;fill:#333;}#mermaid-svg-s395Cp0b8m6w8a8q .error-icon{fill:#552222;}#mermaid-svg-s395Cp0b8m6w8a8q .error-text{fill:#552222;stroke:#552222;}#mermaid-svg-s395Cp0b8m6w8a8q .edge-thickness-normal{stroke-width:2px;}#mermaid-svg-s395Cp0b8m6w8a8q .edge-thickness-thick{stroke-width:3.5px;}#mermaid-svg-s395Cp0b8m6w8a8q .edge-pattern-solid{stroke-dasharray:0;}#mermaid-svg-s395Cp0b8m6w8a8q .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-svg-s395Cp0b8m6w8a8q .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-svg-s395Cp0b8m6w8a8q .marker{fill:#333333;stroke:#333333;}#mermaid-svg-s395Cp0b8m6w8a8q .marker.cross{stroke:#333333;}#mermaid-svg-s395Cp0b8m6w8a8q svg{font-family:\"trebuchet ms\",verdana,arial,sans-serif;font-size:16px;}#mermaid-svg-s395Cp0b8m6w8a8q .mermaid-main-font{font-family:\"trebuchet ms\",verdana,arial,sans-serif;font-family:var(--mermaid-font-family);}#mermaid-svg-s395Cp0b8m6w8a8q .exclude-range{fill:#eeeeee;}#mermaid-svg-s395Cp0b8m6w8a8q .section{stroke:none;opacity:0.2;}#mermaid-svg-s395Cp0b8m6w8a8q .section0{fill:rgba(102, 102, 255, 0.49);}#mermaid-svg-s395Cp0b8m6w8a8q .section2{fill:#fff400;}#mermaid-svg-s395Cp0b8m6w8a8q .section1,#mermaid-svg-s395Cp0b8m6w8a8q .section3{fill:white;opacity:0.2;}#mermaid-svg-s395Cp0b8m6w8a8q .sectionTitle0{fill:#333;}#mermaid-svg-s395Cp0b8m6w8a8q .sectionTitle1{fill:#333;}#mermaid-svg-s395Cp0b8m6w8a8q .sectionTitle2{fill:#333;}#mermaid-svg-s395Cp0b8m6w8a8q .sectionTitle3{fill:#333;}#mermaid-svg-s395Cp0b8m6w8a8q .sectionTitle{text-anchor:start;font-family:'trebuchet ms',verdana,arial,sans-serif;font-family:var(--mermaid-font-family);}#mermaid-svg-s395Cp0b8m6w8a8q .grid .tick{stroke:lightgrey;opacity:0.8;shape-rendering:crispEdges;}#mermaid-svg-s395Cp0b8m6w8a8q .grid .tick text{font-family:\"trebuchet ms\",verdana,arial,sans-serif;fill:#333;}#mermaid-svg-s395Cp0b8m6w8a8q .grid path{stroke-width:0;}#mermaid-svg-s395Cp0b8m6w8a8q .today{fill:none;stroke:red;stroke-width:2px;}#mermaid-svg-s395Cp0b8m6w8a8q .task{stroke-width:2;}#mermaid-svg-s395Cp0b8m6w8a8q .taskText{text-anchor:middle;font-family:'trebuchet ms',verdana,arial,sans-serif;font-family:var(--mermaid-font-family);}#mermaid-svg-s395Cp0b8m6w8a8q .taskTextOutsideRight{fill:black;text-anchor:start;font-family:'trebuchet ms',verdana,arial,sans-serif;font-family:var(--mermaid-font-family);}#mermaid-svg-s395Cp0b8m6w8a8q .taskTextOutsideLeft{fill:black;text-anchor:end;}#mermaid-svg-s395Cp0b8m6w8a8q .task.clickable{cursor:pointer;}#mermaid-svg-s395Cp0b8m6w8a8q .taskText.clickable{cursor:pointer;fill:#003163!important;font-weight:bold;}#mermaid-svg-s395Cp0b8m6w8a8q .taskTextOutsideLeft.clickable{cursor:pointer;fill:#003163!important;font-weight:bold;}#mermaid-svg-s395Cp0b8m6w8a8q .taskTextOutsideRight.clickable{cursor:pointer;fill:#003163!important;font-weight:bold;}#mermaid-svg-s395Cp0b8m6w8a8q .taskText0,#mermaid-svg-s395Cp0b8m6w8a8q .taskText1,#mermaid-svg-s395Cp0b8m6w8a8q .taskText2,#mermaid-svg-s395Cp0b8m6w8a8q .taskText3{fill:white;}#mermaid-svg-s395Cp0b8m6w8a8q .task0,#mermaid-svg-s395Cp0b8m6w8a8q .task1,#mermaid-svg-s395Cp0b8m6w8a8q .task2,#mermaid-svg-s395Cp0b8m6w8a8q .task3{fill:#8a90dd;stroke:#534fbc;}#mermaid-svg-s395Cp0b8m6w8a8q .taskTextOutside0,#mermaid-svg-s395Cp0b8m6w8a8q .taskTextOutside2{fill:black;}#mermaid-svg-s395Cp0b8m6w8a8q .taskTextOutside1,#mermaid-svg-s395Cp0b8m6w8a8q .taskTextOutside3{fill:black;}#mermaid-svg-s395Cp0b8m6w8a8q .active0,#mermaid-svg-s395Cp0b8m6w8a8q .active1,#mermaid-svg-s395Cp0b8m6w8a8q .active2,#mermaid-svg-s395Cp0b8m6w8a8q .active3{fill:#bfc7ff;stroke:#534fbc;}#mermaid-svg-s395Cp0b8m6w8a8q .activeText0,#mermaid-svg-s395Cp0b8m6w8a8q .activeText1,#mermaid-svg-s395Cp0b8m6w8a8q .activeText2,#mermaid-svg-s395Cp0b8m6w8a8q .activeText3{fill:black!important;}#mermaid-svg-s395Cp0b8m6w8a8q .done0,#mermaid-svg-s395Cp0b8m6w8a8q .done1,#mermaid-svg-s395Cp0b8m6w8a8q .done2,#mermaid-svg-s395Cp0b8m6w8a8q .done3{stroke:grey;fill:lightgrey;stroke-width:2;}#mermaid-svg-s395Cp0b8m6w8a8q .doneText0,#mermaid-svg-s395Cp0b8m6w8a8q .doneText1,#mermaid-svg-s395Cp0b8m6w8a8q .doneText2,#mermaid-svg-s395Cp0b8m6w8a8q .doneText3{fill:black!important;}#mermaid-svg-s395Cp0b8m6w8a8q .crit0,#mermaid-svg-s395Cp0b8m6w8a8q .crit1,#mermaid-svg-s395Cp0b8m6w8a8q .crit2,#mermaid-svg-s395Cp0b8m6w8a8q .crit3{stroke:#ff8888;fill:red;stroke-width:2;}#mermaid-svg-s395Cp0b8m6w8a8q .activeCrit0,#mermaid-svg-s395Cp0b8m6w8a8q .activeCrit1,#mermaid-svg-s395Cp0b8m6w8a8q .activeCrit2,#mermaid-svg-s395Cp0b8m6w8a8q .activeCrit3{stroke:#ff8888;fill:#bfc7ff;stroke-width:2;}#mermaid-svg-s395Cp0b8m6w8a8q .doneCrit0,#mermaid-svg-s395Cp0b8m6w8a8q .doneCrit1,#mermaid-svg-s395Cp0b8m6w8a8q .doneCrit2,#mermaid-svg-s395Cp0b8m6w8a8q .doneCrit3{stroke:#ff8888;fill:lightgrey;stroke-width:2;cursor:pointer;shape-rendering:crispEdges;}#mermaid-svg-s395Cp0b8m6w8a8q .milestone{transform:rotate(45deg) scale(0.8,0.8);}#mermaid-svg-s395Cp0b8m6w8a8q .milestoneText{font-style:italic;}#mermaid-svg-s395Cp0b8m6w8a8q .doneCritText0,#mermaid-svg-s395Cp0b8m6w8a8q .doneCritText1,#mermaid-svg-s395Cp0b8m6w8a8q .doneCritText2,#mermaid-svg-s395Cp0b8m6w8a8q .doneCritText3{fill:black!important;}#mermaid-svg-s395Cp0b8m6w8a8q .activeCritText0,#mermaid-svg-s395Cp0b8m6w8a8q .activeCritText1,#mermaid-svg-s395Cp0b8m6w8a8q .activeCritText2,#mermaid-svg-s395Cp0b8m6w8a8q .activeCritText3{fill:black!important;}#mermaid-svg-s395Cp0b8m6w8a8q .titleText{text-anchor:middle;font-size:18px;fill:#333;font-family:'trebuchet ms',verdana,arial,sans-serif;font-family:var(--mermaid-font-family);}#mermaid-svg-s395Cp0b8m6w8a8q :root{--mermaid-font-family:\"trebuchet ms\",verdana,arial,sans-serif;}</style><g></g><g></g><g class=\"grid\" transform=\"translate(75, 146)\" fill=\"none\" font-size=\"10\" font-family=\"sans-serif\" text-anchor=\"middle\"><path class=\"domain\" stroke=\"currentColor\" d=\"M0,-111V0H1050V-111\"></path><g class=\"tick\" opacity=\"1\" transform=\"translate(66,0)\"><line stroke=\"currentColor\" y2=\"-111\"></line><text fill=\"#000\" y=\"3\" dy=\"1em\" stroke=\"none\" font-size=\"10\" style=\"text-anchor: middle;\">2014-01-07</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(197,0)\"><line stroke=\"currentColor\" y2=\"-111\"></line><text fill=\"#000\" y=\"3\" dy=\"1em\" stroke=\"none\" font-size=\"10\" style=\"text-anchor: middle;\">2014-01-09</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(328,0)\"><line stroke=\"currentColor\" y2=\"-111\"></line><text fill=\"#000\" y=\"3\" dy=\"1em\" stroke=\"none\" font-size=\"10\" style=\"text-anchor: middle;\">2014-01-11</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(459,0)\"><line stroke=\"currentColor\" y2=\"-111\"></line><text fill=\"#000\" y=\"3\" dy=\"1em\" stroke=\"none\" font-size=\"10\" style=\"text-anchor: middle;\">2014-01-13</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(591,0)\"><line stroke=\"currentColor\" y2=\"-111\"></line><text fill=\"#000\" y=\"3\" dy=\"1em\" stroke=\"none\" font-size=\"10\" style=\"text-anchor: middle;\">2014-01-15</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(722,0)\"><line stroke=\"currentColor\" y2=\"-111\"></line><text fill=\"#000\" y=\"3\" dy=\"1em\" stroke=\"none\" font-size=\"10\" style=\"text-anchor: middle;\">2014-01-17</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(853,0)\"><line stroke=\"currentColor\" y2=\"-111\"></line><text fill=\"#000\" y=\"3\" dy=\"1em\" stroke=\"none\" font-size=\"10\" style=\"text-anchor: middle;\">2014-01-19</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(984,0)\"><line stroke=\"currentColor\" y2=\"-111\"></line><text fill=\"#000\" y=\"3\" dy=\"1em\" stroke=\"none\" font-size=\"10\" style=\"text-anchor: middle;\">2014-01-21</text></g></g><g><rect x=\"0\" y=\"48\" width=\"1162.5\" height=\"24\" class=\"section section0\"></rect><rect x=\"0\" y=\"72\" width=\"1162.5\" height=\"24\" class=\"section section0\"></rect><rect x=\"0\" y=\"96\" width=\"1162.5\" height=\"24\" class=\"section section0\"></rect><rect x=\"0\" y=\"120\" width=\"1162.5\" height=\"24\" class=\"section section0\"></rect></g><g><rect id=\"des1\" rx=\"3\" ry=\"3\" x=\"75\" y=\"50\" width=\"131\" height=\"20\" transform-origin=\"140.5px 60px\" class=\"task done0 \"></rect><rect id=\"des2\" rx=\"3\" ry=\"3\" x=\"272\" y=\"74\" width=\"197\" height=\"20\" transform-origin=\"370.5px 84px\" class=\"task active0 \"></rect><rect id=\"des3\" rx=\"3\" ry=\"3\" x=\"469\" y=\"98\" width=\"328\" height=\"20\" transform-origin=\"633px 108px\" class=\"task task0 \"></rect><rect id=\"des4\" rx=\"3\" ry=\"3\" x=\"797\" y=\"122\" width=\"328\" height=\"20\" transform-origin=\"961px 132px\" class=\"task task0 \"></rect><text id=\"des1-text\" font-size=\"12\" x=\"140.5\" y=\"64\" text-height=\"20\" class=\" taskText taskText0 doneText0 width-38.400001525878906\">已完成 </text><text id=\"des2-text\" font-size=\"12\" x=\"370.5\" y=\"88\" text-height=\"20\" class=\" taskText taskText0 activeText0 width-38.400001525878906\">进行中 </text><text id=\"des3-text\" font-size=\"12\" x=\"633\" y=\"112\" text-height=\"20\" class=\" taskText taskText0 width-40\">计划一 </text><text id=\"des4-text\" font-size=\"12\" x=\"961\" y=\"136\" text-height=\"20\" class=\" taskText taskText0 width-40\">计划二 </text></g><g><text dy=\"0em\" x=\"10\" y=\"98\" font-size=\"18\" class=\"sectionTitle sectionTitle0\"><tspan alignment-baseline=\"central\" x=\"10\">现有任务</tspan></text></g><g class=\"today\"><line x1=\"238061\" x2=\"238061\" y1=\"25\" y2=\"171\" class=\"today\"></line></g><text x=\"600\" y=\"25\" class=\"titleText\">Adding GANTT diagram functionality to mermaid</text></svg></div>\n<ul>\n<li>关于 <strong>甘特图</strong> 语法，参考 <a href=\"https://mermaidjs.github.io/\">这儿</a>,</li>\n</ul>\n<h2><a id=\"UML__163\"></a>UML 图表</h2>\n<p>可以使用UML图表进行渲染。 <a href=\"https://mermaidjs.github.io/\">Mermaid</a>. 例如下面产生的一个序列图：</p>\n<div class=\"mermaid\"><svg id=\"mermaid-svg-amucJTjfPBqUCzv5\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" height=\"522\" style=\"max-width: 889px;\" viewBox=\"-50 -10 889 522\" class=\"mermaid-svg\"><style>#mermaid-svg-amucJTjfPBqUCzv5 {font-family:\"trebuchet ms\",verdana,arial,sans-serif;font-size:16px;fill:#333;}#mermaid-svg-amucJTjfPBqUCzv5 .error-icon{fill:#552222;}#mermaid-svg-amucJTjfPBqUCzv5 .error-text{fill:#552222;stroke:#552222;}#mermaid-svg-amucJTjfPBqUCzv5 .edge-thickness-normal{stroke-width:2px;}#mermaid-svg-amucJTjfPBqUCzv5 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-svg-amucJTjfPBqUCzv5 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-svg-amucJTjfPBqUCzv5 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-svg-amucJTjfPBqUCzv5 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-svg-amucJTjfPBqUCzv5 .marker{fill:#333333;stroke:#333333;}#mermaid-svg-amucJTjfPBqUCzv5 .marker.cross{stroke:#333333;}#mermaid-svg-amucJTjfPBqUCzv5 svg{font-family:\"trebuchet ms\",verdana,arial,sans-serif;font-size:16px;}#mermaid-svg-amucJTjfPBqUCzv5 .actor{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;}#mermaid-svg-amucJTjfPBqUCzv5 text.actor&gt;tspan{fill:black;stroke:none;}#mermaid-svg-amucJTjfPBqUCzv5 .actor-line{stroke:grey;}#mermaid-svg-amucJTjfPBqUCzv5 .messageLine0{stroke-width:1.5;stroke-dasharray:none;stroke:#333;}#mermaid-svg-amucJTjfPBqUCzv5 .messageLine1{stroke-width:1.5;stroke-dasharray:2,2;stroke:#333;}#mermaid-svg-amucJTjfPBqUCzv5 #arrowhead path{fill:#333;stroke:#333;}#mermaid-svg-amucJTjfPBqUCzv5 .sequenceNumber{fill:white;}#mermaid-svg-amucJTjfPBqUCzv5 #sequencenumber{fill:#333;}#mermaid-svg-amucJTjfPBqUCzv5 #crosshead path{fill:#333;stroke:#333;}#mermaid-svg-amucJTjfPBqUCzv5 .messageText{fill:#333;stroke:#333;}#mermaid-svg-amucJTjfPBqUCzv5 .labelBox{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;}#mermaid-svg-amucJTjfPBqUCzv5 .labelText,#mermaid-svg-amucJTjfPBqUCzv5 .labelText&gt;tspan{fill:black;stroke:none;}#mermaid-svg-amucJTjfPBqUCzv5 .loopText,#mermaid-svg-amucJTjfPBqUCzv5 .loopText&gt;tspan{fill:black;stroke:none;}#mermaid-svg-amucJTjfPBqUCzv5 .loopLine{stroke-width:2px;stroke-dasharray:2,2;stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);}#mermaid-svg-amucJTjfPBqUCzv5 .note{stroke:#aaaa33;fill:#fff5ad;}#mermaid-svg-amucJTjfPBqUCzv5 .noteText,#mermaid-svg-amucJTjfPBqUCzv5 .noteText&gt;tspan{fill:black;stroke:none;}#mermaid-svg-amucJTjfPBqUCzv5 .activation0{fill:#f4f4f4;stroke:#666;}#mermaid-svg-amucJTjfPBqUCzv5 .activation1{fill:#f4f4f4;stroke:#666;}#mermaid-svg-amucJTjfPBqUCzv5 .activation2{fill:#f4f4f4;stroke:#666;}#mermaid-svg-amucJTjfPBqUCzv5 .actorPopupMenu{position:absolute;}#mermaid-svg-amucJTjfPBqUCzv5 .actorPopupMenuPanel{position:absolute;fill:#ECECFF;box-shadow:0px 8px 16px 0px rgba(0,0,0,0.2);filter:drop-shadow(3px 5px 2px rgb(0 0 0 / 0.4));}#mermaid-svg-amucJTjfPBqUCzv5 .actor-man line{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;}#mermaid-svg-amucJTjfPBqUCzv5 .actor-man circle,#mermaid-svg-amucJTjfPBqUCzv5 line{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;stroke-width:2px;}#mermaid-svg-amucJTjfPBqUCzv5 :root{--mermaid-font-family:\"trebuchet ms\",verdana,arial,sans-serif;}</style><g></g><defs><symbol id=\"computer\" width=\"24\" height=\"24\"><path transform=\"scale(.5)\" d=\"M2 2v13h20v-13h-20zm18 11h-16v-9h16v9zm-10.228 6l.466-1h3.524l.467 1h-4.457zm14.228 3h-24l2-6h2.104l-1.33 4h18.45l-1.297-4h2.073l2 6zm-5-10h-14v-7h14v7z\"></path></symbol></defs><defs><symbol id=\"database\" fill-rule=\"evenodd\" clip-rule=\"evenodd\"><path transform=\"scale(.5)\" d=\"M12.258.001l.256.004.255.005.253.008.251.01.249.012.247.015.246.016.242.019.241.02.239.023.236.024.233.027.231.028.229.031.225.032.223.034.22.036.217.038.214.04.211.041.208.043.205.045.201.046.198.048.194.05.191.051.187.053.183.054.18.056.175.057.172.059.168.06.163.061.16.063.155.064.15.066.074.033.073.033.071.034.07.034.069.035.068.035.067.035.066.035.064.036.064.036.062.036.06.036.06.037.058.037.058.037.055.038.055.038.053.038.052.038.051.039.05.039.048.039.047.039.045.04.044.04.043.04.041.04.04.041.039.041.037.041.036.041.034.041.033.042.032.042.03.042.029.042.027.042.026.043.024.043.023.043.021.043.02.043.018.044.017.043.015.044.013.044.012.044.011.045.009.044.007.045.006.045.004.045.002.045.001.045v17l-.001.045-.002.045-.004.045-.006.045-.007.045-.009.044-.011.045-.012.044-.013.044-.015.044-.017.043-.018.044-.02.043-.021.043-.023.043-.024.043-.026.043-.027.042-.029.042-.03.042-.032.042-.033.042-.034.041-.036.041-.037.041-.039.041-.04.041-.041.04-.043.04-.044.04-.045.04-.047.039-.048.039-.05.039-.051.039-.052.038-.053.038-.055.038-.055.038-.058.037-.058.037-.06.037-.06.036-.062.036-.064.036-.064.036-.066.035-.067.035-.068.035-.069.035-.07.034-.071.034-.073.033-.074.033-.15.066-.155.064-.16.063-.163.061-.168.06-.172.059-.175.057-.18.056-.183.054-.187.053-.191.051-.194.05-.198.048-.201.046-.205.045-.208.043-.211.041-.214.04-.217.038-.22.036-.223.034-.225.032-.229.031-.231.028-.233.027-.236.024-.239.023-.241.02-.242.019-.246.016-.247.015-.249.012-.251.01-.253.008-.255.005-.256.004-.258.001-.258-.001-.256-.004-.255-.005-.253-.008-.251-.01-.249-.012-.247-.015-.245-.016-.243-.019-.241-.02-.238-.023-.236-.024-.234-.027-.231-.028-.228-.031-.226-.032-.223-.034-.22-.036-.217-.038-.214-.04-.211-.041-.208-.043-.204-.045-.201-.046-.198-.048-.195-.05-.19-.051-.187-.053-.184-.054-.179-.056-.176-.057-.172-.059-.167-.06-.164-.061-.159-.063-.155-.064-.151-.066-.074-.033-.072-.033-.072-.034-.07-.034-.069-.035-.068-.035-.067-.035-.066-.035-.064-.036-.063-.036-.062-.036-.061-.036-.06-.037-.058-.037-.057-.037-.056-.038-.055-.038-.053-.038-.052-.038-.051-.039-.049-.039-.049-.039-.046-.039-.046-.04-.044-.04-.043-.04-.041-.04-.04-.041-.039-.041-.037-.041-.036-.041-.034-.041-.033-.042-.032-.042-.03-.042-.029-.042-.027-.042-.026-.043-.024-.043-.023-.043-.021-.043-.02-.043-.018-.044-.017-.043-.015-.044-.013-.044-.012-.044-.011-.045-.009-.044-.007-.045-.006-.045-.004-.045-.002-.045-.001-.045v-17l.001-.045.002-.045.004-.045.006-.045.007-.045.009-.044.011-.045.012-.044.013-.044.015-.044.017-.043.018-.044.02-.043.021-.043.023-.043.024-.043.026-.043.027-.042.029-.042.03-.042.032-.042.033-.042.034-.041.036-.041.037-.041.039-.041.04-.041.041-.04.043-.04.044-.04.046-.04.046-.039.049-.039.049-.039.051-.039.052-.038.053-.038.055-.038.056-.038.057-.037.058-.037.06-.037.061-.036.062-.036.063-.036.064-.036.066-.035.067-.035.068-.035.069-.035.07-.034.072-.034.072-.033.074-.033.151-.066.155-.064.159-.063.164-.061.167-.06.172-.059.176-.057.179-.056.184-.054.187-.053.19-.051.195-.05.198-.048.201-.046.204-.045.208-.043.211-.041.214-.04.217-.038.22-.036.223-.034.226-.032.228-.031.231-.028.234-.027.236-.024.238-.023.241-.02.243-.019.245-.016.247-.015.249-.012.251-.01.253-.008.255-.005.256-.004.258-.001.258.001zm-9.258 20.499v.01l.001.021.003.021.004.022.005.021.006.022.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.023.018.024.019.024.021.024.022.025.023.024.024.025.052.049.056.05.061.051.066.051.07.051.075.051.079.052.084.052.088.052.092.052.097.052.102.051.105.052.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.048.144.049.147.047.152.047.155.047.16.045.163.045.167.043.171.043.176.041.178.041.183.039.187.039.19.037.194.035.197.035.202.033.204.031.209.03.212.029.216.027.219.025.222.024.226.021.23.02.233.018.236.016.24.015.243.012.246.01.249.008.253.005.256.004.259.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.021.224-.024.22-.026.216-.027.212-.028.21-.031.205-.031.202-.034.198-.034.194-.036.191-.037.187-.039.183-.04.179-.04.175-.042.172-.043.168-.044.163-.045.16-.046.155-.046.152-.047.148-.048.143-.049.139-.049.136-.05.131-.05.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.053.083-.051.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.05.023-.024.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.023.01-.022.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.127l-.077.055-.08.053-.083.054-.085.053-.087.052-.09.052-.093.051-.095.05-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.045-.118.044-.12.043-.122.042-.124.042-.126.041-.128.04-.13.04-.132.038-.134.038-.135.037-.138.037-.139.035-.142.035-.143.034-.144.033-.147.032-.148.031-.15.03-.151.03-.153.029-.154.027-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.01-.179.008-.179.008-.181.006-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.006-.179-.008-.179-.008-.178-.01-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.027-.153-.029-.151-.03-.15-.03-.148-.031-.146-.032-.145-.033-.143-.034-.141-.035-.14-.035-.137-.037-.136-.037-.134-.038-.132-.038-.13-.04-.128-.04-.126-.041-.124-.042-.122-.042-.12-.044-.117-.043-.116-.045-.113-.045-.112-.046-.109-.047-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.05-.093-.052-.09-.051-.087-.052-.085-.053-.083-.054-.08-.054-.077-.054v4.127zm0-5.654v.011l.001.021.003.021.004.021.005.022.006.022.007.022.009.022.01.022.011.023.012.023.013.023.015.024.016.023.017.024.018.024.019.024.021.024.022.024.023.025.024.024.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.052.11.051.114.051.119.052.123.05.127.051.131.05.135.049.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.044.171.042.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.022.23.02.233.018.236.016.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.012.241-.015.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.048.139-.05.136-.049.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.051.051-.049.023-.025.023-.024.021-.025.02-.024.019-.024.018-.024.017-.024.015-.023.014-.023.013-.024.012-.022.01-.023.01-.023.008-.022.006-.022.006-.022.004-.021.004-.022.001-.021.001-.021v-4.139l-.077.054-.08.054-.083.054-.085.052-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.044-.118.044-.12.044-.122.042-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.035-.143.033-.144.033-.147.033-.148.031-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.009-.179.009-.179.007-.181.007-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.007-.179-.007-.179-.009-.178-.009-.176-.011-", "status": 2, "cleanedContent": "<p></p><div class=\"toc\"><h3>这里写自定义目录标题</h3><ul><li><a href=\"#Markdown_2\">欢迎使用Markdown编辑器</a></li><ul><li><a href=\"#_6\">新的改变</a></li><li><a href=\"#_19\">功能快捷键</a></li><li><a href=\"#_35\">合理的创建标题，有助于目录的生成</a></li><li><a href=\"#_41\">如何改变文本的样式</a></li><li><a href=\"#_57\">插入链接与图片</a></li><li><a href=\"#_71\">如何插入一段漂亮的代码片</a></li><li><a href=\"#_79\">生成一个适合你的列表</a></li><li><a href=\"#_92\">创建一个表格</a></li><ul><li><a href=\"#_100\">设定内容居中、居左、居右</a></li><li><a href=\"#SmartyPants_108\">SmartyPants</a></li></ul><li><a href=\"#_116\">创建一个自定义列表</a></li><li><a href=\"#_124\">如何创建一个注脚</a></li><li><a href=\"#_130\">注释也是必不可少的</a></li><li><a href=\"#KaTeX_136\">KaTeX数学公式</a></li><li><a href=\"#_149\">新的甘特图功能，丰富你的文章</a></li><li><a href=\"#UML__163\">UML 图表</a></li><li><a href=\"#FLowchart_191\">FLowchart流程图</a></li><li><a href=\"#_208\">导出与导入</a></li><ul><li><a href=\"#_210\">导出</a></li><li><a href=\"#_213\">导入</a></li></ul></ul></ul></div><p></p> <h1><a id=\"Markdown_2\"></a>欢迎使用Markdown编辑器</h1> <p>你好！ 这是你第一次使用 <strong>Markdown编辑器</strong> 所展示的欢迎页。如果你想学习如何使用Markdown编辑器, 可以仔细阅读这篇文章，了解一下Markdown的基本语法知识。</p> <h2><a id=\"_6\"></a>新的改变</h2> <p>我们对Markdown编辑器进行了一些功能拓展与语法支持，除了标准的Markdown编辑器功能，我们增加了如下几点新功能，帮助你用它写博客：</p> <ol> <li><strong>全新的界面设计</strong> ，将会带来全新的写作体验；</li> <li>在创作中心设置你喜爱的代码高亮样式，Markdown <strong>将代码片显示选择的高亮样式</strong> 进行展示；</li> <li>增加了 <strong>图片拖拽</strong> 功能，你可以将本地的图片直接拖拽到编辑区域直接展示；</li> <li>全新的 <strong>KaTeX数学公式</strong> 语法；</li> <li>增加了支持<strong>甘特图的mermaid语法<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">1</a></sup></strong> 功能；</li> <li>增加了 <strong>多屏幕编辑</strong> Markdown文章功能；</li> <li>增加了 <strong>焦点写作模式、预览模式、简洁写作模式、左右区域同步滚轮设置</strong> 等功能，功能按钮位于编辑区域与预览区域中间；</li> <li>增加了 <strong>检查列表</strong> 功能。</li> </ol> <h2><a id=\"_19\"></a>功能快捷键</h2> <p>撤销：<kbd>Ctrl/Command</kbd> + <kbd>Z</kbd><br> 重做：<kbd>Ctrl/Command</kbd> + <kbd>Y</kbd><br> 加粗：<kbd>Ctrl/Command</kbd> + <kbd>B</kbd><br> 斜体：<kbd>Ctrl/Command</kbd> + <kbd>I</kbd><br> 标题：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>H</kbd><br> 无序列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>U</kbd><br> 有序列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>O</kbd><br> 检查列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>C</kbd><br> 插入代码：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>K</kbd><br> 插入链接：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>L</kbd><br> 插入图片：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>G</kbd><br> 查找：<kbd>Ctrl/Command</kbd> + <kbd>F</kbd><br> 替换：<kbd>Ctrl/Command</kbd> + <kbd>G</kbd></p> <h2><a id=\"_35\"></a>合理的创建标题，有助于目录的生成</h2> <p>直接输入1次<kbd>#</kbd>，并按下<kbd>space</kbd>后，将生成1级标题。<br> 输入2次<kbd>#</kbd>，并按下<kbd>space</kbd>后，将生成2级标题。<br> 以此类推，我们支持6级标题。有助于使用<code>TOC</code>语法后生成一个完美的目录。</p> <h2><a id=\"_41\"></a>如何改变文本的样式</h2> <p><em>强调文本</em> <em>强调文本</em></p> <p><strong>加粗文本</strong> <strong>加粗文本</strong></p> <p><mark>标记文本</mark></p> <p><s>删除文本</s></p> <blockquote> <p>引用文本</p> </blockquote> <p>H<sub>2</sub>O is是液体。</p> <p>2<sup>10</sup> 运算结果是 1024.</p> <h2><a id=\"_57\"></a>插入链接与图片</h2> <p>链接: <a href=\"\">link</a>.</p> <p>图片: <img src=\"\" alt=\"Alt\"></p> <p>带尺寸的图片: <img src=\"\" alt=\"Alt\" width=\"30\" height=\"30\"></p> <p>居中的图片: <img src=\"#pic_center\" alt=\"Alt\"></p> <p>居中并且带尺寸的图片: <img src=\"#pic_center\" alt=\"Alt\" width=\"30\" height=\"30\"></p> <p>当然，我们为了让用户更加便捷，我们增加了图片拖拽功能。</p> <h2><a id=\"_71\"></a>如何插入一段漂亮的代码片</h2> <p>去<a href=\"\">博客设置</a>页面，选择一款你喜欢的代码片高亮样式，下面展示同样高亮的 <code>代码片</code>.</p> <pre><code class=\"prism language-javascript\"><span class=\"token comment\">// An highlighted block</span> <span class=\"token keyword\">var</span> foo <span class=\"token operator\">=</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">;</span> </code></pre> <h2><a id=\"_79\"></a>生成一个适合你的列表</h2> <ul> <li>项目 <ul> <li>项目 <ul> <li>项目</li> </ul> </li> </ul> </li> </ul> <ol> <li>项目1</li> <li>项目2</li> <li>项目3</li> </ol> <ul> <li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"\"> 计划任务</li> <li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" checked=\"true\" disabled=\"\"> 完成任务</li> </ul> <h2><a id=\"_92\"></a>创建一个表格</h2> <p>一个简单的表格是这么创建的：</p> <table> <thead> <tr> <th>项目</th> <th>Value</th> </tr> </thead> <tbody> <tr> <td>电脑</td> <td>$1600</td> </tr> <tr> <td>手机</td> <td>$12</td> </tr> <tr> <td>导管</td> <td>$1</td> </tr> </tbody> </table><h3><a id=\"_100\"></a>设定内容居中、居左、居右</h3> <p>使用<code>:---------:</code>居中<br> 使用<code>:----------</code>居左<br> 使用<code>----------:</code>居右</p> <table> <thead> <tr> <th align=\"center\">第一列</th> <th align=\"right\">第二列</th> <th align=\"left\">第三列</th> </tr> </thead> <tbody> <tr> <td align=\"center\">第一列文本居中</td> <td align=\"right\">第二列文本居右</td> <td align=\"left\">第三列文本居左</td> </tr> </tbody> </table><h3><a id=\"SmartyPants_108\"></a>SmartyPants</h3> <p>SmartyPants将ASCII标点字符转换为“智能”印刷标点HTML实体。例如：</p> <table> <thead> <tr> <th>TYPE</th> <th>ASCII</th> <th><abbr title=\"超文本标记语言\">HTML</abbr></th> </tr> </thead> <tbody> <tr> <td>Single backticks</td> <td><code>'Isn't this fun?'</code></td> <td>‘Isn’t this fun?’</td> </tr> <tr> <td>Quotes</td> <td><code>\"Isn't this fun?\"</code></td> <td>“Isn’t this fun?”</td> </tr> <tr> <td>Dashes</td> <td><code>-- is en-dash, --- is em-dash</code></td> <td>– is en-dash, — is em-dash</td> </tr> </tbody> </table><h2><a id=\"_116\"></a>创建一个自定义列表</h2> <dl> <dt>Markdown</dt> <dd>Text-to-<abbr title=\"超文本标记语言\">HTML</abbr> conversion tool</dd> <dt>Authors</dt> <dd>John</dd> <dd>Luke</dd> </dl> <h2><a id=\"_124\"></a>如何创建一个注脚</h2> <p>一个具有注脚的文本。<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">2</a></sup></p> <h2><a id=\"_130\"></a>注释也是必不可少的</h2> <p>Markdown将文本转换为 <abbr title=\"超文本标记语言\">HTML</abbr>。</p> <h2><a id=\"KaTeX_136\"></a>KaTeX数学公式</h2> <p>您可以使用渲染LaTeX数学表达式 <a href=\"\">KaTeX</a>:</p> <p>Gamma公式展示 <span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"\"><semantics><mrow><mi mathvariant=\"normal\">Γ</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">!</mo><mspace width=\"1em\"></mspace><mi mathvariant=\"normal\">∀</mi><mi>n</mi><mo>∈</mo><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height: 1em; vertical-align: -0.25em;\"></span><span class=\"mord\">Γ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 1em; vertical-align: -0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 1em; vertical-align: -0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)!</span><span class=\"mspace\" style=\"margin-right: 1em;\"></span><span class=\"mord\">∀</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.6889em;\"></span><span class=\"mord mathbb\">N</span></span></span></span></span> 是通过欧拉积分</p> <p><span class=\"katex--display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"\" display=\"block\"><semantics><mrow><mi mathvariant=\"normal\">Γ</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∫</mo><mn>0</mn><mi mathvariant=\"normal\">∞</mi></msubsup><msup><mi>t</mi><mrow><mi>z</mi><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>e</mi><mrow><mo>−</mo><mi>t</mi></mrow></msup><mi>d</mi><mi>t</mi> <mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\"> \\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,. </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height: 1em; vertical-align: -0.25em;\"></span><span class=\"mord\">Γ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right: 0.044em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 2.3262em; vertical-align: -0.9119em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right: 0.4445em; position: relative; top: -0.0011em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.4143em;\"><span class=\"\" style=\"top: -1.7881em; margin-left: -0.4445em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span><span class=\"\" style=\"top: -3.8129em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">∞</span></span></span></span><span class=\"vlist-s\"></span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.9119em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.8641em;\"><span class=\"\" style=\"top: -3.113em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right: 0.044em;\">z</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.8436em;\"><span class=\"\" style=\"top: -3.113em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right: 0.1667em;\"></span><span class=\"mord\">.</span></span></span></span></span></span></p> <blockquote> <p>你可以找到更多关于的信息 <strong>LaTeX</strong> 数学表达式<a href=\"\">here</a>.</p> </blockquote> <h2><a id=\"_149\"></a>新的甘特图功能，丰富你的文章</h2> <div class=\"mermaid\"><svg id=\"mermaid-svg-s395Cp0b8m6w8a8q\" width=\"100%\" xmlns=\"\" viewBox=\"0 0 1200 196\" height=\"196\" style=\"max-width: 1200px;\" class=\"mermaid-svg\"><style>#mermaid-svg-s395Cp0b8m6w8a8q {font-family:\"trebuchet ms\",verdana,arial,sans-serif;font-size:16px;fill:#333;}#mermaid-svg-s395Cp0b8m6w8a8q .error-icon{fill:#;}#mermaid-svg-s395Cp0b8m6w8a8q .error-text{fill:#;stroke:#;}#mermaid-svg-s395Cp0b8m6w8a8q .edge-thickness-normal{stroke-width:2px;}#mermaid-svg-s395Cp0b8m6w8a8q .edge-thickness-thick{stroke-width:3.5px;}#mermaid-svg-s395Cp0b8m6w8a8q .edge-pattern-solid{stroke-dasharray:0;}#mermaid-svg-s395Cp0b8m6w8a8q .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-svg-s395Cp0b8m6w8a8q .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-svg-s395Cp0b8m6w8a8q .marker{fill:#;stroke:#;}#mermaid-svg-s395Cp0b8m6w8a8q .marker.cross{stroke:#;}#mermaid-svg-s395Cp0b8m6w8a8q svg{font-family:\"trebuchet ms\",verdana,arial,sans-serif;font-size:16px;}#mermaid-svg-s395Cp0b8m6w8a8q .mermaid-main-font{font-family:\"trebuchet ms\",verdana,arial,sans-serif;font-family:var(--mermaid-font-family);}#mermaid-svg-s395Cp0b8m6w8a8q .exclude-range{fill:#eeeeee;}#mermaid-svg-s395Cp0b8m6w8a8q .section{stroke:none;opacity:0.2;}#mermaid-svg-s395Cp0b8m6w8a8q .section0{fill:rgba(102, 102, 255, 0.49);}#mermaid-svg-s395Cp0b8m6w8a8q .section2{fill:#fff400;}#mermaid-svg-s395Cp0b8m6w8a8q .section1,#mermaid-svg-s395Cp0b8m6w8a8q .section3{fill:white;opacity:0.2;}#mermaid-svg-s395Cp0b8m6w8a8q .sectionTitle0{fill:#333;}#mermaid-svg-s395Cp0b8m6w8a8q .sectionTitle1{fill:#333;}#mermaid-svg-s395Cp0b8m6w8a8q .sectionTitle2{fill:#333;}#mermaid-svg-s395Cp0b8m6w8a8q .sectionTitle3{fill:#333;}#mermaid-svg-s395Cp0b8m6w8a8q .sectionTitle{text-anchor:start;font-family:'trebuchet ms',verdana,arial,sans-serif;font-family:var(--mermaid-font-family);}#mermaid-svg-s395Cp0b8m6w8a8q .grid .tick{stroke:lightgrey;opacity:0.8;shape-rendering:crispEdges;}#mermaid-svg-s395Cp0b8m6w8a8q .grid .tick text{font-family:\"trebuchet ms\",verdana,arial,sans-serif;fill:#333;}#mermaid-svg-s395Cp0b8m6w8a8q .grid path{stroke-width:0;}#mermaid-svg-s395Cp0b8m6w8a8q .today{fill:none;stroke:red;stroke-width:2px;}#mermaid-svg-s395Cp0b8m6w8a8q .task{stroke-width:2;}#mermaid-svg-s395Cp0b8m6w8a8q .taskText{text-anchor:middle;font-family:'trebuchet ms',verdana,arial,sans-serif;font-family:var(--mermaid-font-family);}#mermaid-svg-s395Cp0b8m6w8a8q .taskTextOutsideRight{fill:black;text-anchor:start;font-family:'trebuchet ms',verdana,arial,sans-serif;font-family:var(--mermaid-font-family);}#mermaid-svg-s395Cp0b8m6w8a8q .taskTextOutsideLeft{fill:black;text-anchor:end;}#mermaid-svg-s395Cp0b8m6w8a8q .task.clickable{cursor:pointer;}#mermaid-svg-s395Cp0b8m6w8a8q .taskText.clickable{cursor:pointer;fill:#003163!important;font-weight:bold;}#mermaid-svg-s395Cp0b8m6w8a8q .taskTextOutsideLeft.clickable{cursor:pointer;fill:#003163!important;font-weight:bold;}#mermaid-svg-s395Cp0b8m6w8a8q .taskTextOutsideRight.clickable{cursor:pointer;fill:#003163!important;font-weight:bold;}#mermaid-svg-s395Cp0b8m6w8a8q .taskText0,#mermaid-svg-s395Cp0b8m6w8a8q .taskText1,#mermaid-svg-s395Cp0b8m6w8a8q .taskText2,#mermaid-svg-s395Cp0b8m6w8a8q .taskText3{fill:white;}#mermaid-svg-s395Cp0b8m6w8a8q .task0,#mermaid-svg-s395Cp0b8m6w8a8q .task1,#mermaid-svg-s395Cp0b8m6w8a8q .task2,#mermaid-svg-s395Cp0b8m6w8a8q .task3{fill:#8a90dd;stroke:#534fbc;}#mermaid-svg-s395Cp0b8m6w8a8q .taskTextOutside0,#mermaid-svg-s395Cp0b8m6w8a8q .taskTextOutside2{fill:black;}#mermaid-svg-s395Cp0b8m6w8a8q .taskTextOutside1,#mermaid-svg-s395Cp0b8m6w8a8q .taskTextOutside3{fill:black;}#mermaid-svg-s395Cp0b8m6w8a8q .active0,#mermaid-svg-s395Cp0b8m6w8a8q .active1,#mermaid-svg-s395Cp0b8m6w8a8q .active2,#mermaid-svg-s395Cp0b8m6w8a8q .active3{fill:#bfc7ff;stroke:#534fbc;}#mermaid-svg-s395Cp0b8m6w8a8q .activeText0,#mermaid-svg-s395Cp0b8m6w8a8q .activeText1,#mermaid-svg-s395Cp0b8m6w8a8q .activeText2,#mermaid-svg-s395Cp0b8m6w8a8q .activeText3{fill:black!important;}#mermaid-svg-s395Cp0b8m6w8a8q .done0,#mermaid-svg-s395Cp0b8m6w8a8q .done1,#mermaid-svg-s395Cp0b8m6w8a8q .done2,#mermaid-svg-s395Cp0b8m6w8a8q .done3{stroke:grey;fill:lightgrey;stroke-width:2;}#mermaid-svg-s395Cp0b8m6w8a8q .doneText0,#mermaid-svg-s395Cp0b8m6w8a8q .doneText1,#mermaid-svg-s395Cp0b8m6w8a8q .doneText2,#mermaid-svg-s395Cp0b8m6w8a8q .doneText3{fill:black!important;}#mermaid-svg-s395Cp0b8m6w8a8q .crit0,#mermaid-svg-s395Cp0b8m6w8a8q .crit1,#mermaid-svg-s395Cp0b8m6w8a8q .crit2,#mermaid-svg-s395Cp0b8m6w8a8q .crit3{stroke:#ff8888;fill:red;stroke-width:2;}#mermaid-svg-s395Cp0b8m6w8a8q .activeCrit0,#mermaid-svg-s395Cp0b8m6w8a8q .activeCrit1,#mermaid-svg-s395Cp0b8m6w8a8q .activeCrit2,#mermaid-svg-s395Cp0b8m6w8a8q .activeCrit3{stroke:#ff8888;fill:#bfc7ff;stroke-width:2;}#mermaid-svg-s395Cp0b8m6w8a8q .doneCrit0,#mermaid-svg-s395Cp0b8m6w8a8q .doneCrit1,#mermaid-svg-s395Cp0b8m6w8a8q .doneCrit2,#mermaid-svg-s395Cp0b8m6w8a8q .doneCrit3{stroke:#ff8888;fill:lightgrey;stroke-width:2;cursor:pointer;shape-rendering:crispEdges;}#mermaid-svg-s395Cp0b8m6w8a8q .milestone{transform:rotate(45deg) scale(0.8,0.8);}#mermaid-svg-s395Cp0b8m6w8a8q .milestoneText{font-style:italic;}#mermaid-svg-s395Cp0b8m6w8a8q .doneCritText0,#mermaid-svg-s395Cp0b8m6w8a8q .doneCritText1,#mermaid-svg-s395Cp0b8m6w8a8q .doneCritText2,#mermaid-svg-s395Cp0b8m6w8a8q .doneCritText3{fill:black!important;}#mermaid-svg-s395Cp0b8m6w8a8q .activeCritText0,#mermaid-svg-s395Cp0b8m6w8a8q .activeCritText1,#mermaid-svg-s395Cp0b8m6w8a8q .activeCritText2,#mermaid-svg-s395Cp0b8m6w8a8q .activeCritText3{fill:black!important;}#mermaid-svg-s395Cp0b8m6w8a8q .titleText{text-anchor:middle;font-size:18px;fill:#333;font-family:'trebuchet ms',verdana,arial,sans-serif;font-family:var(--mermaid-font-family);}#mermaid-svg-s395Cp0b8m6w8a8q :root{--mermaid-font-family:\"trebuchet ms\",verdana,arial,sans-serif;}</style><g></g><g></g><g class=\"grid\" transform=\"translate(75, 146)\" fill=\"none\" font-size=\"10\" font-family=\"sans-serif\" text-anchor=\"middle\"><path class=\"domain\" stroke=\"currentColor\" d=\"M0,-111V0H1050V-111\"></path><g class=\"tick\" opacity=\"1\" transform=\"translate(66,0)\"><line stroke=\"currentColor\" y2=\"-111\"></line><text fill=\"#000\" y=\"3\" dy=\"1em\" stroke=\"none\" font-size=\"10\" style=\"text-anchor: middle;\">01-07</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(197,0)\"><line stroke=\"currentColor\" y2=\"-111\"></line><text fill=\"#000\" y=\"3\" dy=\"1em\" stroke=\"none\" font-size=\"10\" style=\"text-anchor: middle;\">01-09</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(328,0)\"><line stroke=\"currentColor\" y2=\"-111\"></line><text fill=\"#000\" y=\"3\" dy=\"1em\" stroke=\"none\" font-size=\"10\" style=\"text-anchor: middle;\">01-11</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(459,0)\"><line stroke=\"currentColor\" y2=\"-111\"></line><text fill=\"#000\" y=\"3\" dy=\"1em\" stroke=\"none\" font-size=\"10\" style=\"text-anchor: middle;\">01-13</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(591,0)\"><line stroke=\"currentColor\" y2=\"-111\"></line><text fill=\"#000\" y=\"3\" dy=\"1em\" stroke=\"none\" font-size=\"10\" style=\"text-anchor: middle;\">01-15</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(722,0)\"><line stroke=\"currentColor\" y2=\"-111\"></line><text fill=\"#000\" y=\"3\" dy=\"1em\" stroke=\"none\" font-size=\"10\" style=\"text-anchor: middle;\">01-17</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(853,0)\"><line stroke=\"currentColor\" y2=\"-111\"></line><text fill=\"#000\" y=\"3\" dy=\"1em\" stroke=\"none\" font-size=\"10\" style=\"text-anchor: middle;\">01-19</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(984,0)\"><line stroke=\"currentColor\" y2=\"-111\"></line><text fill=\"#000\" y=\"3\" dy=\"1em\" stroke=\"none\" font-size=\"10\" style=\"text-anchor: middle;\">01-21</text></g></g><g><rect x=\"0\" y=\"48\" width=\"1162.5\" height=\"24\" class=\"section section0\"></rect><rect x=\"0\" y=\"72\" width=\"1162.5\" height=\"24\" class=\"section section0\"></rect><rect x=\"0\" y=\"96\" width=\"1162.5\" height=\"24\" class=\"section section0\"></rect><rect x=\"0\" y=\"120\" width=\"1162.5\" height=\"24\" class=\"section section0\"></rect></g><g><rect id=\"des1\" rx=\"3\" ry=\"3\" x=\"75\" y=\"50\" width=\"131\" height=\"20\" transform-origin=\"140.5px 60px\" class=\"task done0 \"></rect><rect id=\"des2\" rx=\"3\" ry=\"3\" x=\"272\" y=\"74\" width=\"197\" height=\"20\" transform-origin=\"370.5px 84px\" class=\"task active0 \"></rect><rect id=\"des3\" rx=\"3\" ry=\"3\" x=\"469\" y=\"98\" width=\"328\" height=\"20\" transform-origin=\"633px 108px\" class=\"task task0 \"></rect><rect id=\"des4\" rx=\"3\" ry=\"3\" x=\"797\" y=\"122\" width=\"328\" height=\"20\" transform-origin=\"961px 132px\" class=\"task task0 \"></rect><text id=\"des1-text\" font-size=\"12\" x=\"140.5\" y=\"64\" text-height=\"20\" class=\" taskText taskText0 doneText0 width-38.\">已完成 </text><text id=\"des2-text\" font-size=\"12\" x=\"370.5\" y=\"88\" text-height=\"20\" class=\" taskText taskText0 activeText0 width-38.\">进行中 </text><text id=\"des3-text\" font-size=\"12\" x=\"633\" y=\"112\" text-height=\"20\" class=\" taskText taskText0 width-40\">计划一 </text><text id=\"des4-text\" font-size=\"12\" x=\"961\" y=\"136\" text-height=\"20\" class=\" taskText taskText0 width-40\">计划二 </text></g><g><text dy=\"0em\" x=\"10\" y=\"98\" font-size=\"18\" class=\"sectionTitle sectionTitle0\"><tspan alignment-baseline=\"central\" x=\"10\">现有任务</tspan></text></g><g class=\"today\"><line x1=\"\" x2=\"\" y1=\"25\" y2=\"171\" class=\"today\"></line></g><text x=\"600\" y=\"25\" class=\"titleText\">Adding GANTT diagram functionality to mermaid</text></svg></div> <ul> <li>关于 <strong>甘特图</strong> 语法，参考 <a href=\"\">这儿</a>,</li> </ul> <h2><a id=\"UML__163\"></a>UML 图表</h2> <p>可以使用UML图表进行渲染。 <a href=\"\">Mermaid</a>. 例如下面产生的一个序列图：</p> <div class=\"mermaid\"><svg id=\"mermaid-svg-amucJTjfPBqUCzv5\" width=\"100%\" xmlns=\"\" height=\"522\" style=\"max-width: 889px;\" viewBox=\"-50 -10 889 522\" class=\"mermaid-svg\"><style>#mermaid-svg-amucJTjfPBqUCzv5 {font-family:\"trebuchet ms\",verdana,arial,sans-serif;font-size:16px;fill:#333;}#mermaid-svg-amucJTjfPBqUCzv5 .error-icon{fill:#;}#mermaid-svg-amucJTjfPBqUCzv5 .error-text{fill:#;stroke:#;}#mermaid-svg-amucJTjfPBqUCzv5 .edge-thickness-normal{stroke-width:2px;}#mermaid-svg-amucJTjfPBqUCzv5 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-svg-amucJTjfPBqUCzv5 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-svg-amucJTjfPBqUCzv5 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-svg-amucJTjfPBqUCzv5 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-svg-amucJTjfPBqUCzv5 .marker{fill:#;stroke:#;}#mermaid-svg-amucJTjfPBqUCzv5 .marker.cross{stroke:#;}#mermaid-svg-amucJTjfPBqUCzv5 svg{font-family:\"trebuchet ms\",verdana,arial,sans-serif;font-size:16px;}#mermaid-svg-amucJTjfPBqUCzv5 .actor{stroke:hsl(259., 59.%, 87.%);fill:#ECECFF;}#mermaid-svg-amucJTjfPBqUCzv5 >tspan{fill:black;stroke:none;}#mermaid-svg-amucJTjfPBqUCzv5 .actor-line{stroke:grey;}#mermaid-svg-amucJTjfPBqUCzv5 .messageLine0{stroke-width:1.5;stroke-dasharray:none;stroke:#333;}#mermaid-svg-amucJTjfPBqUCzv5 .messageLine1{stroke-width:1.5;stroke-dasharray:2,2;stroke:#333;}#mermaid-svg-amucJTjfPBqUCzv5 #arrowhead path{fill:#333;stroke:#333;}#mermaid-svg-amucJTjfPBqUCzv5 .sequenceNumber{fill:white;}#mermaid-svg-amucJTjfPBqUCzv5 #sequencenumber{fill:#333;}#mermaid-svg-amucJTjfPBqUCzv5 #crosshead path{fill:#333;stroke:#333;}#mermaid-svg-amucJTjfPBqUCzv5 .messageText{fill:#333;stroke:#333;}#mermaid-svg-amucJTjfPBqUCzv5 .labelBox{stroke:hsl(259., 59.%, 87.%);fill:#ECECFF;}#mermaid-svg-amucJTjfPBqUCzv5 .labelText,#mermaid-svg-amucJTjfPBqUCzv5 .labelText>tspan{fill:black;stroke:none;}#mermaid-svg-amucJTjfPBqUCzv5 .loopText,#mermaid-svg-amucJTjfPBqUCzv5 .loopText>tspan{fill:black;stroke:none;}#mermaid-svg-amucJTjfPBqUCzv5 .loopLine{stroke-width:2px;stroke-dasharray:2,2;stroke:hsl(259., 59.%, 87.%);fill:hsl(259., 59.%, 87.%);}#mermaid-svg-amucJTjfPBqUCzv5 .note{stroke:#aaaa33;fill:#fff5ad;}#mermaid-svg-amucJTjfPBqUCzv5 .noteText,#mermaid-svg-amucJTjfPBqUCzv5 .noteText>tspan{fill:black;stroke:none;}#mermaid-svg-amucJTjfPBqUCzv5 .activation0{fill:#f4f4f4;stroke:#666;}#mermaid-svg-amucJTjfPBqUCzv5 .activation1{fill:#f4f4f4;stroke:#666;}#mermaid-svg-amucJTjfPBqUCzv5 .activation2{fill:#f4f4f4;stroke:#666;}#mermaid-svg-amucJTjfPBqUCzv5 .actorPopupMenu{position:absolute;}#mermaid-svg-amucJTjfPBqUCzv5 .actorPopupMenuPanel{position:absolute;fill:#ECECFF;box-shadow:0px 8px 16px 0px rgba(0,0,0,0.2);filter:drop-shadow(3px 5px 2px rgb(0 0 0 / 0.4));}#mermaid-svg-amucJTjfPBqUCzv5 .actor-man line{stroke:hsl(259., 59.%, 87.%);fill:#ECECFF;}#mermaid-svg-amucJTjfPBqUCzv5 .actor-man circle,#mermaid-svg-amucJTjfPBqUCzv5 line{stroke:hsl(259., 59.%, 87.%);fill:#ECECFF;stroke-width:2px;}#mermaid-svg-amucJTjfPBqUCzv5 :root{--mermaid-font-family:\"trebuchet ms\",verdana,arial,sans-serif;}</style><g></g><defs><symbol id=\"computer\" width=\"24\" height=\"24\"><path transform=\"scale(.5)\" d=\"M2 2v13h20v-13h-20zm18 11h-16v-9h16v9zm-10.228 6l.1h3.524l.467 1h-4.457zm14.228 3h-24l2-6h2.104l-1.33 4h18.45l-1.4h2.073l2 6zm-5-10h-14v-7h14v7z\"></path></symbol></defs><defs><symbol id=\"database\" fill-rule=\"evenodd\" clip-rule=\"evenodd\"><path transform=\"scale(.5)\" d=\"M12.258.001l.............................................v17l-.001..002..004..006..007..009..011..012..013..015..017..018..02..021..023..024..026..027..029..03..032..033..034..036..037..039..04..041.04-.043.04-.044.04-.045.04-.047..048..05..051..052..053..055..055..058..058..06..06..062..064..064..066..067..068..069..07..071..073..074..15..155..16..163..168.06-.172..175..18..183..187..191..194.05-.198..201..205..208..211..214.04-.217..22..223..225..229..231..233..236..239..241.02-.242..246..247..249..251.01-.253..255..256..258...........01-..........02-...............22-.....04-............05-.19-.............06-...............07-..................06-.......................04-..04-..04-..04-.04-..............03-..............02-.........................045v-17l..045..045..045..045..045..044..045..044..044..044..043..044.02-.043..043..043..043..043..042..042.03-.042..042..042..041..041..041..041.04-.041..04..04..04..04..039..039..039..039..038..038..038..038..037..037.06-.037..036..036..036..036..035..035..035..035.07-.034..034..033..033..066..064..063..061..06..059..057..056..054..053.19-.051..05..048..046..045..043..041..04..038.22-.036..034..032..031..028..027..024..023..02..019..016..015..012..01..008..005..004..001.258.001zm-9.258 20.499v.01l......................................26-.001..004..005.25-.008..011..012..014..016..018..021..021..024.22-.026..027..028.21-.031..031..034..034..036..037..039..04..04..042..043..044..045.16-.046..046..047..048..049..049..05..05..05..051..052..051.11-.052..052..052..052..052..053..051..052..052.07-.051..051.06-.051..05..05..024..025..024.02-.024..024..024..024..023..024..023..023.01-.023.01-.022..022..022..022..022..021..021..021v-4.127l-.077..08..083..085..087..09..093..095.05-.097.05-.1..102..105..106..109..111..114..115..118..12..122..124..126..128.04-.13.04-.132..134..135..138..139..142..143..144..147..148..15.03-.151.03-.153..154..156..158..159..161..162..163..165..166.02-.167..169..169..171..173..173..175..175..177..178.01-.179..179..181..182..182..184..184.002h-.37l-................01-.............17-.......02-..........025-.157-.026-.156-.027-.155-.027-.153-.029-.151-.03-.15-.03-.148-.031-.146-.032-.145-.033-.143-.034-.141-.035-.14-.035-.137-.037-.136-.037-.134-.038-.132-.038-.13-.04-.128-.04-.126-.041-.124-.042-.122-.042-.12-.044-.117-.043-.116-.045-.113-.045-.112-.046-.109-.047-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.05-.093-.052-.09-.051-.087-.052-.085-.053-.083-.054-.08-.054-.077-.054v4.127zm0-5.654v.011l......................................26-.001.257-.003.254-.006.25-.008.247-.01.244-.012.241-.015.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.048.139-.05.136-.049.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.051.051-.049.023-.025.023-.024.021-.025.02-.024.019-.024.018-.024.017-.024.015-.023.014-.023.013-.024.012-.022.01-.023.01-.023.008-.022.006-.022.006-.022.004-.021.004-.022.001-.021.001-.021v-4.139l-.077.054-.08.054-.083.054-.085.052-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.044-.118.044-.12.044-.122.042-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.035-.143.033-.144.033-.147.033-.148.031-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.009-.179.009-.179.007-.181.007-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.007-.179-.007-.179-.009-.178-.009-.176-."}
{"url": "https://blog.csdn.net/weixin_58828562/article/details/134921508", "article_id": 134921508, "username": "weixin_58828562", "title": "尚筹项目----尚筹网——day11[过渡]---12----SpringBoot---配置文件、yml文件、读取yml、创建测试工程", "body": "<p>d <img alt=\"\" height=\"769\" src=\"https://img-blog.csdnimg.cn/direct/0bea44a67be24d67a65328457891f6be.png\" width=\"1200\" /></p>\n\n<p><img alt=\"\" height=\"581\" src=\"https://img-blog.csdnimg.cn/direct/ceb033427e504f0e8b62aaae10e5d7ef.png\" width=\"923\" /></p>\n\n<p><img alt=\"\" height=\"822\" src=\"https://img-blog.csdnimg.cn/direct/44886c16b66d4ed2a82d2559c34dee0e.png\" width=\"1032\" /></p>\n\n<p><img alt=\"\" height=\"642\" src=\"https://img-blog.csdnimg.cn/direct/9fc7be1aa2764911b51ed43caa1c1508.png\" width=\"1200\" /></p>\n\n<p><img alt=\"\" height=\"713\" src=\"https://img-blog.csdnimg.cn/direct/d01c38b59d564d87823b560fbe41e7e9.png\" width=\"844\" /></p>\n\n<p><img alt=\"\" height=\"699\" src=\"https://img-blog.csdnimg.cn/direct/20b8097b576748fea4a1b02eaf3fa556.png\" width=\"827\" /></p>\n\n<p><img alt=\"\" height=\"853\" src=\"https://img-blog.csdnimg.cn/direct/2910feb676ed469092f03cf3fdb48251.png\" width=\"1097\" /></p>\n\n<p><img alt=\"\" height=\"546\" src=\"https://img-blog.csdnimg.cn/direct/d4b2cf2ac3e44799a3f282b2d33f1f30.png\" width=\"1200\" /></p>\n\n<p><img alt=\"\" height=\"566\" src=\"https://img-blog.csdnimg.cn/direct/eb299ce75cd641628116fec8efb50471.png\" width=\"1200\" /></p>\n\n<p><img alt=\"\" height=\"533\" src=\"https://img-blog.csdnimg.cn/direct/5a635d3d2af84942b60bb71ce6be61d3.png\" width=\"1200\" /></p>\n\n<p><img alt=\"\" height=\"302\" src=\"https://img-blog.csdnimg.cn/direct/403a0f8f8c86434bb5a1954a9c12b03b.png\" width=\"442\" /></p>\n\n<p><img alt=\"\" height=\"464\" src=\"https://img-blog.csdnimg.cn/direct/a4b649e17cbd468aa7d9cca326940a88.png\" width=\"1142\" /></p>\n\n<p><img alt=\"\" height=\"428\" src=\"https://img-blog.csdnimg.cn/direct/4ada29a1bf4c49debc1fd5a1064f11d4.png\" width=\"1120\" /></p>\n\n<p><img alt=\"\" height=\"826\" src=\"https://img-blog.csdnimg.cn/direct/5dd064bac3814d02a4998e39a0672952.png\" width=\"1200\" /></p>\n\n<p><img alt=\"\" height=\"463\" src=\"https://img-blog.csdnimg.cn/direct/8194c6a039834032ae95a0ad3a0c97d6.png\" width=\"1089\" /></p>\n\n<p><img alt=\"\" height=\"835\" src=\"https://img-blog.csdnimg.cn/direct/b25d4ca7765a4002b84bbdd6ed8a8825.png\" width=\"1200\" /></p>\n\n<p><img alt=\"\" height=\"528\" src=\"https://img-blog.csdnimg.cn/direct/d1034c04226c47cbae7b38ff22db3cb6.png\" width=\"1200\" /></p>\n\n<p><img alt=\"\" height=\"734\" src=\"https://img-blog.csdnimg.cn/direct/9b117b577af14345a8d556bb09cc793f.png\" width=\"1200\" /></p>\n\n<p><img alt=\"\" height=\"629\" src=\"https://img-blog.csdnimg.cn/direct/cf0776b4015044318db44f8c2400121e.png\" width=\"1071\" /></p>\n\n<p><img alt=\"\" height=\"516\" src=\"https://img-blog.csdnimg.cn/direct/dd9cd369671345bfbd357458ff787d44.png\" width=\"1200\" /></p>\n\n<p><img alt=\"\" height=\"415\" src=\"https://img-blog.csdnimg.cn/direct/55399b608d5145118def684550846b25.png\" width=\"1024\" /></p>\n\n<p><img alt=\"\" height=\"263\" src=\"https://img-blog.csdnimg.cn/direct/4fb796fbb9134662830481d36d0155a5.png\" width=\"1158\" /></p>\n\n<p><img alt=\"\" height=\"624\" src=\"https://img-blog.csdnimg.cn/direct/dda1e7b33c67483b88522c5dd1bc87f8.png\" width=\"1200\" /></p>\n\n<p>无法进行包扫描 </p>\n\n<p></p>\n\n<p></p>\n\n<p></p>\n", "status": 64, "cleanedContent": ""}
{"url": "https://blog.csdn.net/m0_72465967/article/details/134921557", "article_id": 134921557, "username": "m0_72465967", "title": "基于SSM+MySQL+LayUI+JSP的公共交通运输信息管理系统", "body": "<h3><a id=\"_0\"></a>演示视频</h3>\n<p></p><div class=\"csdn-data-video\" data-mediaembed=\"bilibili\" data-video-id=\"wqlgSekJ-1702263008490\" data-video-url=\"https://player.bilibili.com/player.html?aid=769263494\" data-video-cover=\"https://img-blog.csdnimg.cn/img_convert/4ec7b0e5c88199b7736263efb5d2856e.jpeg\" data-video-title=\"基于SSM+MySQL+LayUI+JSP的公共交通运输信息管理系统\">\n<img src=\"https://img-blog.csdnimg.cn/img_convert/4ec7b0e5c88199b7736263efb5d2856e.jpeg\">\n<p>基于SSM+MySQL+LayUI+JSP的公共交通运输信息管理系统</p>\n</div><p></p>\n<h3><a id=\"_6\"></a>技术描述</h3>\n<p>开发工具： Idea/Eclipse<br>\n数据库： mysql<br>\nJar包仓库： Maven<br>\n前段框架：Html/JSP/LayUI<br>\n后端框架： Spring+SpringMVC+Mybatis</p>\n<h3><a id=\"_13\"></a>文字描述</h3>\n<p>基于SSM+MySQL+LayUI+JSP的公共交通运输信息管理系统，分为管理员和用户两个角色，整体功能包含用户管理，车站管理，公交路线管理，新闻管理，轮播图管理，用户意见管理，司机管理。用户登录，用户个人信息维护，意见反馈，公交查询等。</p>\n<h3><a id=\"_18\"></a>部分截图内容</h3>\n<p><img src=\"https://img-blog.csdnimg.cn/direct/ca3f9ce94adf4e7aa5541a1adc2aa1a9.jpeg\" alt=\"请添加图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/direct/fd3c5f85eca240bf883f56b3eb439094.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/71a9cd635b9e4ddda6ff5c6da55e9a2b.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/6360cfc5c53247eaa86d311695cb37de.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/b5a5f7aa257e4637b3365901ac6d8efe.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/f54407c586884a849ec8f391a8a8a71b.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/8f42af8f004b44a7995042f280e27fe5.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/c65c2beb6e3747f0bd6e108565fd1b19.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/65d8e04b21444878b446595d206eb4a7.jpeg\" alt=\"请添加图片描述\"></p>\n\n", "status": 1, "cleanedContent": "<h3><a id=\"_0\"></a>演示视频</h3> <p></p><div class=\"csdn-data-video\" data-mediaembed=\"bilibili\" data-video-id=\"wqlgSekJ-\" data-video-url=\"\" data-video-cover=\"\" data-video-title=\"基于SSM+MySQL+LayUI+JSP的公共交通运输信息管理系统\"> <img src=\"\"> <p>基于SSM+MySQL+LayUI+JSP的公共交通运输信息管理系统</p> </div><p></p> <h3><a id=\"_6\"></a>技术描述</h3> <p>开发工具： Idea/Eclipse<br> 数据库： mysql<br> Jar包仓库： Maven<br> 前段框架：Html/JSP/LayUI<br> 后端框架： Spring+SpringMVC+Mybatis</p> <h3><a id=\"_13\"></a>文字描述</h3> <p>基于SSM+MySQL+LayUI+JSP的公共交通运输信息管理系统，分为管理员和用户两个角色，整体功能包含用户管理，车站管理，公交路线管理，新闻管理，轮播图管理，用户意见管理，司机管理。用户登录，用户个人信息维护，意见反馈，公交查询等。"}
{"url": "https://blog.csdn.net/haoozhuji/article/details/134938949", "article_id": 134938949, "username": "haoozhuji", "title": "2023年12月腾讯云轻量主机2核2G配置多少钱1年", "body": "<p>在2023年12月，腾讯云轻量服务器的2核2G配置的价格为<strong>88元/年</strong>。</p>\n\n<p>此外，腾讯云还提供了轻量2核2G3M配置，价格为<strong>88元/年</strong>。以上价格可能因优惠活动等因素有所变动，具体请参考腾讯云官方网站的价格信息。在2023年12月，腾讯云轻量服务器提供了多种配置选项，其中2核2G配置的价格为88元/年。这个价格相较于其他云服务提供商的类似配置可能具有一定的竞争力。</p>\n\n<p><strong>腾讯云最新活动地址：</strong><strong> <a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release2.3.6/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=N7T8\" data-link-title=\"2bcd.com/go/tx/\" href=\"https://cloud.tencent.com/act/cps/redirect?redirect=5471&amp;cps_key=d8fef58d2c4243558f5a8d62e2e44ff5&amp;from=console\" title=\"2bcd.com/go/tx/\">2bcd.com/go/tx/</a></strong></p>\n\n<p><strong>云产品续费贵，选3/5年时长的，</strong><strong>升级贵，建议选配置高的。</strong></p>\n\n<p><strong>新人领<a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release2.3.6/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=N7T8\" data-link-title=\"2860代金券：2bcd.com/go/xinke/\" href=\"https://cloud.tencent.com/act/pro/voucherslist?from=20932&amp;cps_key=d8fef58d2c4243558f5a8d62e2e44ff5&amp;from=console\" title=\"2860代金券：2bcd.com/go/xinke/\">2860代金券：2bcd.com/go/xinke/</a></strong></p>\n\n<p><strong>（复制链接浏览器打开即可前往领到）</strong></p>\n\n<p>腾讯云轻量服务器是一种高效、可扩展的虚拟化计算服务，可以帮助用户轻松构建和管理Web应用程序、数据库和其他网络服务。其优点包括简单易用、快速部署、灵活扩展和安全可靠。</p>\n\n<p>除了2核2G配置外，腾讯云还提供了其他多种配置选项，以满足不同用户的需求。其中，轻量2核2G3M配置也是一种受欢迎的选择，价格为88元/年。这种配置适用于一些轻量级的应用程序，如个人博客、小型公司网站等。</p>\n\n<p>需要注意的是，以上价格仅供参考，实际价格可能因优惠活动、促销政策等因素而有所变动。因此，建议用户在购买前仔细比较不同配置和价格之间的差异，并参考腾讯云官方网站的价格信息进行购买。</p>\n", "status": 1, "cleanedContent": "<p>在2023年12月，腾讯云轻量服务器的2核2G配置的价格为<strong>88元/年</strong>。</p> <p>此外，腾讯云还提供了轻量2核2G3M配置，价格为<strong>88元/年</strong>。以上价格可能因优惠活动等因素有所变动，具体请参考腾讯云官方网站的价格信息。在2023年12月，腾讯云轻量服务器提供了多种配置选项，其中2核2G配置的价格为88元/年。这个价格相较于其他云服务提供商的类似配置可能具有一定的竞争力。</p> <p><strong>腾讯云最新活动地址：</strong><strong> <a data-link-icon=\"\" data-link-title=\"\" href=\"\" title=\"\"></a></strong></p> <p><strong>云产品续费贵，选3/5年时长的，</strong><strong>升级贵，建议选配置高的。</strong></p> <p><strong>新人领<a data-link-icon=\"\" data-link-title=\"2860代金券：2bcd.com/go/xinke/\" href=\"\" title=\"2860代金券：2bcd.com/go/xinke/\">2860代金券：2bcd.com/go/xinke/</a></strong></p> <p><strong>（复制链接浏览器打开即可前往领到）</strong></p> <p>腾讯云轻量服务器是一种高效、可扩展的虚拟化计算服务，可以帮助用户轻松构建和管理Web应用程序、数据库和其他网络服务。其优点包括简单易用、快速部署、灵活扩展和安全可靠。</p> <p>除了2核2G配置外，腾讯云还提供了其他多种配置选项，以满足不同用户的需求。其中，轻量2核2G3M配置也是一种受欢迎的选择，价格为88元/年。这种配置适用于一些轻量级的应用程序，如个人博客、小型公司网站等。</p> <p>需要注意的是，以上价格仅供参考，实际价格可能因优惠活动、促销政策等因素而有所变动。因此，建议用户在购买前仔细比较不同配置和价格之间的差异，并参考腾讯云官方网站的价格信息进行购买。"}
{"url": "https://blog.csdn.net/m0_72465967/article/details/134922205", "article_id": 134922205, "username": "m0_72465967", "title": "基于SSM+SpringBoot+MySQL+Vue的高校人才简历管理系统(附论文)", "body": "<h3><a id=\"_0\"></a>演示视频</h3>\n<p></p><div class=\"csdn-data-video\" data-mediaembed=\"bilibili\" data-video-id=\"XLCrGU2E-1702264107536\" data-video-url=\"https://player.bilibili.com/player.html?aid=742309122\" data-video-cover=\"https://img-blog.csdnimg.cn/img_convert/17e85457b99ce423326c3c0c4328ffe0.jpeg\" data-video-title=\"基于SSM+SpringBoot+MySQL+Vue的高校人才简历管理系统\">\n<img src=\"https://img-blog.csdnimg.cn/img_convert/17e85457b99ce423326c3c0c4328ffe0.jpeg\">\n<p>基于SSM+SpringBoot+MySQL+Vue的高校人才简历管理系统</p>\n</div><p></p>\n<h3><a id=\"_6\"></a>技术描述</h3>\n<p>开发工具： Idea/Eclipse<br>\n数据库： MySQL<br>\nJar包仓库： Maven<br>\n前端框架： Vue/ElementUI<br>\n后端框架： Spring+SpringMVC+Mybatis+SpringBoot</p>\n<h3><a id=\"_13\"></a>文字描述</h3>\n<p>基于SSM+SpringBoot+MySQL+Vue的高校人才简历管理系统(附论文),包含普通用户，管理员角色，整体功能包含<br>\n用户管理，简历模板管理，模板类型管理，招聘会管理，简历上传，我的收藏，系统管理，轮播图管理，个人简历上传，用户登录注册，招聘会报名参与，报名会审核通过等。总体设计主要包括系统功能设计、系统总体结构设计、系统数据结构设计和系统安全设计等；详细设计主要包括系统数据库访问的实现，主要功能模块的具体实现，模块实现关键代码等。最后对系统进行功能测试，并对测试结果进行分析总结。</p>\n<h3><a id=\"_19\"></a>部分截图内容</h3>\n<p><img src=\"https://img-blog.csdnimg.cn/direct/bcc21d3a8a064913899ada6b9191e4e7.jpeg\" alt=\"请添加图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/direct/9f220cb95afb48278855a92a2d3ceb96.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/af1d66ab6e3b48149ef0ffa042580344.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/a5853c4419404d69ae290218fb675023.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/837534e84dee496ba882e694a9d4849d.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/9daad82b05da47a99f36884204bf1df9.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/9603b4c597494fe59411bfaa9a055286.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/fb30f9c07909462f98003a7e1e315714.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/257fa47f6ac7416c92104221db73cacb.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/b513caf8e5b244d8828dcc9f875ba41e.jpeg\" alt=\"请添加图片描述\"><br>\n<img src=\"https://img-blog.csdnimg.cn/direct/9bd4b88efed4408c8f1f9933edfb8da4.jpeg\" alt=\"请添加图片描述\"></p>\n\n", "status": 1, "cleanedContent": "<h3><a id=\"_0\"></a>演示视频</h3> <p></p><div class=\"csdn-data-video\" data-mediaembed=\"bilibili\" data-video-id=\"XLCrGU2E-\" data-video-url=\"\" data-video-cover=\"\" data-video-title=\"基于SSM+SpringBoot+MySQL+Vue的高校人才简历管理系统\"> <img src=\"\"> <p>基于SSM+SpringBoot+MySQL+Vue的高校人才简历管理系统</p> </div><p></p> <h3><a id=\"_6\"></a>技术描述</h3> <p>开发工具： Idea/Eclipse<br> 数据库： MySQL<br> Jar包仓库： Maven<br> 前端框架： Vue/ElementUI<br> 后端框架： Spring+SpringMVC+Mybatis+SpringBoot</p> <h3><a id=\"_13\"></a>文字描述</h3> <p>基于SSM+SpringBoot+MySQL+Vue的高校人才简历管理系统(附论文),包含普通用户，管理员角色，整体功能包含<br> 用户管理，简历模板管理，模板类型管理，招聘会管理，简历上传，我的收藏，系统管理，轮播图管理，个人简历上传，用户登录注册，招聘会报名参与，报名会审核通过等。总体设计主要包括系统功能设计、系统总体结构设计、系统数据结构设计和系统安全设计等；详细设计主要包括系统数据库访问的实现，主要功能模块的具体实现，模块实现关键代码等。最后对系统进行功能测试，并对测试结果进行分析总结。"}
{"url": "https://blog.csdn.net/qq_38537297/article/details/134922226", "article_id": 134922226, "username": "qq_38537297", "title": "Java基础", "body": "<h3><a id=\"_0\"></a>说明​</h3>\n<h4><a id=\"_1\"></a>两种核心机制</h4>\n<p>-&gt;Java虚拟机<br>\n-&gt;垃圾回收机制</p>\n<h4><a id=\"_5\"></a>运行机制</h4>\n<ol>\n<li>编译代码在java文件中</li>\n<li>用javac.exe对Java文件进行编译生成.class文件</li>\n<li>通过java.exe对lass文件进行运行。</li>\n<li>生成结果</li>\n</ol>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//生成字节码文件 HelloWord.class</span>\njavac <span class=\"token class-name\">HelloWord</span><span class=\"token punctuation\">.</span>java\n\n<span class=\"token comment\">//生成结果 实际上执行的事class文件</span>\njava <span class=\"token class-name\">HelloWord</span>\n</code></pre>\n<h4><a id=\"_19\"></a>源文件解释</h4>\n<ol>\n<li>一个源文件最多只能有一个public类，</li>\n<li>并且public类名必须是源文件名。</li>\n</ol>\n<h4><a id=\"_22\"></a>注释</h4>\n<ol start=\"3\">\n<li>单行注释</li>\n<li>多行注释</li>\n<li>文本注释</li>\n</ol>\n<h3><a id=\"_26\"></a>语法</h3>\n<h4><a id=\"_27\"></a>关键字</h4>\n<p>定义：被Java语言赋予了特殊含义，用作专门用途的字符串（单词）<br>\n特点：关键字中所有字母都为小写<br>\n举例：break long char String</p>\n<h4><a id=\"_31\"></a>标识符</h4>\n<h4><a id=\"_32\"></a>变量的声明和使用</h4>\n\n", "status": 1, "cleanedContent": "<h3><a id=\"_0\"></a>说明</h3> <h4><a id=\"_1\"></a>两种核心机制</h4> <p>->Java虚拟机<br> ->垃圾回收机制</p> <h4><a id=\"_5\"></a>运行机制</h4> <ol> <li>编译代码在java文件中</li> <li>用javac.exe对Java文件进行编译生成.class文件</li> <li>通过java.exe对lass文件进行运行。</li> <li>生成结果</li> </ol> <pre><code class=\"prism language-java\"><span class=\"token comment\">//生成字节码文件 HelloWord.class</span> javac <span class=\"token class-name\">HelloWord</span><span class=\"token punctuation\">.</span>java <span class=\"token comment\">//生成结果 实际上执行的事class文件</span> java <span class=\"token class-name\">HelloWord</span> </code></pre> <h4><a id=\"_19\"></a>源文件解释</h4> <ol> <li>一个源文件最多只能有一个public类，</li> <li>并且public类名必须是源文件名。"}
{"url": "https://blog.csdn.net/a123553628/article/details/134922986", "article_id": 134922986, "username": "a123553628", "title": "博客摘录「 [docker系列] redis启动异常 overcommit_memory is set to 0 ,Fatal error loading the D...」2023年12月11日", "body": "<p>sudo sysctl vm.overcommit_memory</p>\n", "status": 2, "cleanedContent": "<p>sudo sysctl vm."}
{"url": "https://blog.csdn.net/2301_78746715/article/details/134923115", "article_id": 134923115, "username": "2301_78746715", "title": "【无标题】", "body": "<p>package mr;</p>\n\n<p></p>\n\n<p></p>\n\n<p>import java.awt.Font;</p>\n\n<p>import java.io.*;</p>\n\n<p></p>\n\n<p>import org.jfree.chart.ChartColor;</p>\n\n<p>import org.jfree.chart.ChartFactory;</p>\n\n<p>import org.jfree.chart.ChartFrame;</p>\n\n<p>import org.jfree.chart.JFreeChart;</p>\n\n<p>import org.jfree.chart.axis.CategoryAxis;</p>\n\n<p>import org.jfree.chart.axis.NumberAxis;</p>\n\n<p>import org.jfree.chart.plot.CategoryPlot;</p>\n\n<p>import org.jfree.chart.plot.*;</p>\n\n<p>import org.jfree.chart.plot.PlotOrientation;</p>\n\n<p>import org.jfree.chart.title.LegendTitle;</p>\n\n<p>import org.jfree.chart.title.TextTitle;</p>\n\n<p>import org.jfree.data.category.DefaultCategoryDataset;</p>\n\n<p>import org.jfree.chart.ChartUtilities;</p>\n\n<p>public class java {</p>\n\n<p>public static void main( String[ ] args )throws Exception {</p>\n\n<p>final String fait = \"菲亚特\";</p>\n\n<p>final String audi = \"奥迪\";</p>\n\n<p>final String ford = \"福特\";</p>\n\n<p>final String speed = \"速度\";</p>\n\n<p>final String popular = \"流行度\";</p>\n\n<p>final String mailage = \"里程\";</p>\n\n<p>final String userrating = \"使用率\";</p>\n\n<p>final String safety = \"安全\";</p>\n\n<p>final DefaultCategoryDataset dataset = new DefaultCategoryDataset( );</p>\n\n<p></p>\n\n<p>// 读取txt</p>\n\n<p></p>\n\n<p>FileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\期末作品数据与要求\\\\期末作品数据与要求\\\\航空数据.txt\");</p>\n\n<p>int b;</p>\n\n<p>while ((b = fis.read()) != -1) {</p>\n\n<p>System.out.print((char) b);</p>\n\n<p>String encoding=\"UTF-8\";</p>\n\n<p>}</p>\n\n<p>fis.close();</p>\n\n<p>//</p>\n\n<p>// try {</p>\n\n<p>// string encoding=\"UTF-8\";</p>\n\n<p>// File file = new File(filePath);</p>\n\n<p>// if(file.isFile() &amp;&amp; file.exists()) {</p>\n\n<p>// InputStreamReader read = new BufferedReader(</p>\n\n<p>// new FileInputStream(file),encoding);</p>\n\n<p>// BufferedReader bufferedReader = new BufferedReader(read);</p>\n\n<p>// String lineTxt = null;</p>\n\n<p>// while((linTxt = bufferedReader.readLine()) != null) {</p>\n\n<p>// System.out.println(lineTxt);</p>\n\n<p>// }</p>\n\n<p>// read.close();</p>\n\n<p>// }else {</p>\n\n<p>// System.out.println(\"找不到文件\");</p>\n\n<p>// }</p>\n\n<p>// }</p>\n\n<p></p>\n\n<p>JFreeChart barChart = ChartFactory.createBarChart3D(</p>\n\n<p>\"汽车使用统计\",</p>\n\n<p>\"种类\",</p>\n\n<p>\"得分\",</p>\n\n<p>dataset,</p>\n\n<p>PlotOrientation.VERTICAL,</p>\n\n<p>true, true, false);</p>\n\n<p>int width = 640; /* Width of the image */</p>\n\n<p>int height = 480; /* Height of the image */</p>\n\n<p>File barChart3D = new File( \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\柱状图1.jpeg\" );</p>\n\n<p>CategoryPlot p=barChart.getCategoryPlot();</p>\n\n<p>p.setBackgroundPaint(ChartColor.black);</p>\n\n<p>Font titleFont = new Font(\"黑体\", Font.BOLD, 20);</p>\n\n<p>TextTitle textTitle = barChart.getTitle();</p>\n\n<p>textTitle.setFont(titleFont);</p>\n\n<p></p>\n\n<p>CategoryPlot plot = barChart.getCategoryPlot();// 获得图表区域对象</p>\n\n<p>// 设置图表的纵轴和横轴org.jfree.chart.axis.CategoryAxis</p>\n\n<p>CategoryAxis domainAxis = plot.getDomainAxis();</p>\n\n<p>NumberAxis numberaxis = (NumberAxis) plot.getRangeAxis();</p>\n\n<p></p>\n\n<p></p>\n\n<p>textTitle.setFont(new Font(\"黑体\", Font.PLAIN, 20));</p>\n\n<p>domainAxis.setTickLabelFont(new Font(\"sans-serif\", Font.PLAIN, 11));</p>\n\n<p>domainAxis.setLabelFont(new Font(\"宋体\", Font.PLAIN, 12));</p>\n\n<p>numberaxis.setTickLabelFont(new Font(\"sans-serif\", Font.PLAIN, 12));</p>\n\n<p>numberaxis.setLabelFont(new Font(\"黑体\", Font.PLAIN, 12));</p>\n\n<p>barChart.getLegend().setItemFont(new Font(\"宋体\", Font.PLAIN, 12));</p>\n\n<p></p>\n\n<p></p>\n\n<p>Font LegendFont = new Font(\"楷体\", Font.PLAIN, 18);</p>\n\n<p>LegendTitle legend = barChart.getLegend(0);</p>\n\n<p>legend.setItemFont(LegendFont);</p>\n\n<p></p>\n\n<p>ChartUtilities.saveChartAsJPEG( barChart3D, barChart, width, height);</p>\n\n<p></p>\n\n<p>// 利用awt进行显示</p>\n\n<p>ChartFrame chartFrame = new ChartFrame(\"Test\", barChart);</p>\n\n<p>chartFrame.pack();</p>\n\n<p>chartFrame.setVisible(true);</p>\n\n<p>}</p>\n\n<p>}</p>\n", "status": 2, "cleanedContent": "<p>package mr;</p> <p></p> <p></p> <p>import java.awt.Font;</p> <p>import java.io.*;</p> <p></p> <p>import org.jfree.chart.ChartColor;</p> <p>import org.jfree.chart.ChartFactory;</p> <p>import org.jfree.chart.ChartFrame;</p> <p>import org.jfree.chart.JFreeChart;</p> <p>import org.jfree.chart.axis.CategoryAxis;</p> <p>import org.jfree.chart.axis.NumberAxis;</p> <p>import org.jfree.chart.plot.CategoryPlot;</p> <p>import org.jfree.chart.plot.*;</p> <p>import org.jfree.chart.plot.PlotOrientation;</p> <p>import org.jfree.chart.title.LegendTitle;</p> <p>import org.jfree.chart.title.TextTitle;</p> <p>import org.jfree.data.category.DefaultCategoryDataset;</p> <p>import org.jfree.chart.ChartUtilities;</p> <p>public class java {</p> <p>public static void main( String[ ] args )throws Exception {</p> <p>final String fait = \"菲亚特\";</p> <p>final String audi = \"奥迪\";</p> <p>final String ford = \"福特\";</p> <p>final String speed = \"速度\";</p> <p>final String popular = \"流行度\";</p> <p>final String mailage = \"里程\";</p> <p>final String userrating = \"使用率\";</p> <p>final String safety = \"安全\";</p> <p>final DefaultCategoryDataset dataset = new DefaultCategoryDataset( );</p> <p></p> <p>// 读取txt</p> <p></p> <p>FileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\期末作品数据与要求\\\\期末作品数据与要求\\\\航空数据.txt\");</p> <p>int b;</p> <p>while ((b = fis.read()) != -1) {</p> <p>System.out.print((char) b);</p> <p>String encoding=\"UTF-8\";</p> <p>}</p> <p>fis.close();</p> <p>//</p> <p>// try {</p> <p>// string encoding=\"UTF-8\";</p> <p>// File file = new File(filePath);</p> <p>// if(file.isFile() && file.exists()) {</p> <p>// InputStreamReader read = new BufferedReader(</p> <p>// new FileInputStream(file),encoding);</p> <p>// BufferedReader bufferedReader = new BufferedReader(read);</p> <p>// String lineTxt = null;</p> <p>// while((linTxt = bufferedReader.readLine()) != null) {</p> <p>// System.out.println(lineTxt);</p> <p>// }</p> <p>// read.close();</p> <p>// }else {</p> <p>// System.out.println(\"找不到文件\");</p> <p>// }</p> <p>// }</p> <p></p> <p>JFreeChart barChart = ChartFactory.createBarChart3D(</p> <p>\"汽车使用统计\",</p> <p>\"种类\",</p> <p>\"得分\",</p> <p>dataset,</p> <p>PlotOrientation.VERTICAL,</p> <p>true, true, false);</p> <p>int width = 640; /* Width of the image */</p> <p>int height = 480; /* Height of the image */</p> <p>File barChart3D = new File( \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\柱状图1.jpeg\" );</p> <p>CategoryPlot p=barChart.getCategoryPlot();</p> <p>p.setBackgroundPaint();</p> <p>Font titleFont = new Font(\"黑体\", Font.BOLD, 20);</p> <p>TextTitle textTitle = barChart.getTitle();</p> <p>textTitle.setFont(titleFont);</p> <p></p> <p>CategoryPlot plot = barChart.getCategoryPlot();// 获得图表区域对象</p> <p>// 设置图表的纵轴和横轴org.jfree.chart.axis.CategoryAxis</p> <p>CategoryAxis domainAxis = plot.getDomainAxis();</p> <p>NumberAxis numberaxis = (NumberAxis) plot.getRangeAxis();</p> <p></p> <p></p> <p>textTitle.setFont(new Font(\"黑体\", Font.PLAIN, 20));</p> <p>domainAxis.setTickLabelFont(new Font(\"sans-serif\", Font.PLAIN, 11));</p> <p>domainAxis.setLabelFont(new Font(\"宋体\", Font.PLAIN, 12));</p> <p>numberaxis.setTickLabelFont(new Font(\"sans-serif\", Font.PLAIN, 12));</p> <p>numberaxis.setLabelFont(new Font(\"黑体\", Font.PLAIN, 12));</p> <p>barChart.getLegend().setItemFont(new Font(\"宋体\", Font.PLAIN, 12));</p> <p></p> <p></p> <p>Font LegendFont = new Font(\"楷体\", Font.PLAIN, 18);</p> <p>LegendTitle legend = barChart.getLegend(0);</p> <p>legend.setItemFont(LegendFont);</p> <p></p> <p>ChartUtilities.saveChartAsJPEG( barChart3D, barChart, width, height);</p> <p></p> <p>// 利用awt进行显示</p> <p>ChartFrame chartFrame = new ChartFrame(\"Test\", barChart);</p> <p>chartFrame.pack();</p> <p>chartFrame.setVisible(true);"}
{"url": "https://blog.csdn.net/2301_77301535/article/details/134943294", "article_id": 134943294, "username": "2301_77301535", "title": "记录一下along3x失败经验", "body": "<p>这题打开就是填写用户名和注册码，但是有个一个关键的特点就是判断的按钮没有用，所以这边大胆猜测是进行比较，为了保险起见对于其它按钮进行点击查看是否存在彩蛋。</p>\n\n<p>点击About-Hlep出现这四条提示</p>\n\n<p><img alt=\"\" height=\"220\" src=\"https://img-blog.csdnimg.cn/direct/06dbdce877db46619d680fd38296679f.png\" width=\"1055\" /></p>\n\n<p><img alt=\"\" height=\"225\" src=\"https://img-blog.csdnimg.cn/direct/f83240b9ac6f4c808f70de2b76c329d8.png\" width=\"747\" /></p>\n\n<p><img alt=\"\" height=\"213\" src=\"https://img-blog.csdnimg.cn/direct/2c5f475a8d284259a0e535bb97642cc8.png\" width=\"825\" /></p>\n\n<p><img alt=\"\" height=\"189\" src=\"https://img-blog.csdnimg.cn/direct/7eec5e86307947dd8681a3f868f9418e.png\" width=\"777\" /></p>\n\n<p>我们直接挑重点总结:</p>\n\n<p>1、第一条说的是隐形按钮</p>\n\n<p>2、如果没有隐形按钮则是破解失败</p>\n\n<p>剩下的没有什么卵用。老样子先拖进exeinfope</p>\n\n<p><img alt=\"\" height=\"250\" src=\"https://img-blog.csdnimg.cn/direct/358bedd10672444092ee529dca96510a.png\" width=\"534\" /></p>\n\n<p>这里的关键信息 32位程序，用Delphl进行创建，以及最关键的没有壳。好到这一步分析完毕拖到od进行破解</p>\n\n<p>进来没有发现有用的信息，查看字符串在里面搜索关键词。</p>\n\n<p>进来发现没有搜到任何有用的信息，我很蒙圈在这个情况，于是直接拖到最后看，果然我发现了新大陆，</p>\n\n<p><img alt=\"\" height=\"306\" src=\"https://img-blog.csdnimg.cn/direct/7bad09f92c9c480f983b787747b620cd.png\" width=\"900\" /></p>\n\n<p>这里信息很关键啊，选择yes进行跟踪，进来进看到这个玩意对应的一个短条件跳转</p>\n\n<p><img alt=\"\" height=\"1200\" src=\"https://img-blog.csdnimg.cn/direct/e1d4b2a19e4c436ba5da71fd7be5d552.png\" width=\"1071\" /></p>\n\n<p>那这里就很关键了，为了防止这里是欺骗我，我向上继续看有什么有用的信息，好并没有发现什么有用的东西，我直接就是把比较跳转填充进行爆破，我看看怎么个事。好进行修改保存我发现这波我小丑了。我们继续分析，这边又发现一个文本比较然后进行跳转，这里我比较兴奋又有了进展了（苍蝇搓手）不管不管直接爆破，好依旧没什么卵用去观摩观摩佬怎么做的。</p>\n", "status": 1, "cleanedContent": "<p>这题打开就是填写用户名和注册码，但是有个一个关键的特点就是判断的按钮没有用，所以这边大胆猜测是进行比较，为了保险起见对于其它按钮进行点击查看是否存在彩蛋。</p> <p>点击About-Hlep出现这四条提示</p> <p><img alt=\"\" height=\"220\" src=\"\" width=\"1055\" /></p> <p><img alt=\"\" height=\"225\" src=\"\" width=\"747\" /></p> <p><img alt=\"\" height=\"213\" src=\"\" width=\"825\" /></p> <p><img alt=\"\" height=\"189\" src=\"\" width=\"777\" /></p> <p>我们直接挑重点总结:</p> <p>1、第一条说的是隐形按钮</p> <p>2、如果没有隐形按钮则是破解失败</p> <p>剩下的没有什么卵用。老样子先拖进exeinfope</p> <p><img alt=\"\" height=\"250\" src=\"\" width=\"534\" /></p> <p>这里的关键信息 32位程序，用Delphl进行创建，以及最关键的没有壳。好到这一步分析完毕拖到od进行破解</p> <p>进来没有发现有用的信息，查看字符串在里面搜索关键词。</p> <p>进来发现没有搜到任何有用的信息，我很蒙圈在这个情况，于是直接拖到最后看，果然我发现了新大陆，</p> <p><img alt=\"\" height=\"306\" src=\"\" width=\"900\" /></p> <p>这里信息很关键啊，选择yes进行跟踪，进来进看到这个玩意对应的一个短条件跳转</p> <p><img alt=\"\" height=\"1200\" src=\"\" width=\"1071\" /></p> <p>那这里就很关键了，为了防止这里是欺骗我，我向上继续看有什么有用的信息，好并没有发现什么有用的东西，我直接就是把比较跳转填充进行爆破，我看看怎么个事。好进行修改保存我发现这波我小丑了。我们继续分析，这边又发现一个文本比较然后进行跳转，这里我比较兴奋又有了进展了（苍蝇搓手）不管不管直接爆破，好依旧没什么卵用去观摩观摩佬怎么做的。"}
{"url": "https://blog.csdn.net/universsky2015/article/details/134923197", "article_id": 134923197, "username": "universsky2015", "title": "数据规范化：与数据控制的关系及应用", "body": "<h1 id=\"1背景介绍\">1.背景介绍</h1>\n<p>数据规范化是一种数据处理技术，主要用于处理数据的不规范、不完整、不准确等问题。数据规范化的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据规范化的方法包括数据清洗、数据整理、数据标准化、数据校验等。</p>\n<p>数据控制是一种数据管理技术，主要用于控制数据的访问、修改、删除等操作。数据控制的目的是为了保护数据的安全性和完整性，防止数据被非法访问或修改。数据控制的方法包括数据加密、数据签名、数据权限控制等。</p>\n<p>数据规范化与数据控制之间存在密切的关系。数据规范化主要关注数据的质量问题，而数据控制主要关注数据的安全问题。在实际应用中，数据规范化和数据控制往往需要同时进行，以确保数据的质量和安全性。</p>\n<p>在本文中，我们将详细讲解数据规范化和数据控制的核心概念、算法原理、具体操作步骤和数学模型公式。同时，我们还将通过具体代码实例来说明数据规范化和数据控制的实际应用。</p>\n<h1 id=\"2核心概念与联系\">2.核心概念与联系</h1>\n<h2 id=\"21-数据规范化\">2.1 数据规范化</h2>\n<p>数据规范化是一种数据处理技术，主要用于处理数据的不规范、不完整、不准确等问题。数据规范化的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据规范化的方法包括数据清洗、数据整理、数据标准化、数据校验等。</p>\n<h3 id=\"211-数据清洗\">2.1.1 数据清洗</h3>\n<p>数据清洗是一种数据处理方法，主要用于处理数据的不规范、不完整、不准确等问题。数据清洗的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据清洗的方法包括数据去重、数据填充、数据纠正等。</p>\n<h3 id=\"212-数据整理\">2.1.2 数据整理</h3>\n<p>数据整理是一种数据处理方法，主要用于处理数据的不规范、不完整、不准确等问题。数据整理的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据整理的方法包括数据分类、数据排序、数据过滤等。</p>\n<h3 id=\"213-数据标准化\">2.1.3 数据标准化</h3>\n<p>数据标准化是一种数据处理方法，主要用于处理数据的不规范、不完整、不准确等问题。数据标准化的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据标准化的方法包括数据转换、数据缩放、数据归一化等。</p>\n<h3 id=\"214-数据校验\">2.1.4 数据校验</h3>\n<p>数据校验是一种数据处理方法，主要用于处理数据的不规范、不完整、不准确等问题。数据校验的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据校验的方法包括数据验证、数据检查、数据验证等。</p>\n<h2 id=\"22-数据控制\">2.2 数据控制</h2>\n<p>数据控制是一种数据管理技术，主要用于控制数据的访问、修改、删除等操作。数据控制的目的是为了保护数据的安全性和完整性，防止数据被非法访问或修改。数据控制的方法包括数据加密、数据签名、数据权限控制等。</p>\n<h3 id=\"221-数据加密\">2.2.1 数据加密</h3>\n<p>数据加密是一种数据保护技术，主要用于保护数据的安全性和完整性。数据加密的目的是为了防止数据被非法访问或修改。数据加密的方法包括对称加密、非对称加密、哈希加密等。</p>\n<h3 id=\"222-数据签名\">2.2.2 数据签名</h3>\n<p>数据签名是一种数据保护技术，主要用于保护数据的安全性和完整性。数据签名的目的是为了防止数据被非法访问或修改。数据签名的方法包括数字签名、消息摘要、数字证书等。</p>\n<h3 id=\"223-数据权限控制\">2.2.3 数据权限控制</h3>\n<p>数据权限控制是一种数据管理技术，主要用于控制数据的访问、修改、删除等操作。数据权限控制的目的是为了保护数据的安全性和完整性，防止数据被非法访问或修改。数据权限控制的方法包括用户权限管理、角色权限管理、数据库权限管理等。</p>\n<h1 id=\"3核心算法原理和具体操作步骤以及数学模型公式详细讲解\">3.核心算法原理和具体操作步骤以及数学模型公式详细讲解</h1>\n<h2 id=\"31-数据清洗\">3.1 数据清洗</h2>\n<h3 id=\"311-数据去重\">3.1.1 数据去重</h3>\n<p>数据去重是一种数据处理方法，主要用于处理数据中的重复记录。数据去重的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据去重的方法包括排序+遍历、哈希表等。</p>\n<h4 id=\"3111-排序遍历\">3.1.1.1 排序+遍历</h4>\n<p>排序+遍历是一种数据去重的方法，主要通过对数据进行排序，然后遍历数据，找到重复的记录并删除。具体操作步骤如下：</p>\n<ol>\n<li>对数据进行排序，可以使用快速排序、归并排序、堆排序等算法。</li>\n<li>遍历排序后的数据，找到重复的记录。</li>\n<li>删除重复的记录。</li>\n</ol>\n<h4 id=\"3112-哈希表\">3.1.1.2 哈希表</h4>\n<p>哈希表是一种数据结构，主要用于存储键值对。哈希表可以用于数据去重的方法，主要通过将数据的键值存储到哈希表中，然后遍历哈希表，找到重复的记录并删除。具体操作步骤如下：</p>\n<ol>\n<li>创建一个哈希表。</li>\n<li>遍历数据，将数据的键值存储到哈希表中。</li>\n<li>遍历哈希表，找到重复的记录并删除。</li>\n</ol>\n<h3 id=\"312-数据填充\">3.1.2 数据填充</h3>\n<p>数据填充是一种数据处理方法，主要用于处理数据中的缺失值。数据填充的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据填充的方法包括均值填充、中位数填充、最小值填充等。</p>\n<h4 id=\"3121-均值填充\">3.1.2.1 均值填充</h4>\n<p>均值填充是一种数据填充的方法，主要通过将数据的缺失值替换为数据的均值。具体操作步骤如下：</p>\n<ol>\n<li>计算数据的均值。</li>\n<li>遍历数据，将数据的缺失值替换为均值。</li>\n</ol>\n<h4 id=\"3122-中位数填充\">3.1.2.2 中位数填充</h4>\n<p>中位数填充是一种数据填充的方法，主要通过将数据的缺失值替换为数据的中位数。具体操作步骤如下：</p>\n<ol>\n<li>对数据进行排序。</li>\n<li>计算数据的中位数。</li>\n<li>遍历数据，将数据的缺失值替换为中位数。</li>\n</ol>\n<h4 id=\"3123-最小值填充\">3.1.2.3 最小值填充</h4>\n<p>最小值填充是一种数据填充的方法，主要通过将数据的缺失值替换为数据的最小值。具体操作步骤如下：</p>\n<ol>\n<li>计算数据的最小值。</li>\n<li>遍历数据，将数据的缺失值替换为最小值。</li>\n</ol>\n<h3 id=\"313-数据纠正\">3.1.3 数据纠正</h3>\n<p>数据纠正是一种数据处理方法，主要用于处理数据中的错误值。数据纠正的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据纠正的方法包括统计方法、模型方法等。</p>\n<h4 id=\"3131-统计方法\">3.1.3.1 统计方法</h4>\n<p>统计方法是一种数据纠正的方法，主要通过将数据的错误值替换为数据的统计值。统计方法包括均值纠正、中位数纠正、最小值纠正等。</p>\n<h5 id=\"31311-均值纠正\">3.1.3.1.1 均值纠正</h5>\n<p>均值纠正是一种统计方法，主要通过将数据的错误值替换为数据的均值。具体操作步骤如下：</p>\n<ol>\n<li>计算数据的均值。</li>\n<li>遍历数据，将数据的错误值替换为均值。</li>\n</ol>\n<h5 id=\"31312-中位数纠正\">3.1.3.1.2 中位数纠正</h5>\n<p>中位数纠正是一种统计方法，主要通过将数据的错误值替换为数据的中位数。具体操作步骤如下：</p>\n<ol>\n<li>对数据进行排序。</li>\n<li>计算数据的中位数。</li>\n<li>遍历数据，将数据的错误值替换为中位数。</li>\n</ol>\n<h5 id=\"31313-最小值纠正\">3.1.3.1.3 最小值纠正</h5>\n<p>最小值纠正是一种统计方法，主要通过将数据的错误值替换为数据的最小值。具体操作步骤如下：</p>\n<ol>\n<li>计算数据的最小值。</li>\n<li>遍历数据，将数据的错误值替换为最小值。</li>\n</ol>\n<h4 id=\"3132-模型方法\">3.1.3.2 模型方法</h4>\n<p>模型方法是一种数据纠正的方法，主要通过将数据的错误值替换为模型预测的值。模型方法包括线性回归纠正、逻辑回归纠正、支持向量机纠正等。</p>\n<h5 id=\"31321-线性回归纠正\">3.1.3.2.1 线性回归纠正</h5>\n<p>线性回归纠正是一种模型方法，主要通过将数据的错误值替换为线性回归预测的值。具体操作步骤如下：</p>\n<ol>\n<li>对数据进行预处理，将错误值替换为缺失值。</li>\n<li>使用线性回归模型对数据进行训练。</li>\n<li>使用训练好的线性回归模型对数据进行预测，将预测值替换为错误值。</li>\n</ol>\n<h5 id=\"31322-逻辑回归纠正\">3.1.3.2.2 逻辑回归纠正</h5>\n<p>逻辑回归纠正是一种模型方法，主要通过将数据的错误值替换为逻辑回归预测的值。具体操作步骤如下：</p>\n<ol>\n<li>对数据进行预处理，将错误值替换为缺失值。</li>\n<li>使用逻辑回归模型对数据进行训练。</li>\n<li>使用训练好的逻辑回归模型对数据进行预测，将预测值替换为错误值。</li>\n</ol>\n<h5 id=\"31323-支持向量机纠正\">3.1.3.2.3 支持向量机纠正</h5>\n<p>支持向量机纠正是一种模型方法，主要通过将数据的错误值替换为支持向量机预测的值。具体操作步骤如下：</p>\n<ol>\n<li>对数据进行预处理，将错误值替换为缺失值。</li>\n<li>使用支持向量机模型对数据进行训练。</li>\n<li>使用训练好的支持向量机模型对数据进行预测，将预测值替换为错误值。</li>\n</ol>\n<h2 id=\"32-数据整理\">3.2 数据整理</h2>\n<h3 id=\"321-数据分类\">3.2.1 数据分类</h3>\n<p>数据分类是一种数据处理方法，主要用于将数据分为多个类别。数据分类的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据分类的方法包括基于规则的分类、基于模型的分类等。</p>\n<h4 id=\"3211-基于规则的分类\">3.2.1.1 基于规则的分类</h4>\n<p>基于规则的分类是一种数据分类的方法，主要通过将数据的特征值与规则进行比较，将数据分为多个类别。具体操作步骤如下：</p>\n<ol>\n<li>定义数据的特征值。</li>\n<li>定义规则。</li>\n<li>将数据的特征值与规则进行比较，将数据分为多个类别。</li>\n</ol>\n<h4 id=\"3212-基于模型的分类\">3.2.1.2 基于模型的分类</h4>\n<p>基于模型的分类是一种数据分类的方法，主要通过将数据的特征值与模型进行比较，将数据分为多个类别。具体操作步骤如下：</p>\n<ol>\n<li>对数据进行预处理，将数据的特征值提取。</li>\n<li>使用模型对数据进行训练。</li>\n<li>使用训练好的模型对数据进行预测，将数据分为多个类别。</li>\n</ol>\n<h3 id=\"322-数据排序\">3.2.2 数据排序</h3>\n<p>数据排序是一种数据处理方法，主要用于将数据按照某个规则进行排序。数据排序的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据排序的方法包括快速排序、归并排序、堆排序等。</p>\n<h4 id=\"3221-快速排序\">3.2.2.1 快速排序</h4>\n<p>快速排序是一种数据排序的方法，主要通过将数据的一个元素作为基准，将其他元素分为两个部分，一个部分小于基准，一个部分大于基准，然后递归地对这两个部分进行排序。具体操作步骤如下：</p>\n<ol>\n<li>选择数据的一个元素作为基准。</li>\n<li>将其他元素分为两个部分，一个部分小于基准，一个部分大于基准。</li>\n<li>递归地对这两个部分进行排序。</li>\n<li>将排序后的两个部分与基准元素合并。</li>\n</ol>\n<h4 id=\"3222-归并排序\">3.2.2.2 归并排序</h4>\n<p>归并排序是一种数据排序的方法，主要通过将数据分为两个部分，然后递归地对这两个部分进行排序，最后将排序后的两个部分合并。具体操作步骤如下：</p>\n<ol>\n<li>将数据分为两个部分。</li>\n<li>递归地对这两个部分进行排序。</li>\n<li>将排序后的两个部分合并。</li>\n</ol>\n<h4 id=\"3223-堆排序\">3.2.2.3 堆排序</h4>\n<p>堆排序是一种数据排序的方法，主要通过将数据构建成一个堆，然后将堆的顶部元素与堆的最后一个元素进行交换，接着将剩余的元素构建成一个堆，重复上述操作，直到整个数据被排序。具体操作步骤如下：</p>\n<ol>\n<li>将数据构建成一个堆。</li>\n<li>将堆的顶部元素与堆的最后一个元素进行交换。</li>\n<li>将剩余的元素构建成一个堆。</li>\n<li>重复上述操作，直到整个数据被排序。</li>\n</ol>\n<h3 id=\"323-数据过滤\">3.2.3 数据过滤</h3>\n<p>数据过滤是一种数据处理方法，主要用于将数据中的不符合要求的记录过滤掉。数据过滤的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据过滤的方法包括基于规则的过滤、基于模型的过滤等。</p>\n<h4 id=\"3231-基于规则的过滤\">3.2.3.1 基于规则的过滤</h4>\n<p>基于规则的过滤是一种数据过滤的方法，主要通过将数据的特征值与规则进行比较，将不符合规则的记录过滤掉。具体操作步骤如下：</p>\n<ol>\n<li>定义数据的特征值。</li>\n<li>定义规则。</li>\n<li>将数据的特征值与规则进行比较，将不符合规则的记录过滤掉。</li>\n</ol>\n<h4 id=\"3232-基于模型的过滤\">3.2.3.2 基于模型的过滤</h4>\n<p>基于模型的过滤是一种数据过滤的方法，主要通过将数据的特征值与模型进行比较，将不符合模型的记录过滤掉。具体操作步骤如下：</p>\n<ol>\n<li>对数据进行预处理，将数据的特征值提取。</li>\n<li>使用模型对数据进行训练。</li>\n<li>使用训练好的模型对数据进行预测，将不符合模型的记录过滤掉。</li>\n</ol>\n<h2 id=\"33-数据标准化\">3.3 数据标准化</h2>\n<p>数据标准化是一种数据处理方法，主要用于将数据转换为相同的范围或分布。数据标准化的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据标准化的方法包括数据缩放、数据归一化等。</p>\n<h3 id=\"331-数据缩放\">3.3.1 数据缩放</h3>\n<p>数据缩放是一种数据标准化的方法，主要通过将数据的值除以数据的最大值或最小值，将数据的范围缩放到相同的范围。具体操作步骤如下：</p>\n<ol>\n<li>计算数据的最大值和最小值。</li>\n<li>将数据的值除以数据的最大值或最小值。</li>\n</ol>\n<h3 id=\"332-数据归一化\">3.3.2 数据归一化</h3>\n<p>数据归一化是一种数据标准化的方法，主要通过将数据的值减去数据的平均值，然后除以数据的标准差，将数据的分布转换到相同的分布。具体操作步骤如下：</p>\n<ol>\n<li>计算数据的平均值和标准差。</li>\n<li>将数据的值减去数据的平均值。</li>\n<li>将数据的值除以数据的标准差。</li>\n</ol>\n<h2 id=\"34-数据校验\">3.4 数据校验</h2>\n<p>数据校验是一种数据处理方法，主要用于检查数据的有效性和完整性。数据校验的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据校验的方法包括数据验证、数据检查等。</p>\n<h3 id=\"341-数据验证\">3.4.1 数据验证</h3>\n<p>数据验证是一种数据校验的方法，主要通过将数据的值与预定义的规则进行比较，检查数据的有效性和完整性。具体操作步骤如下：</p>\n<ol>\n<li>定义数据的规则。</li>\n<li>将数据的值与规则进行比较，检查数据的有效性和完整性。</li>\n</ol>\n<h3 id=\"342-数据检查\">3.4.2 数据检查</h3>\n<p>数据检查是一种数据校验的方法，主要通过将数据的值与预定义的值进行比较，检查数据的有效性和完整性。具体操作步骤如下：</p>\n<ol>\n<li>定义数据的预定义值。</li>\n<li>将数据的值与预定义值进行比较，检查数据的有效性和完整性。</li>\n</ol>\n<h1 id=\"4具体代码实例以及详细解释\">4.具体代码实例以及详细解释</h1>\n<h2 id=\"41-数据清洗\">4.1 数据清洗</h2>\n<h3 id=\"411-数据去重\">4.1.1 数据去重</h3>\n<pre><code class=\"language-python\">def remove_duplicates(data):\n# 将数据转换为字典\ndata_dict = {}\nfor item in data:\n# 将数据的键值存储到字典中\ndata_dict[item] = 1\n# 将字典的键值转换为列表\ndata_no_duplicates = list(data_dict.keys())\nreturn data_no_duplicates</code></pre>\n<h3 id=\"412-数据填充\">4.1.2 数据填充</h3>\n<h4 id=\"4121-均值填充\">4.1.2.1 均值填充</h4>\n<pre><code class=\"language-python\">def mean_fill(data):\n# 计算数据的均值\nmean = sum(data) / len(data)\n# 遍历数据，将数据的缺失值替换为均值\nfor i in range(len(data)):\nif data[i] == None:\ndata[i] = mean\nreturn data</code></pre>\n<h4 id=\"4122-中位数填充\">4.1.2.2 中位数填充</h4>\n<pre><code class=\"language-python\">def median_fill(data):\n# 对数据进行排序\ndata.sort()\n# 计算数据的中位数\nif len(data) % 2 == 0:\nmedian = (data[len(data) // 2 - 1] + data[len(data) // 2]) / 2\nelse:\nmedian = data[len(data) // 2]\n# 遍历数据，将数据的缺失值替换为中位数\nfor i in range(len(data)):\nif data[i] == None:\ndata[i] = median\nreturn data</code></pre>\n<h4 id=\"4123-最小值填充\">4.1.2.3 最小值填充</h4>\n<pre><code class=\"language-python\">def min_fill(data):\n# 计算数据的最小值\nmin_value = min(data)\n# 遍历数据，将数据的缺失值替换为最小值\nfor i in range(len(data)):\nif data[i] == None:\ndata[i] = min_value\nreturn data</code></pre>\n<h3 id=\"413-数据纠正\">4.1.3 数据纠正</h3>\n<h4 id=\"4131-统计方法\">4.1.3.1 统计方法</h4>\n<h5 id=\"41311-均值纠正\">4.1.3.1.1 均值纠正</h5>\n<pre><code class=\"language-python\">def mean_correction(data):\n# 计算数据的均值\nmean = sum(data) / len(data)\n# 遍历数据，将数据的错误值替换为均值\nfor i in range(len(data)):\nif data[i] == None:\ndata[i] = mean\nreturn data</code></pre>\n<h5 id=\"41312-中位数纠正\">4.1.3.1.2 中位数纠正</h5>\n<pre><code class=\"language-python\">def median_correction(data):\n# 对数据进行排序\ndata.sort()\n# 计算数据的中位数\nif len(data) % 2 == 0:\nmedian = (data[len(data) // 2 - 1] + data[len(data) // 2]) / 2\nelse:\nmedian = data[len(data) // 2]\n# 遍历数据，将数据的错误值替换为中位数\nfor i in range(len(data)):\nif data[i] == None:\ndata[i] = median\nreturn data</code></pre>\n<h5 id=\"41313-最小值纠正\">4.1.3.1.3 最小值纠正</h5>\n<pre><code class=\"language-python\">def min_correction(data):\n# 计算数据的最小值\nmin_value = min(data)\n# 遍历数据，将数据的错误值替换为最小值\nfor i in range(len(data)):\nif data[i] == None:\ndata[i] = min_value\nreturn data</code></pre>\n<h4 id=\"4132-模型方法\">4.1.3.2 模型方法</h4>\n<h5 id=\"41321-线性回归纠正\">4.1.3.2.1 线性回归纠正</h5>\n<pre><code class=\"language-python\">import numpy as np\n\ndef linear_regression_correction(data):\n# 将数据的错误值替换为缺失值\ndata_missing = [value if value == None else np.nan for value in data]\n# 使用线性回归模型对数据进行训练\nx = np.array([i for i in range(len(data))]).reshape(-1, 1)\ny = data_missing\ncoefficients = np.linalg.inv(x.T.dot(x)).dot(x.T).dot(y)\n# 使用训练好的线性回归模型对数据进行预测，将预测值替换为错误值\ny_pred = x.dot(coefficients)\ndata_corrected = [value if value == None else y_pred[i] for i in range(len(data))]\nreturn data_corrected</code></pre>\n<h5 id=\"41322-逻辑回归纠正\">4.1.3.2.2 逻辑回归纠正</h5>\n<pre><code class=\"language-python\">import numpy as np\n\ndef logistic_regression_correction(data):\n# 将数据的错误值替换为缺失值\ndata_missing = [value if value == None else np.nan for value in data]\n# 使用逻辑回归模型对数据进行训练\nx = np.array([i for i in range(len(data))]).reshape(-1, 1)\ny = data_missing\ncoefficients = np.linalg.inv(x.T.dot(x)).dot(x.T).dot(y)\n# 使用训练好的逻辑回归模型对数据进行预测，将预测值替换为错误值\ny_pred = 1 / (1 + np.exp(-x.dot(coefficients)))\ndata_corrected = [value if value == None else y_pred[i] for i in range(len(data))]\nreturn data_corrected</code></pre>\n<h5 id=\"41323-支持向量机纠正\">4.1.3.2.3 支持向量机纠正</h5>\n<pre><code class=\"language-python\">import numpy as np\nfrom sklearn import svm\n\ndef support_vector_machine_correction(data):\n# 将数据的错误值替换为缺失值\ndata_missing = [value if value == None else np.nan for value in data]\n# 使用支持向量机模型对数据进行训练\nx = np.array([i for i in range(len(data))]).reshape(-1, 1)\ny = data_missing\nclf = svm.SVC()\nclf.fit(x, y)\n# 使用训练好的支持向量机模型对数据进行预测，将预测值替换为错误值\ny_pred = clf.predict(x)\ndata_corrected = [value if value == None else y_pred[i] for i in range(len(data))]\nreturn data_corrected</code></pre>\n<h2 id=\"42-数据整理\">4.2 数据整理</h2>\n<h3 id=\"421-数据分类\">4.2.1 数据分类</h3>\n<h4 id=\"4211-基于规则的分类\">4.2.1.1 基于规则的分类</h4>\n<pre><code class=\"language-python\">def rule_based_classification(data, rules):\n# 遍历数据\nfor item in data:\n# 将数据的特征值与规则进行比较\nif rules[item]:\n# 将数据分为不同的类别\nclassification = rules[item]\n# 将数据的类别存储到字典中\ndata_classified[item] = classification\nreturn data_classified</code></pre>\n<h4 id=\"4212-基于模型的分类\">4.2.1.2 基于模型的分类</h4>\n<pre><code class=\"language-python\">def model_based_classification(data, model):\n# 使用模型对数据进行训练\nmodel.fit(data)\n# 使用训练好的模型对数据进行预测，将数据分为不同的类别\npredictions = model.predict(data)\n# 将数据的类别存储到字典中\ndata_classified = {item: prediction for item, prediction in zip(data, predictions)}\nreturn data_classified</code></pre>\n<h3 id=\"422-数据排序\">4.2.2 数据排序</h3>\n<h4 id=\"4221-快速排序\">4.2.2.1 快速排序</h4>\n<pre><code class=\"language-python\">def quick_sort(data):\nif len(data) &lt;= 1:\nreturn data\npivot = data[len(data) // 2]\nleft = [x for x in data if x &lt; pivot]\nmiddle = [x for x in data if x == pivot]\nright = [x for x in data if x &gt; pivot]\nreturn quick_sort(left) + middle + quick_sort(right)</code></pre>\n<h4 id=\"4222-归并排序\">4.2.2.2 归并排序</h4>\n<pre><code class=\"language-python\">def merge_sort(data):\nif len(data) &lt;= 1:\nreturn data\nmid = len(data) // 2\nleft = data[:mid]\nright = data[mid:]\nleft = merge_sort(left)\nright = merge_sort(right)\nreturn merge(left, right)\n\ndef merge(left, right):\nresult = []\nleft_index = right_index = 0\nwhile left_index &lt; len(left) and right_index &lt; len(right):\nif left[left_index] &lt; right[right_index]:\nresult.append(left[left_index])\nleft_index += 1\nelse:\nresult.append(right[right_index])\nright_index += 1\nresult += left[left_index:]\nresult += right[right_index:]\nreturn result</code></pre>\n<h3 id=\"423-数据过滤\">4.2.3 数据过滤</h3>\n<h4 id=\"4231-基于规则的过滤\">4.2.3.1 基于规则的过滤</h4>\n<pre><code class=\"language-python\">def rule_based_filter(data, rules):\n# 遍历数据\nfor item in data:\n# 将数据的特征值与规则进行比较\nif rules[item]:\n# 将不符合规则的记录从数据中删除\ndata.remove(item)\nreturn data</code></pre>\n<h4 id=\"4232-基于模型的过滤\">4.2.3.2 基于模型的过滤</h4>\n<p>```python\ndef model_based_filter(data, model):\n# 使用模型对数据进行预测，将不符合模型的记录从数据中删除\npredictions = model.predict(data)</p>\n", "status": 1, "cleanedContent": "<h1 id=\"1背景介绍\">1.背景介绍</h1> <p>数据规范化是一种数据处理技术，主要用于处理数据的不规范、不完整、不准确等问题。数据规范化的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据规范化的方法包括数据清洗、数据整理、数据标准化、数据校验等。</p> <p>数据控制是一种数据管理技术，主要用于控制数据的访问、修改、删除等操作。数据控制的目的是为了保护数据的安全性和完整性，防止数据被非法访问或修改。数据控制的方法包括数据加密、数据签名、数据权限控制等。</p> <p>数据规范化与数据控制之间存在密切的关系。数据规范化主要关注数据的质量问题，而数据控制主要关注数据的安全问题。在实际应用中，数据规范化和数据控制往往需要同时进行，以确保数据的质量和安全性。</p> <p>在本文中，我们将详细讲解数据规范化和数据控制的核心概念、算法原理、具体操作步骤和数学模型公式。同时，我们还将通过具体代码实例来说明数据规范化和数据控制的实际应用。</p> <h1 id=\"2核心概念与联系\">2.核心概念与联系</h1> <h2 id=\"21-数据规范化\">2.1 数据规范化</h2> <p>数据规范化是一种数据处理技术，主要用于处理数据的不规范、不完整、不准确等问题。数据规范化的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据规范化的方法包括数据清洗、数据整理、数据标准化、数据校验等。</p> <h3 id=\"数据清洗\">2.1.1 数据清洗</h3> <p>数据清洗是一种数据处理方法，主要用于处理数据的不规范、不完整、不准确等问题。数据清洗的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据清洗的方法包括数据去重、数据填充、数据纠正等。</p> <h3 id=\"数据整理\">2.1.2 数据整理</h3> <p>数据整理是一种数据处理方法，主要用于处理数据的不规范、不完整、不准确等问题。数据整理的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据整理的方法包括数据分类、数据排序、数据过滤等。</p> <h3 id=\"数据标准化\">2.1.3 数据标准化</h3> <p>数据标准化是一种数据处理方法，主要用于处理数据的不规范、不完整、不准确等问题。数据标准化的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据标准化的方法包括数据转换、数据缩放、数据归一化等。</p> <h3 id=\"数据校验\">2.1.4 数据校验</h3> <p>数据校验是一种数据处理方法，主要用于处理数据的不规范、不完整、不准确等问题。数据校验的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据校验的方法包括数据验证、数据检查、数据验证等。</p> <h2 id=\"22-数据控制\">2.2 数据控制</h2> <p>数据控制是一种数据管理技术，主要用于控制数据的访问、修改、删除等操作。数据控制的目的是为了保护数据的安全性和完整性，防止数据被非法访问或修改。数据控制的方法包括数据加密、数据签名、数据权限控制等。</p> <h3 id=\"数据加密\">2.2.1 数据加密</h3> <p>数据加密是一种数据保护技术，主要用于保护数据的安全性和完整性。数据加密的目的是为了防止数据被非法访问或修改。数据加密的方法包括对称加密、非对称加密、哈希加密等。</p> <h3 id=\"数据签名\">2.2.2 数据签名</h3> <p>数据签名是一种数据保护技术，主要用于保护数据的安全性和完整性。数据签名的目的是为了防止数据被非法访问或修改。数据签名的方法包括数字签名、消息摘要、数字证书等。</p> <h3 id=\"数据权限控制\">2.2.3 数据权限控制</h3> <p>数据权限控制是一种数据管理技术，主要用于控制数据的访问、修改、删除等操作。数据权限控制的目的是为了保护数据的安全性和完整性，防止数据被非法访问或修改。数据权限控制的方法包括用户权限管理、角色权限管理、数据库权限管理等。</p> <h1 id=\"3核心算法原理和具体操作步骤以及数学模型公式详细讲解\">3.核心算法原理和具体操作步骤以及数学模型公式详细讲解</h1> <h2 id=\"31-数据清洗\">3.1 数据清洗</h2> <h3 id=\"数据去重\">3.1.1 数据去重</h3> <p>数据去重是一种数据处理方法，主要用于处理数据中的重复记录。数据去重的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据去重的方法包括排序+遍历、哈希表等。</p> <h4 id=\"排序遍历\"> 排序+遍历</h4> <p>排序+遍历是一种数据去重的方法，主要通过对数据进行排序，然后遍历数据，找到重复的记录并删除。具体操作步骤如下：</p> <ol> <li>对数据进行排序，可以使用快速排序、归并排序、堆排序等算法。</li> <li>遍历排序后的数据，找到重复的记录。</li> <li>删除重复的记录。</li> </ol> <h4 id=\"哈希表\"> 哈希表</h4> <p>哈希表是一种数据结构，主要用于存储键值对。哈希表可以用于数据去重的方法，主要通过将数据的键值存储到哈希表中，然后遍历哈希表，找到重复的记录并删除。具体操作步骤如下：</p> <ol> <li>创建一个哈希表。</li> <li>遍历数据，将数据的键值存储到哈希表中。</li> <li>遍历哈希表，找到重复的记录并删除。</li> </ol> <h3 id=\"数据填充\">3.1.2 数据填充</h3> <p>数据填充是一种数据处理方法，主要用于处理数据中的缺失值。数据填充的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据填充的方法包括均值填充、中位数填充、最小值填充等。</p> <h4 id=\"均值填充\"> 均值填充</h4> <p>均值填充是一种数据填充的方法，主要通过将数据的缺失值替换为数据的均值。具体操作步骤如下：</p> <ol> <li>计算数据的均值。</li> <li>遍历数据，将数据的缺失值替换为均值。</li> </ol> <h4 id=\"中位数填充\"> 中位数填充</h4> <p>中位数填充是一种数据填充的方法，主要通过将数据的缺失值替换为数据的中位数。具体操作步骤如下：</p> <ol> <li>对数据进行排序。</li> <li>计算数据的中位数。</li> <li>遍历数据，将数据的缺失值替换为中位数。</li> </ol> <h4 id=\"最小值填充\"> 最小值填充</h4> <p>最小值填充是一种数据填充的方法，主要通过将数据的缺失值替换为数据的最小值。具体操作步骤如下：</p> <ol> <li>计算数据的最小值。</li> <li>遍历数据，将数据的缺失值替换为最小值。</li> </ol> <h3 id=\"数据纠正\">3.1.3 数据纠正</h3> <p>数据纠正是一种数据处理方法，主要用于处理数据中的错误值。数据纠正的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据纠正的方法包括统计方法、模型方法等。</p> <h4 id=\"统计方法\"> 统计方法</h4> <p>统计方法是一种数据纠正的方法，主要通过将数据的错误值替换为数据的统计值。统计方法包括均值纠正、中位数纠正、最小值纠正等。</p> <h5 id=\"-均值纠正\">.1 均值纠正</h5> <p>均值纠正是一种统计方法，主要通过将数据的错误值替换为数据的均值。具体操作步骤如下：</p> <ol> <li>计算数据的均值。</li> <li>遍历数据，将数据的错误值替换为均值。</li> </ol> <h5 id=\"-中位数纠正\">.2 中位数纠正</h5> <p>中位数纠正是一种统计方法，主要通过将数据的错误值替换为数据的中位数。具体操作步骤如下：</p> <ol> <li>对数据进行排序。</li> <li>计算数据的中位数。</li> <li>遍历数据，将数据的错误值替换为中位数。</li> </ol> <h5 id=\"-最小值纠正\">.3 最小值纠正</h5> <p>最小值纠正是一种统计方法，主要通过将数据的错误值替换为数据的最小值。具体操作步骤如下：</p> <ol> <li>计算数据的最小值。</li> <li>遍历数据，将数据的错误值替换为最小值。</li> </ol> <h4 id=\"模型方法\"> 模型方法</h4> <p>模型方法是一种数据纠正的方法，主要通过将数据的错误值替换为模型预测的值。模型方法包括线性回归纠正、逻辑回归纠正、支持向量机纠正等。</p> <h5 id=\"-线性回归纠正\">.1 线性回归纠正</h5> <p>线性回归纠正是一种模型方法，主要通过将数据的错误值替换为线性回归预测的值。具体操作步骤如下：</p> <ol> <li>对数据进行预处理，将错误值替换为缺失值。</li> <li>使用线性回归模型对数据进行训练。</li> <li>使用训练好的线性回归模型对数据进行预测，将预测值替换为错误值。</li> </ol> <h5 id=\"-逻辑回归纠正\">.2 逻辑回归纠正</h5> <p>逻辑回归纠正是一种模型方法，主要通过将数据的错误值替换为逻辑回归预测的值。具体操作步骤如下：</p> <ol> <li>对数据进行预处理，将错误值替换为缺失值。</li> <li>使用逻辑回归模型对数据进行训练。</li> <li>使用训练好的逻辑回归模型对数据进行预测，将预测值替换为错误值。</li> </ol> <h5 id=\"-支持向量机纠正\">.3 支持向量机纠正</h5> <p>支持向量机纠正是一种模型方法，主要通过将数据的错误值替换为支持向量机预测的值。具体操作步骤如下：</p> <ol> <li>对数据进行预处理，将错误值替换为缺失值。</li> <li>使用支持向量机模型对数据进行训练。</li> <li>使用训练好的支持向量机模型对数据进行预测，将预测值替换为错误值。</li> </ol> <h2 id=\"32-数据整理\">3.2 数据整理</h2> <h3 id=\"数据分类\">3.2.1 数据分类</h3> <p>数据分类是一种数据处理方法，主要用于将数据分为多个类别。数据分类的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据分类的方法包括基于规则的分类、基于模型的分类等。</p> <h4 id=\"基于规则的分类\"> 基于规则的分类</h4> <p>基于规则的分类是一种数据分类的方法，主要通过将数据的特征值与规则进行比较，将数据分为多个类别。具体操作步骤如下：</p> <ol> <li>定义数据的特征值。</li> <li>定义规则。</li> <li>将数据的特征值与规则进行比较，将数据分为多个类别。</li> </ol> <h4 id=\"基于模型的分类\"> 基于模型的分类</h4> <p>基于模型的分类是一种数据分类的方法，主要通过将数据的特征值与模型进行比较，将数据分为多个类别。具体操作步骤如下：</p> <ol> <li>对数据进行预处理，将数据的特征值提取。</li> <li>使用模型对数据进行训练。</li> <li>使用训练好的模型对数据进行预测，将数据分为多个类别。</li> </ol> <h3 id=\"数据排序\">3.2.2 数据排序</h3> <p>数据排序是一种数据处理方法，主要用于将数据按照某个规则进行排序。数据排序的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据排序的方法包括快速排序、归并排序、堆排序等。</p> <h4 id=\"快速排序\"> 快速排序</h4> <p>快速排序是一种数据排序的方法，主要通过将数据的一个元素作为基准，将其他元素分为两个部分，一个部分小于基准，一个部分大于基准，然后递归地对这两个部分进行排序。具体操作步骤如下：</p> <ol> <li>选择数据的一个元素作为基准。</li> <li>将其他元素分为两个部分，一个部分小于基准，一个部分大于基准。</li> <li>递归地对这两个部分进行排序。</li> <li>将排序后的两个部分与基准元素合并。</li> </ol> <h4 id=\"归并排序\"> 归并排序</h4> <p>归并排序是一种数据排序的方法，主要通过将数据分为两个部分，然后递归地对这两个部分进行排序，最后将排序后的两个部分合并。具体操作步骤如下：</p> <ol> <li>将数据分为两个部分。</li> <li>递归地对这两个部分进行排序。</li> <li>将排序后的两个部分合并。</li> </ol> <h4 id=\"堆排序\"> 堆排序</h4> <p>堆排序是一种数据排序的方法，主要通过将数据构建成一个堆，然后将堆的顶部元素与堆的最后一个元素进行交换，接着将剩余的元素构建成一个堆，重复上述操作，直到整个数据被排序。具体操作步骤如下：</p> <ol> <li>将数据构建成一个堆。</li> <li>将堆的顶部元素与堆的最后一个元素进行交换。</li> <li>将剩余的元素构建成一个堆。</li> <li>重复上述操作，直到整个数据被排序。</li> </ol> <h3 id=\"数据过滤\">3.2.3 数据过滤</h3> <p>数据过滤是一种数据处理方法，主要用于将数据中的不符合要求的记录过滤掉。数据过滤的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据过滤的方法包括基于规则的过滤、基于模型的过滤等。</p> <h4 id=\"基于规则的过滤\"> 基于规则的过滤</h4> <p>基于规则的过滤是一种数据过滤的方法，主要通过将数据的特征值与规则进行比较，将不符合规则的记录过滤掉。具体操作步骤如下：</p> <ol> <li>定义数据的特征值。</li> <li>定义规则。</li> <li>将数据的特征值与规则进行比较，将不符合规则的记录过滤掉。</li> </ol> <h4 id=\"基于模型的过滤\"> 基于模型的过滤</h4> <p>基于模型的过滤是一种数据过滤的方法，主要通过将数据的特征值与模型进行比较，将不符合模型的记录过滤掉。具体操作步骤如下：</p> <ol> <li>对数据进行预处理，将数据的特征值提取。</li> <li>使用模型对数据进行训练。</li> <li>使用训练好的模型对数据进行预测，将不符合模型的记录过滤掉。</li> </ol> <h2 id=\"33-数据标准化\">3.3 数据标准化</h2> <p>数据标准化是一种数据处理方法，主要用于将数据转换为相同的范围或分布。数据标准化的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据标准化的方法包括数据缩放、数据归一化等。</p> <h3 id=\"数据缩放\">3.3.1 数据缩放</h3> <p>数据缩放是一种数据标准化的方法，主要通过将数据的值除以数据的最大值或最小值，将数据的范围缩放到相同的范围。具体操作步骤如下：</p> <ol> <li>计算数据的最大值和最小值。</li> <li>将数据的值除以数据的最大值或最小值。</li> </ol> <h3 id=\"数据归一化\">3.3.2 数据归一化</h3> <p>数据归一化是一种数据标准化的方法，主要通过将数据的值减去数据的平均值，然后除以数据的标准差，将数据的分布转换到相同的分布。具体操作步骤如下：</p> <ol> <li>计算数据的平均值和标准差。</li> <li>将数据的值减去数据的平均值。</li> <li>将数据的值除以数据的标准差。</li> </ol> <h2 id=\"34-数据校验\">3.4 数据校验</h2> <p>数据校验是一种数据处理方法，主要用于检查数据的有效性和完整性。数据校验的目的是为了提高数据的质量，使其更符合实际的需求和要求。数据校验的方法包括数据验证、数据检查等。</p> <h3 id=\"数据验证\">3.4.1 数据验证</h3> <p>数据验证是一种数据校验的方法，主要通过将数据的值与预定义的规则进行比较，检查数据的有效性和完整性。具体操作步骤如下：</p> <ol> <li>定义数据的规则。</li> <li>将数据的值与规则进行比较，检查数据的有效性和完整性。</li> </ol> <h3 id=\"数据检查\">3.4.2 数据检查</h3> <p>数据检查是一种数据校验的方法，主要通过将数据的值与预定义的值进行比较，检查数据的有效性和完整性。具体操作步骤如下：</p> <ol> <li>定义数据的预定义值。</li> <li>将数据的值与预定义值进行比较，检查数据的有效性和完整性。</li> </ol> <h1 id=\"4具体代码实例以及详细解释\">4.具体代码实例以及详细解释</h1> <h2 id=\"41-数据清洗\">4.1 数据清洗</h2> <h3 id=\"数据去重\">4.1.1 数据去重</h3> <pre><code class=\"language-python\">def remove_duplicates(data): # 将数据转换为字典 data_dict = {} for item in data: # 将数据的键值存储到字典中 data_dict[item] = 1 # 将字典的键值转换为列表 data_no_duplicates = list(data_dict.keys()) return data_no_duplicates</code></pre> <h3 id=\"数据填充\">4.1.2 数据填充</h3> <h4 id=\"均值填充\"> 均值填充</h4> <pre><code class=\"language-python\">def mean_fill(data): # 计算数据的均值 mean = sum(data) / len(data) # 遍历数据，将数据的缺失值替换为均值 for i in range(len(data)): if data[i] == None: data[i] = mean return data</code></pre> <h4 id=\"中位数填充\"> 中位数填充</h4> <pre><code class=\"language-python\">def median_fill(data): # 对数据进行排序 data.sort() # 计算数据的中位数 if len(data) % 2 == 0: median = (data[len(data) // 2 - 1] + data[len(data) // 2]) / 2 else: median = data[len(data) // 2] # 遍历数据，将数据的缺失值替换为中位数 for i in range(len(data)): if data[i] == None: data[i] = median return data</code></pre> <h4 id=\"最小值填充\"> 最小值填充</h4> <pre><code class=\"language-python\">def min_fill(data): # 计算数据的最小值 min_value = min(data) # 遍历数据，将数据的缺失值替换为最小值 for i in range(len(data)): if data[i] == None: data[i] = min_value return data</code></pre> <h3 id=\"数据纠正\">4.1.3 数据纠正</h3> <h4 id=\"统计方法\"> 统计方法</h4> <h5 id=\"-均值纠正\">.1 均值纠正</h5> <pre><code class=\"language-python\">def mean_correction(data): # 计算数据的均值 mean = sum(data) / len(data) # 遍历数据，将数据的错误值替换为均值 for i in range(len(data)): if data[i] == None: data[i] = mean return data</code></pre> <h5 id=\"-中位数纠正\">.2 中位数纠正</h5> <pre><code class=\"language-python\">def median_correction(data): # 对数据进行排序 data.sort() # 计算数据的中位数 if len(data) % 2 == 0: median = (data[len(data) // 2 - 1] + data[len(data) // 2]) / 2 else: median = data[len(data) // 2] # 遍历数据，将数据的错误值替换为中位数 for i in range(len(data)): if data[i] == None: data[i] = median return data</code></pre> <h5 id=\"-最小值纠正\">.3 最小值纠正</h5> <pre><code class=\"language-python\">def min_correction(data): # 计算数据的最小值 min_value = min(data) # 遍历数据，将数据的错误值替换为最小值 for i in range(len(data)): if data[i] == None: data[i] = min_value return data</code></pre> <h4 id=\"模型方法\"> 模型方法</h4> <h5 id=\"-线性回归纠正\">.1 线性回归纠正</h5> <pre><code class=\"language-python\">import numpy as np def linear_regression_correction(data): # 将数据的错误值替换为缺失值 data_missing = [value if value == None else np.nan for value in data] # 使用线性回归模型对数据进行训练 x = np.array([i for i in range(len(data))]).reshape(-1, 1) y = data_missing coefficients = np.linalg.inv(x.T.dot(x)).dot(x.T).dot(y) # 使用训练好的线性回归模型对数据进行预测，将预测值替换为错误值 y_pred = x.dot(coefficients) data_corrected = [value if value == None else y_pred[i] for i in range(len(data))] return data_corrected</code></pre> <h5 id=\"-逻辑回归纠正\">.2 逻辑回归纠正</h5> <pre><code class=\"language-python\">import numpy as np def logistic_regression_correction(data): # 将数据的错误值替换为缺失值 data_missing = [value if value == None else np.nan for value in data] # 使用逻辑回归模型对数据进行训练 x = np.array([i for i in range(len(data))]).reshape(-1, 1) y = data_missing coefficients = np.linalg.inv(x.T.dot(x)).dot(x.T).dot(y) # 使用训练好的逻辑回归模型对数据进行预测，将预测值替换为错误值 y_pred = 1 / (1 + np.exp(-x.dot(coefficients))) data_corrected = [value if value == None else y_pred[i] for i in range(len(data))] return data_corrected</code></pre> <h5 id=\"-支持向量机纠正\">.3 支持向量机纠正</h5> <pre><code class=\"language-python\">import numpy as np from sklearn import svm def support_vector_machine_correction(data): # 将数据的错误值替换为缺失值 data_missing = [value if value == None else np.nan for value in data] # 使用支持向量机模型对数据进行训练 x = np.array([i for i in range(len(data))]).reshape(-1, 1) y = data_missing clf = svm.SVC() clf.fit(x, y) # 使用训练好的支持向量机模型对数据进行预测，将预测值替换为错误值 y_pred = clf.predict(x) data_corrected = [value if value == None else y_pred[i] for i in range(len(data))] return data_corrected</code></pre> <h2 id=\"42-数据整理\">4.2 数据整理</h2> <h3 id=\"数据分类\">4.2.1 数据分类</h3> <h4 id=\"基于规则的分类\"> 基于规则的分类</h4> <pre><code class=\"language-python\">def rule_based_classification(data, rules): # 遍历数据 for item in data: # 将数据的特征值与规则进行比较 if rules[item]: # 将数据分为不同的类别 classification = rules[item] # 将数据的类别存储到字典中 data_classified[item] = classification return data_classified</code></pre> <h4 id=\"基于模型的分类\"> 基于模型的分类</h4> <pre><code class=\"language-python\">def model_based_classification(data, model): # 使用模型对数据进行训练 model.fit(data) # 使用训练好的模型对数据进行预测，将数据分为不同的类别 predictions = model.predict(data) # 将数据的类别存储到字典中 data_classified = {item: prediction for item, prediction in zip(data, predictions)} return data_classified</code></pre> <h3 id=\"数据排序\">4.2.2 数据排序</h3> <h4 id=\"快速排序\"> 快速排序</h4> <pre><code class=\"language-python\">def quick_sort(data): if len(data) <= 1: return data pivot = data[len(data) // 2] left = [x for x in data if x < pivot] middle = [x for x in data if x == pivot] right = [x for x in data if x > pivot] return quick_sort(left) + middle + quick_sort(right)</code></pre> <h4 id=\"归并排序\"> 归并排序</h4> <pre><code class=\"language-python\">def merge_sort(data): if len(data) <= 1: return data mid = len(data) // 2 left = data[:mid] right = data[mid:] left = merge_sort(left) right = merge_sort(right) return merge(left, right) def merge(left, right): result = [] left_index = right_index = 0 while left_index < len(left) and right_index < len(right): if left[left_index] < right[right_index]: result.append(left[left_index]) left_index += 1 else: result.append(right[right_index]) right_index += 1 result += left[left_index:] result += right[right_index:] return result</code></pre> <h3 id=\"数据过滤\">4.2.3 数据过滤</h3> <h4 id=\"基于规则的过滤\"> 基于规则的过滤</h4> <pre><code class=\"language-python\">def rule_based_filter(data, rules): # 遍历数据 for item in data: # 将数据的特征值与规则进行比较 if rules[item]: # 将不符合规则的记录从数据中删除 data.remove(item) return data</code></pre> <h4 id=\"基于模型的过滤\"> 基于模型的过滤</h4> <p>```python def model_based_filter(data, model): # 使用模型对数据进行预测，将不符合模型的记录从数据中删除 predictions = model."}
{"url": "https://blog.csdn.net/m0_48170265/article/details/134923434", "article_id": 134923434, "username": "m0_48170265", "title": "CAA创建模板工具条", "body": "<p></p><div class=\"toc\"><h3>文章目录</h3><ul><ul><li><a href=\"#1h_1\">1、.h头文件</a></li><li><a href=\"#2cpp_61\">2、.cpp源文件</a></li></ul></ul></div><p></p>\n<h2><a id=\"1h_1\"></a>1、.h头文件</h2>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifndef</span> <span class=\"token expression\">COMACAddin_H</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">COMACAddin_H</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CATBaseUnknown.h\"</span></span>\n\n<span class=\"token comment\">//添加</span>\n<span class=\"token comment\">//--ApplicationFrame</span>\n<span class=\"token comment\">//CATApplicationFrame </span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CATCmdContainer.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CATCommandHeader.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CATCreateWorkshop.h\"</span></span>\n\n\n<span class=\"token comment\">//-----------------------------------------------------------------------</span>\n\n<span class=\"token comment\">/**\n* Class representing xxx.\n*\n* &lt;br&gt;&lt;b&gt;Role&lt;/b&gt;: Provide the basic class function...\n* &lt;p&gt;\n* It implements the interfaces :\n* &lt;ol&gt;\n* &lt;li&gt;@href CATIPRDWorkshopAddin\n* &lt;/ol&gt;\n*\n* @href ClassReference, Class#MethodReference, #InternalMethod...\n*/</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">COMACAddin</span><span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CATBaseUnknown</span></span>\n\n<span class=\"token punctuation\">{</span>\nCATDeclareClass<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\n<span class=\"token comment\">// Standard constructors and destructors for an implementation class</span>\n<span class=\"token comment\">// -----------------------------------------------------------------</span>\n<span class=\"token function\">COMACAddin</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">COMACAddin</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//添加CreateCommands和CreateToolbars</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">CreateCommands</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nCATCmdContainer <span class=\"token operator\">*</span> <span class=\"token function\">CreateToolbars</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n<span class=\"token comment\">// The copy constructor and the equal operator must not be implemented</span>\n<span class=\"token comment\">// -------------------------------------------------------------------</span>\n<span class=\"token function\">COMACAddin</span> <span class=\"token punctuation\">(</span>COMACAddin <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nCOMACAddin<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>COMACAddin<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-----------------------------------------------------------------------</span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span>\n</code></pre>\n<h2><a id=\"2cpp_61\"></a>2、.cpp源文件</h2>\n\n", "status": 32, "cleanedContent": "<p></p><div class=\"toc\"><h3>文章目录</h3><ul><ul><li><a href=\"#1h_1\">1、.h头文件</a></li><li><a href=\"#2cpp_61\">2、.cpp源文件</a></li></ul></ul></div><p></p> <h2><a id=\"1h_1\"></a>1、.h头文件</h2> <pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifndef</span> <span class=\"token expression\">COMACAddin_H</span></span> <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">COMACAddin_H</span></span> <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CATBaseUnknown.h\"</span></span> <span class=\"token comment\">//添加</span> <span class=\"token comment\">//--ApplicationFrame</span> <span class=\"token comment\">//CATApplicationFrame </span> <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CATCmdContainer.h\"</span></span> <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CATCommandHeader.h\"</span></span> <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CATCreateWorkshop.h\"</span></span> <span class=\"token comment\">//-----------------------------------------------------------------------</span> <span class=\"token comment\">/** * Class representing xxx. * * <br><b>Role</b>: Provide the basic class function... * <p> * It implements the interfaces : * <ol> * <li>@href CATIPRDWorkshopAddin * </ol> * * @href ClassReference, Class#MethodReference, #InternalMethod... */</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">COMACAddin</span><span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CATBaseUnknown</span></span> <span class=\"token punctuation\">{</span> CATDeclareClass<span class=\"token punctuation\">;</span> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span> <span class=\"token comment\">// Standard constructors and destructors for an implementation class</span> <span class=\"token comment\">// -----------------------------------------------------------------</span> <span class=\"token function\">COMACAddin</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">COMACAddin</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//添加CreateCommands和CreateToolbars</span> <span class=\"token keyword\">void</span> <span class=\"token function\">CreateCommands</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> CATCmdContainer <span class=\"token operator\">*</span> <span class=\"token function\">CreateToolbars</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">private</span><span class=\"token operator\">:</span> <span class=\"token comment\">// The copy constructor and the equal operator must not be implemented</span> <span class=\"token comment\">// -------------------------------------------------------------------</span> <span class=\"token function\">COMACAddin</span> <span class=\"token punctuation\">(</span>COMACAddin <span class=\"token operator\">&</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> COMACAddin<span class=\"token operator\">&</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>COMACAddin<span class=\"token operator\">&</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//-----------------------------------------------------------------------</span> <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span> </code></pre> <h2><a id=\"2cpp_61\"></a>2、."}
{"url": "https://blog.csdn.net/universsky2015/article/details/134923791", "article_id": 134923791, "username": "universsky2015", "title": "物联网中的人工智能：如何实现更智能化的物流服务", "body": "<h1 id=\"1背景介绍\">1.背景介绍</h1>\n<p>物联网（Internet of Things，简称IoT）是指通过互联互通的传感器、设备、计算机等实现物体间的信息传递，使物体能够与人类进行交互的一种信息技术。物联网的发展为物流服务提供了更多的智能化机会，例如物流服务的智能化、自动化和优化。</p>\n<p>物流服务是指物品从生产厂家出发，经过一系列的运输和处理后，最终到达消费者手中的过程。物流服务的智能化可以通过人工智能技术来实现，例如通过数据分析、预测和优化来提高物流服务的效率和质量。</p>\n<p>人工智能（Artificial Intelligence，简称AI）是指通过计算机程序模拟人类智能的能力，例如学习、推理和决策等。人工智能技术可以帮助物流服务更好地理解和预测消费者的需求，从而提供更个性化的服务。</p>\n<p>在物流服务中，人工智能可以用于多种应用，例如物流路线规划、物流资源分配、物流运输预测等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<h1 id=\"2核心概念与联系\">2.核心概念与联系</h1>\n<h2 id=\"21-物联网\">2.1 物联网</h2>\n<p>物联网是一种信息技术，它通过互联互通的传感器、设备、计算机等实现物体间的信息传递，使物体能够与人类进行交互。物联网可以用于多种应用，例如智能家居、智能交通、智能城市等。</p>\n<p>物联网可以通过网络连接的设备和传感器来收集数据，例如温度、湿度、气压等。这些数据可以用于物流服务的智能化，例如物流路线规划、物流资源分配、物流运输预测等。</p>\n<h2 id=\"22-人工智能\">2.2 人工智能</h2>\n<p>人工智能是一种计算机程序，它可以模拟人类智能的能力，例如学习、推理和决策等。人工智能可以用于多种应用，例如自动驾驶、语音识别、图像识别等。</p>\n<p>人工智能可以通过算法和数据来学习和决策，例如机器学习、深度学习等。这些算法和数据可以用于物流服务的智能化，例如物流路线规划、物流资源分配、物流运输预测等。</p>\n<h2 id=\"23-物流服务\">2.3 物流服务</h2>\n<p>物流服务是指物品从生产厂家出发，经过一系列的运输和处理后，最终到达消费者手中的过程。物流服务的智能化可以通过人工智能技术来实现，例如通过数据分析、预测和优化来提高物流服务的效率和质量。</p>\n<p>物流服务可以用于多种应用，例如电商、快递、物流等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<h1 id=\"3核心算法原理和具体操作步骤以及数学模型公式详细讲解\">3.核心算法原理和具体操作步骤以及数学模型公式详细讲解</h1>\n<h2 id=\"31-物流路线规划\">3.1 物流路线规划</h2>\n<p>物流路线规划是指根据物流服务的需求和条件，选择最佳的物流路线和路径。物流路线规划可以用于多种应用，例如物流运输、物流配送、物流仓库等。</p>\n<p>物流路线规划可以通过人工智能技术来实现，例如通过数据分析、预测和优化来选择最佳的物流路线和路径。这些技术可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<h3 id=\"311-数据分析\">3.1.1 数据分析</h3>\n<p>数据分析是指通过收集、清洗、分析和可视化的方法，对物流数据进行深入的研究和探讨。数据分析可以帮助物流服务更好地理解和预测消费者的需求，从而提供更个性化的服务。</p>\n<p>数据分析可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<h3 id=\"312-预测\">3.1.2 预测</h3>\n<p>预测是指通过收集、清洗、分析和可视化的方法，对物流数据进行预测和预报。预测可以帮助物流服务更好地预测消费者的需求，从而提供更个性化的服务。</p>\n<p>预测可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<h3 id=\"313-优化\">3.1.3 优化</h3>\n<p>优化是指通过收集、清洗、分析和可视化的方法，对物流数据进行优化和调整。优化可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<p>优化可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<h3 id=\"314-数学模型公式\">3.1.4 数学模型公式</h3>\n<p>物流路线规划可以通过数学模型来描述和解决。数学模型可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<p>数学模型可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<p>数学模型可以通过多种方法来解决，例如线性规划、非线性规划、动态规划等。这些方法可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<h2 id=\"32-物流资源分配\">3.2 物流资源分配</h2>\n<p>物流资源分配是指根据物流服务的需求和条件，选择最佳的物流资源和分配方式。物流资源分配可以用于多种应用，例如物流运输、物流配送、物流仓库等。</p>\n<p>物流资源分配可以通过人工智能技术来实现，例如通过数据分析、预测和优化来选择最佳的物流资源和分配方式。这些技术可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<h3 id=\"321-数据分析\">3.2.1 数据分析</h3>\n<p>数据分析是指通过收集、清洗、分析和可视化的方法，对物流数据进行深入的研究和探讨。数据分析可以帮助物流服务更好地理解和预测消费者的需求，从而提供更个性化的服务。</p>\n<p>数据分析可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<h3 id=\"322-预测\">3.2.2 预测</h3>\n<p>预测是指通过收集、清洗、分析和可视化的方法，对物流数据进行预测和预报。预测可以帮助物流服务更好地预测消费者的需求，从而提供更个性化的服务。</p>\n<p>预测可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<h3 id=\"323-优化\">3.2.3 优化</h3>\n<p>优化是指通过收集、清洗、分析和可视化的方法，对物流数据进行优化和调整。优化可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<p>优化可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<h3 id=\"324-数学模型公式\">3.2.4 数学模型公式</h3>\n<p>物流资源分配可以通过数学模型来描述和解决。数学模型可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<p>数学模型可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<p>数学模型可以通过多种方法来解决，例如线性规划、非线性规划、动态规划等。这些方法可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<h2 id=\"33-物流运输预测\">3.3 物流运输预测</h2>\n<p>物流运输预测是指根据物流服务的需求和条件，预测物流运输的时间、成本和质量等因素。物流运输预测可以用于多种应用，例如物流运输、物流配送、物流仓库等。</p>\n<p>物流运输预测可以通过人工智能技术来实现，例如通过数据分析、预测和优化来预测物流运输的时间、成本和质量等因素。这些技术可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<h3 id=\"331-数据分析\">3.3.1 数据分析</h3>\n<p>数据分析是指通过收集、清洗、分析和可视化的方法，对物流数据进行深入的研究和探讨。数据分析可以帮助物流服务更好地理解和预测消费者的需求，从而提供更个性化的服务。</p>\n<p>数据分析可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<h3 id=\"332-预测\">3.3.2 预测</h3>\n<p>预测是指通过收集、清洗、分析和可视化的方法，对物流数据进行预测和预报。预测可以帮助物流服务更好地预测消费者的需求，从而提供更个性化的服务。</p>\n<p>预测可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<h3 id=\"333-优化\">3.3.3 优化</h3>\n<p>优化是指通过收集、清洗、分析和可视化的方法，对物流数据进行优化和调整。优化可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<p>优化可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<h3 id=\"334-数学模型公式\">3.3.4 数学模型公式</h3>\n<p>物流运输预测可以通过数学模型来描述和解决。数学模型可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<p>数学模型可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<p>数学模型可以通过多种方法来解决，例如线性规划、非线性规划、动态规划等。这些方法可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p>\n<h1 id=\"4具体代码实例以及详细解释\">4.具体代码实例以及详细解释</h1>\n<h2 id=\"41-物流路线规划\">4.1 物流路线规划</h2>\n<h3 id=\"411-数据分析\">4.1.1 数据分析</h3>\n<pre><code class=\"language-python\">import pandas as pd\nimport numpy as np\n\n# 读取数据\ndata = pd.read_csv(&#39;data.csv&#39;)\n\n# 数据清洗\ndata = data.dropna()\n\n# 数据分析\ndata[&#39;time&#39;] = data[&#39;time&#39;].astype(&#39;datetime64&#39;)\ndata[&#39;distance&#39;] = data[&#39;distance&#39;].astype(np.float64)\ndata[&#39;cost&#39;] = data[&#39;cost&#39;].astype(np.float64)\n\n# 数据可视化\ndata.plot()</code></pre>\n<h3 id=\"412-预测\">4.1.2 预测</h3>\n<pre><code class=\"language-python\">from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\n\n# 数据预处理\nX = data.drop([&#39;time&#39;, &#39;distance&#39;, &#39;cost&#39;], axis=1)\ny = data[&#39;cost&#39;]\n\n# 数据分割\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# 模型训练\nmodel = RandomForestRegressor(n_estimators=100, random_state=42)\nmodel.fit(X_train, y_train)\n\n# 预测\ny_pred = model.predict(X_test)</code></pre>\n<h3 id=\"413-优化\">4.1.3 优化</h3>\n<pre><code class=\"language-python\">from scipy.optimize import linprog\n\n# 定义目标函数\ndef objective_function(x):\nreturn np.sum(x)\n\n# 定义约束条件\nA = np.array([[1, 1], [1, 2], [2, 1], [2, 2]])\nb = np.array([100, 200, 300, 400])\n\n# 优化\nresult = linprog(objective_function, A_ub=A, b_ub=b)\n\n# 解析\nx = result.x</code></pre>\n<h2 id=\"42-物流资源分配\">4.2 物流资源分配</h2>\n<h3 id=\"421-数据分析\">4.2.1 数据分析</h3>\n<pre><code class=\"language-python\">import pandas as pd\nimport numpy as np\n\n# 读取数据\ndata = pd.read_csv(&#39;data.csv&#39;)\n\n# 数据清洗\ndata = data.dropna()\n\n# 数据分析\ndata[&#39;time&#39;] = data[&#39;time&#39;].astype(&#39;datetime64&#39;)\ndata[&#39;distance&#39;] = data[&#39;distance&#39;].astype(np.float64)\ndata[&#39;cost&#39;] = data[&#39;cost&#39;].astype(np.float64)\n\n# 数据可视化\ndata.plot()</code></pre>\n<h3 id=\"422-预测\">4.2.2 预测</h3>\n<pre><code class=\"language-python\">from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\n\n# 数据预处理\nX = data.drop([&#39;time&#39;, &#39;distance&#39;, &#39;cost&#39;], axis=1)\ny = data[&#39;cost&#39;]\n\n# 数据分割\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# 模型训练\nmodel = RandomForestRegressor(n_estimators=100, random_state=42)\nmodel.fit(X_train, y_train)\n\n# 预测\ny_pred = model.predict(X_test)</code></pre>\n<h3 id=\"423-优化\">4.2.3 优化</h3>\n<pre><code class=\"language-python\">from scipy.optimize import linprog\n\n# 定义目标函数\ndef objective_function(x):\nreturn np.sum(x)\n\n# 定义约束条件\nA = np.array([[1, 1], [1, 2], [2, 1], [2, 2]])\nb = np.array([100, 200, 300, 400])\n\n# 优化\nresult = linprog(objective_function, A_ub=A, b_ub=b)\n\n# 解析\nx = result.x</code></pre>\n<h2 id=\"43-物流运输预测\">4.3 物流运输预测</h2>\n<h3 id=\"431-数据分析\">4.3.1 数据分析</h3>\n<pre><code class=\"language-python\">import pandas as pd\nimport numpy as np\n\n# 读取数据\ndata = pd.read_csv(&#39;data.csv&#39;)\n\n# 数据清洗\ndata = data.dropna()\n\n# 数据分析\ndata[&#39;time&#39;] = data[&#39;time&#39;].astype(&#39;datetime64&#39;)\ndata[&#39;distance&#39;] = data[&#39;distance&#39;].astype(np.float64)\ndata[&#39;cost&#39;] = data[&#39;cost&#39;].astype(np.float64)\n\n# 数据可视化\ndata.plot()</code></pre>\n<h3 id=\"432-预测\">4.3.2 预测</h3>\n<pre><code class=\"language-python\">from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\n\n# 数据预处理\nX = data.drop([&#39;time&#39;, &#39;distance&#39;, &#39;cost&#39;], axis=1)\ny = data[&#39;cost&#39;]\n\n# 数据分割\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# 模型训练\nmodel = RandomForestRegressor(n_estimators=100, random_state=42)\nmodel.fit(X_train, y_train)\n\n# 预测\ny_pred = model.predict(X_test)</code></pre>\n<h3 id=\"433-优化\">4.3.3 优化</h3>\n<pre><code class=\"language-python\">from scipy.optimize import linprog\n\n# 定义目标函数\ndef objective_function(x):\nreturn np.sum(x)\n\n# 定义约束条件\nA = np.array([[1, 1], [1, 2], [2, 1], [2, 2]])\nb = np.array([100, 200, 300, 400])\n\n# 优化\nresult = linprog(objective_function, A_ub=A, b_ub=b)\n\n# 解析\nx = result.x</code></pre>\n<h1 id=\"5未来趋势与挑战\">5.未来趋势与挑战</h1>\n<p>物流服务在未来将面临更多的机遇和挑战。机遇包括：</p>\n<ol>\n<li>物流服务将更加智能化，通过人工智能技术提高运输效率和降低成本。</li>\n<li>物流服务将更加个性化，通过数据分析和预测为消费者提供更准确的服务。</li>\n<li>物流服务将更加环保，通过优化运输路线和资源分配减少碳排放。</li>\n</ol>\n<p>挑战包括：</p>\n<ol>\n<li>物流服务需要更加灵活的运输方式，以适应不断变化的市场需求。</li>\n<li>物流服务需要更加高效的资源分配方法，以提高运输效率和降低成本。</li>\n<li>物流服务需要更加安全的运输环境，以保护商品免受损坏和盗窃等风险。</li>\n</ol>\n<p>为了应对这些挑战，物流服务需要不断创新和发展，以提供更加高质量和高效的服务。</p>\n<h1 id=\"6附加常见问题与答案\">6.附加常见问题与答案</h1>\n<h2 id=\"61-物流服务如何实现更高效的运输路线规划？\">6.1 物流服务如何实现更高效的运输路线规划？</h2>\n<p>物流服务可以通过人工智能技术实现更高效的运输路线规划。这些技术包括数据分析、预测和优化等。通过分析历史运输数据，预测未来需求，并优化运输路线和资源分配，物流服务可以更有效地规划运输路线，从而提高运输效率和降低成本。</p>\n<h2 id=\"62-物流服务如何实现更高效的资源分配？\">6.2 物流服务如何实现更高效的资源分配？</h2>\n<p>物流服务可以通过人工智能技术实现更高效的资源分配。这些技术包括数据分析、预测和优化等。通过分析历史运输数据，预测未来需求，并优化资源分配，物流服务可以更有效地管理物流资源，从而提高运输效率和降低成本。</p>\n<h2 id=\"63-物流服务如何实现更准确的运输预测？\">6.3 物流服务如何实现更准确的运输预测？</h2>\n<p>物流服务可以通过人工智能技术实现更准确的运输预测。这些技术包括数据分析、预测和优化等。通过分析历史运输数据，预测未来需求，并优化运输路线和资源分配，物流服务可以更准确地预测运输时间、成本和质量等因素，从而提高运输效率和降低成本。</p>\n<h1 id=\"7结论\">7.结论</h1>\n<p>物流服务在未来将更加智能化、个性化和环保。为了应对这些挑战，物流服务需要不断创新和发展，以提供更加高质量和高效的服务。通过人工智能技术，物流服务可以实现更高效的运输路线规划、资源分配和运输预测等，从而提高运输效率和降低成本，满足消费者的需求，提高消费者满意度。</p>\n<h1 id=\"参考文献\">参考文献</h1>\n<p>[1] 物流服务的智能化与人工智能技术的应用。\n[2] 物流运输预测的数学模型与优化方法。\n[3] 物流资源分配的数据分析与预测。\n[4] 物流路线规划的数据分析与优化。\n[5] 物流服务的未来趋势与挑战。\n[6] 物流服务如何实现更高效的运输路线规划？\n[7] 物流服务如何实现更高效的资源分配？\n[8] 物流服务如何实现更准确的运输预测？\n```</p>\n", "status": 1, "cleanedContent": "<h1 id=\"1背景介绍\">1.背景介绍</h1> <p>物联网（Internet of Things，简称IoT）是指通过互联互通的传感器、设备、计算机等实现物体间的信息传递，使物体能够与人类进行交互的一种信息技术。物联网的发展为物流服务提供了更多的智能化机会，例如物流服务的智能化、自动化和优化。</p> <p>物流服务是指物品从生产厂家出发，经过一系列的运输和处理后，最终到达消费者手中的过程。物流服务的智能化可以通过人工智能技术来实现，例如通过数据分析、预测和优化来提高物流服务的效率和质量。</p> <p>人工智能（Artificial Intelligence，简称AI）是指通过计算机程序模拟人类智能的能力，例如学习、推理和决策等。人工智能技术可以帮助物流服务更好地理解和预测消费者的需求，从而提供更个性化的服务。</p> <p>在物流服务中，人工智能可以用于多种应用，例如物流路线规划、物流资源分配、物流运输预测等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <h1 id=\"2核心概念与联系\">2.核心概念与联系</h1> <h2 id=\"21-物联网\">2.1 物联网</h2> <p>物联网是一种信息技术，它通过互联互通的传感器、设备、计算机等实现物体间的信息传递，使物体能够与人类进行交互。物联网可以用于多种应用，例如智能家居、智能交通、智能城市等。</p> <p>物联网可以通过网络连接的设备和传感器来收集数据，例如温度、湿度、气压等。这些数据可以用于物流服务的智能化，例如物流路线规划、物流资源分配、物流运输预测等。</p> <h2 id=\"22-人工智能\">2.2 人工智能</h2> <p>人工智能是一种计算机程序，它可以模拟人类智能的能力，例如学习、推理和决策等。人工智能可以用于多种应用，例如自动驾驶、语音识别、图像识别等。</p> <p>人工智能可以通过算法和数据来学习和决策，例如机器学习、深度学习等。这些算法和数据可以用于物流服务的智能化，例如物流路线规划、物流资源分配、物流运输预测等。</p> <h2 id=\"23-物流服务\">2.3 物流服务</h2> <p>物流服务是指物品从生产厂家出发，经过一系列的运输和处理后，最终到达消费者手中的过程。物流服务的智能化可以通过人工智能技术来实现，例如通过数据分析、预测和优化来提高物流服务的效率和质量。</p> <p>物流服务可以用于多种应用，例如电商、快递、物流等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <h1 id=\"3核心算法原理和具体操作步骤以及数学模型公式详细讲解\">3.核心算法原理和具体操作步骤以及数学模型公式详细讲解</h1> <h2 id=\"31-物流路线规划\">3.1 物流路线规划</h2> <p>物流路线规划是指根据物流服务的需求和条件，选择最佳的物流路线和路径。物流路线规划可以用于多种应用，例如物流运输、物流配送、物流仓库等。</p> <p>物流路线规划可以通过人工智能技术来实现，例如通过数据分析、预测和优化来选择最佳的物流路线和路径。这些技术可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <h3 id=\"数据分析\">3.1.1 数据分析</h3> <p>数据分析是指通过收集、清洗、分析和可视化的方法，对物流数据进行深入的研究和探讨。数据分析可以帮助物流服务更好地理解和预测消费者的需求，从而提供更个性化的服务。</p> <p>数据分析可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <h3 id=\"预测\">3.1.2 预测</h3> <p>预测是指通过收集、清洗、分析和可视化的方法，对物流数据进行预测和预报。预测可以帮助物流服务更好地预测消费者的需求，从而提供更个性化的服务。</p> <p>预测可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <h3 id=\"优化\">3.1.3 优化</h3> <p>优化是指通过收集、清洗、分析和可视化的方法，对物流数据进行优化和调整。优化可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <p>优化可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <h3 id=\"数学模型公式\">3.1.4 数学模型公式</h3> <p>物流路线规划可以通过数学模型来描述和解决。数学模型可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <p>数学模型可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <p>数学模型可以通过多种方法来解决，例如线性规划、非线性规划、动态规划等。这些方法可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <h2 id=\"32-物流资源分配\">3.2 物流资源分配</h2> <p>物流资源分配是指根据物流服务的需求和条件，选择最佳的物流资源和分配方式。物流资源分配可以用于多种应用，例如物流运输、物流配送、物流仓库等。</p> <p>物流资源分配可以通过人工智能技术来实现，例如通过数据分析、预测和优化来选择最佳的物流资源和分配方式。这些技术可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <h3 id=\"数据分析\">3.2.1 数据分析</h3> <p>数据分析是指通过收集、清洗、分析和可视化的方法，对物流数据进行深入的研究和探讨。数据分析可以帮助物流服务更好地理解和预测消费者的需求，从而提供更个性化的服务。</p> <p>数据分析可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <h3 id=\"预测\">3.2.2 预测</h3> <p>预测是指通过收集、清洗、分析和可视化的方法，对物流数据进行预测和预报。预测可以帮助物流服务更好地预测消费者的需求，从而提供更个性化的服务。</p> <p>预测可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <h3 id=\"优化\">3.2.3 优化</h3> <p>优化是指通过收集、清洗、分析和可视化的方法，对物流数据进行优化和调整。优化可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <p>优化可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <h3 id=\"数学模型公式\">3.2.4 数学模型公式</h3> <p>物流资源分配可以通过数学模型来描述和解决。数学模型可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <p>数学模型可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <p>数学模型可以通过多种方法来解决，例如线性规划、非线性规划、动态规划等。这些方法可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <h2 id=\"33-物流运输预测\">3.3 物流运输预测</h2> <p>物流运输预测是指根据物流服务的需求和条件，预测物流运输的时间、成本和质量等因素。物流运输预测可以用于多种应用，例如物流运输、物流配送、物流仓库等。</p> <p>物流运输预测可以通过人工智能技术来实现，例如通过数据分析、预测和优化来预测物流运输的时间、成本和质量等因素。这些技术可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <h3 id=\"数据分析\">3.3.1 数据分析</h3> <p>数据分析是指通过收集、清洗、分析和可视化的方法，对物流数据进行深入的研究和探讨。数据分析可以帮助物流服务更好地理解和预测消费者的需求，从而提供更个性化的服务。</p> <p>数据分析可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <h3 id=\"预测\">3.3.2 预测</h3> <p>预测是指通过收集、清洗、分析和可视化的方法，对物流数据进行预测和预报。预测可以帮助物流服务更好地预测消费者的需求，从而提供更个性化的服务。</p> <p>预测可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <h3 id=\"优化\">3.3.3 优化</h3> <p>优化是指通过收集、清洗、分析和可视化的方法，对物流数据进行优化和调整。优化可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <p>优化可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <h3 id=\"数学模型公式\">3.3.4 数学模型公式</h3> <p>物流运输预测可以通过数学模型来描述和解决。数学模型可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <p>数学模型可以用于多种应用，例如物流运输、物流配送、物流仓库等。这些应用可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <p>数学模型可以通过多种方法来解决，例如线性规划、非线性规划、动态规划等。这些方法可以帮助物流服务更好地管理物流资源，提高物流效率，降低物流成本，提高物流服务质量，从而提高消费者满意度。</p> <h1 id=\"4具体代码实例以及详细解释\">4.具体代码实例以及详细解释</h1> <h2 id=\"41-物流路线规划\">4.1 物流路线规划</h2> <h3 id=\"数据分析\">4.1.1 数据分析</h3> <pre><code class=\"language-python\">import pandas as pd import numpy as np # 读取数据 data = pd.read_csv('data.csv') # 数据清洗 data = data.dropna() # 数据分析 data['time'] = data['time'].astype('datetime64') data['distance'] = data['distance'].astype(np.float64) data['cost'] = data['cost'].astype(np.float64) # 数据可视化 data.plot()</code></pre> <h3 id=\"预测\">4.1.2 预测</h3> <pre><code class=\"language-python\">from sklearn.model_selection import train_test_split from sklearn.ensemble import RandomForestRegressor # 数据预处理 X = data.drop(['time', 'distance', 'cost'], axis=1) y = data['cost'] # 数据分割 X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42) # 模型训练 model = RandomForestRegressor(n_estimators=100, random_state=42) model.fit(X_train, y_train) # 预测 y_pred = model.predict(X_test)</code></pre> <h3 id=\"优化\">4.1.3 优化</h3> <pre><code class=\"language-python\">from scipy.optimize import linprog # 定义目标函数 def objective_function(x): return np.sum(x) # 定义约束条件 A = np.array([[1, 1], [1, 2], [2, 1], [2, 2]]) b = np.array([100, 200, 300, 400]) # 优化 result = linprog(objective_function, A_ub=A, b_ub=b) # 解析 x = result.x</code></pre> <h2 id=\"42-物流资源分配\">4.2 物流资源分配</h2> <h3 id=\"数据分析\">4.2.1 数据分析</h3> <pre><code class=\"language-python\">import pandas as pd import numpy as np # 读取数据 data = pd.read_csv('data.csv') # 数据清洗 data = data.dropna() # 数据分析 data['time'] = data['time'].astype('datetime64') data['distance'] = data['distance'].astype(np.float64) data['cost'] = data['cost'].astype(np.float64) # 数据可视化 data.plot()</code></pre> <h3 id=\"预测\">4.2.2 预测</h3> <pre><code class=\"language-python\">from sklearn.model_selection import train_test_split from sklearn.ensemble import RandomForestRegressor # 数据预处理 X = data.drop(['time', 'distance', 'cost'], axis=1) y = data['cost'] # 数据分割 X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42) # 模型训练 model = RandomForestRegressor(n_estimators=100, random_state=42) model.fit(X_train, y_train) # 预测 y_pred = model.predict(X_test)</code></pre> <h3 id=\"优化\">4.2.3 优化</h3> <pre><code class=\"language-python\">from scipy.optimize import linprog # 定义目标函数 def objective_function(x): return np.sum(x) # 定义约束条件 A = np.array([[1, 1], [1, 2], [2, 1], [2, 2]]) b = np.array([100, 200, 300, 400]) # 优化 result = linprog(objective_function, A_ub=A, b_ub=b) # 解析 x = result.x</code></pre> <h2 id=\"43-物流运输预测\">4.3 物流运输预测</h2> <h3 id=\"数据分析\">4.3.1 数据分析</h3> <pre><code class=\"language-python\">import pandas as pd import numpy as np # 读取数据 data = pd.read_csv('data.csv') # 数据清洗 data = data.dropna() # 数据分析 data['time'] = data['time'].astype('datetime64') data['distance'] = data['distance'].astype(np.float64) data['cost'] = data['cost'].astype(np.float64) # 数据可视化 data.plot()</code></pre> <h3 id=\"预测\">4.3.2 预测</h3> <pre><code class=\"language-python\">from sklearn.model_selection import train_test_split from sklearn.ensemble import RandomForestRegressor # 数据预处理 X = data.drop(['time', 'distance', 'cost'], axis=1) y = data['cost'] # 数据分割 X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42) # 模型训练 model = RandomForestRegressor(n_estimators=100, random_state=42) model.fit(X_train, y_train) # 预测 y_pred = model.predict(X_test)</code></pre> <h3 id=\"优化\">4.3.3 优化</h3> <pre><code class=\"language-python\">from scipy.optimize import linprog # 定义目标函数 def objective_function(x): return np.sum(x) # 定义约束条件 A = np.array([[1, 1], [1, 2], [2, 1], [2, 2]]) b = np.array([100, 200, 300, 400]) # 优化 result = linprog(objective_function, A_ub=A, b_ub=b) # 解析 x = result.x</code></pre> <h1 id=\"5未来趋势与挑战\">5.未来趋势与挑战</h1> <p>物流服务在未来将面临更多的机遇和挑战。机遇包括：</p> <ol> <li>物流服务将更加智能化，通过人工智能技术提高运输效率和降低成本。</li> <li>物流服务将更加个性化，通过数据分析和预测为消费者提供更准确的服务。</li> <li>物流服务将更加环保，通过优化运输路线和资源分配减少碳排放。</li> </ol> <p>挑战包括：</p> <ol> <li>物流服务需要更加灵活的运输方式，以适应不断变化的市场需求。</li> <li>物流服务需要更加高效的资源分配方法，以提高运输效率和降低成本。</li> <li>物流服务需要更加安全的运输环境，以保护商品免受损坏和盗窃等风险。</li> </ol> <p>为了应对这些挑战，物流服务需要不断创新和发展，以提供更加高质量和高效的服务。</p> <h1 id=\"6附加常见问题与答案\">6.附加常见问题与答案</h1> <h2 id=\"61-物流服务如何实现更高效的运输路线规划？\">6.1 物流服务如何实现更高效的运输路线规划？</h2> <p>物流服务可以通过人工智能技术实现更高效的运输路线规划。这些技术包括数据分析、预测和优化等。通过分析历史运输数据，预测未来需求，并优化运输路线和资源分配，物流服务可以更有效地规划运输路线，从而提高运输效率和降低成本。</p> <h2 id=\"62-物流服务如何实现更高效的资源分配？\">6.2 物流服务如何实现更高效的资源分配？</h2> <p>物流服务可以通过人工智能技术实现更高效的资源分配。这些技术包括数据分析、预测和优化等。通过分析历史运输数据，预测未来需求，并优化资源分配，物流服务可以更有效地管理物流资源，从而提高运输效率和降低成本。</p> <h2 id=\"63-物流服务如何实现更准确的运输预测？\">6.3 物流服务如何实现更准确的运输预测？</h2> <p>物流服务可以通过人工智能技术实现更准确的运输预测。这些技术包括数据分析、预测和优化等。通过分析历史运输数据，预测未来需求，并优化运输路线和资源分配，物流服务可以更准确地预测运输时间、成本和质量等因素，从而提高运输效率和降低成本。</p> <h1 id=\"7结论\">7.结论</h1> <p>物流服务在未来将更加智能化、个性化和环保。为了应对这些挑战，物流服务需要不断创新和发展，以提供更加高质量和高效的服务。通过人工智能技术，物流服务可以实现更高效的运输路线规划、资源分配和运输预测等，从而提高运输效率和降低成本，满足消费者的需求，提高消费者满意度。</p> <h1 id=\"参考文献\">参考文献</h1> <p>[1] 物流服务的智能化与人工智能技术的应用。 [2] 物流运输预测的数学模型与优化方法。 [3] 物流资源分配的数据分析与预测。 [4] 物流路线规划的数据分析与优化。 [5] 物流服务的未来趋势与挑战。 [6] 物流服务如何实现更高效的运输路线规划？ [7] 物流服务如何实现更高效的资源分配？ [8] 物流服务如何实现更准确的运输预测？"}
{"url": "https://blog.csdn.net/weixin_47085703/article/details/134923966", "article_id": 134923966, "username": "weixin_47085703", "title": "博客摘录「 GetResponse() 基础连接已经关闭：服务器关闭了本应保持活动状态的连接」2023年12月11日", "body": "<p>KeepAlive</p>\n", "status": 2, "cleanedContent": ""}
{"url": "https://blog.csdn.net/wj3298918/article/details/134924057", "article_id": 134924057, "username": "wj3298918", "title": "博客摘录「 HTTPS自签证书SSL的作成」2023年12月11日", "body": "<p>-subj \"/C=CN/ST=liaoming/L=dalian/O=bly/OU=kaifa/CN=openssl\"</p>\n", "status": 2, "cleanedContent": ""}
